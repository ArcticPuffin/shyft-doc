<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="timeseries_8cpp" kind="file">
    <compoundname>timeseries.cpp</compoundname>
    <includes refid="api_2timeseries_8h" local="yes">timeseries.h</includes>
    <includes local="no">dlib/statistics.h</includes>
    <incdepgraph>
      <node id="1543">
        <label>core/time_axis.h</label>
        <link refid="time__axis_8h"/>
        <childnode refid="1544" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
      </node>
      <node id="1532">
        <label>functional</label>
      </node>
      <node id="1525">
        <label>limits</label>
      </node>
      <node id="1540">
        <label>core/utctime_utilities.h</label>
        <link refid="utctime__utilities_8h"/>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1541" relation="include">
        </childnode>
        <childnode refid="1542" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
      </node>
      <node id="1542">
        <label>cmath</label>
      </node>
      <node id="1537">
        <label>stdexcept</label>
      </node>
      <node id="1529">
        <label>string</label>
      </node>
      <node id="1546">
        <label>compiler_compatiblity.h</label>
        <link refid="compiler__compatiblity_8h"/>
      </node>
      <node id="1528">
        <label>map</label>
      </node>
      <node id="1544">
        <label>exception</label>
      </node>
      <node id="1533">
        <label>ostream</label>
      </node>
      <node id="1545">
        <label>core/timeseries.h</label>
        <link refid="core_2timeseries_8h"/>
        <childnode refid="1546" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1548" relation="include">
        </childnode>
        <childnode refid="1524" relation="include">
        </childnode>
      </node>
      <node id="1538">
        <label>random</label>
      </node>
      <node id="1549">
        <label>dlib/statistics.h</label>
      </node>
      <node id="1539">
        <label>boost/range.hpp</label>
      </node>
      <node id="1536">
        <label>future</label>
      </node>
      <node id="1527">
        <label>vector</label>
      </node>
      <node id="1541">
        <label>time.h</label>
      </node>
      <node id="1522">
        <label>timeseries.h</label>
        <link refid="api_2timeseries_8h"/>
        <childnode refid="1523" relation="include">
        </childnode>
        <childnode refid="1540" relation="include">
        </childnode>
        <childnode refid="1543" relation="include">
        </childnode>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1534">
        <label>cerrno</label>
      </node>
      <node id="1547">
        <label>iostream</label>
      </node>
      <node id="1526">
        <label>cstddef</label>
      </node>
      <node id="1535">
        <label>thread</label>
      </node>
      <node id="1521">
        <label>/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/timeseries.cpp</label>
        <link refid="timeseries.cpp"/>
        <childnode refid="1522" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
      </node>
      <node id="1548">
        <label>type_traits</label>
      </node>
      <node id="1523">
        <label>core/core_pch.h</label>
        <link refid="core__pch_8h"/>
        <childnode refid="1524" relation="include">
        </childnode>
        <childnode refid="1525" relation="include">
        </childnode>
        <childnode refid="1526" relation="include">
        </childnode>
        <childnode refid="1527" relation="include">
        </childnode>
        <childnode refid="1528" relation="include">
        </childnode>
        <childnode refid="1529" relation="include">
        </childnode>
        <childnode refid="1530" relation="include">
        </childnode>
        <childnode refid="1531" relation="include">
        </childnode>
        <childnode refid="1532" relation="include">
        </childnode>
        <childnode refid="1533" relation="include">
        </childnode>
        <childnode refid="1534" relation="include">
        </childnode>
        <childnode refid="1535" relation="include">
        </childnode>
        <childnode refid="1536" relation="include">
        </childnode>
        <childnode refid="1537" relation="include">
        </childnode>
        <childnode refid="1538" relation="include">
        </childnode>
        <childnode refid="1539" relation="include">
        </childnode>
      </node>
      <node id="1531">
        <label>algorithm</label>
      </node>
      <node id="1530">
        <label>cstring</label>
      </node>
      <node id="1524">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceshyft">shyft</innernamespace>
    <innernamespace refid="namespaceshyft_1_1api">shyft::api</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="api_2timeseries_8h" kindref="compound">timeseries.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlib/statistics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">shyft{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">api<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iop_add(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>b;}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iop_sub(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>-<sp/>b;}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iop_div(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a/b;}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iop_mul(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a*b;}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iop_min(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1a4da3af69cc0ba11f60db97a28728d377" kindref="member">std::min</ref>(a,b);}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iop_max(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1abc7f4a5025d574f442699be4dec03001" kindref="member">std::max</ref>(a,b);}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>operators<sp/>and<sp/>functions<sp/>to<sp/>the<sp/>apoint_ts<sp/>class,<sp/>of<sp/>all<sp/>variants<sp/>that<sp/>we<sp/>want<sp/>to<sp/>expose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespaceshyft_1_1api_1a1cc1269af51a9ab1043b7c5f907d7536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a1cc1269af51a9ab1043b7c5f907d7536" kindref="member">average</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>ts,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref>&amp;<sp/>ta</highlight><highlight class="comment">/*fx-type<sp/>*/</highlight><highlight class="normal">)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;average_ts&gt;(ta,ts));}</highlight></codeline>
<codeline lineno="14" refid="namespaceshyft_1_1api_1ae80fc7b81d1f7b38520f196ef70c72f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a1cc1269af51a9ab1043b7c5f907d7536" kindref="member">average</ref>(<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;&amp;<sp/>ts,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref>&amp;<sp/>ta)<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;average_ts&gt;(ta,std::move(ts)));}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespaceshyft_1_1api_1abc8be68c104b8ce6fde4b68f4c8a1724" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1abc8be68c104b8ce6fde4b68f4c8a1724" kindref="member">accumulate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref>&amp;<sp/>ta</highlight><highlight class="comment">/*fx-type<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;accumulate_ts&gt;(ta,<sp/>ts));<sp/>}</highlight></codeline>
<codeline lineno="17" refid="namespaceshyft_1_1api_1a9365c5a67264d2b0d7d8f9e2179d56f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1abc8be68c104b8ce6fde4b68f4c8a1724" kindref="member">accumulate</ref>(<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;&amp;<sp/>ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref>&amp;<sp/>ta)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;accumulate_ts&gt;(ta,<sp/>std::move(ts)));<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespaceshyft_1_1api_1aae9ff29d8f36ef9422eaa4514e56eeb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1aae9ff29d8f36ef9422eaa4514e56eeb7" kindref="member">create_periodic_pattern_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>pattern,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt,<sp/><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>pattern_t0,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref>&amp;<sp/>ta)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(make_shared&lt;periodic_ts&gt;(pattern,<sp/>dt,<sp/>pattern_t0,<sp/>ta));<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespaceshyft_1_1api_1a0829bd20be2d34873b57149555f7d1c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a0829bd20be2d34873b57149555f7d1c1" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(<sp/>lhs,iop_add,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="22" refid="namespaceshyft_1_1api_1aa0b8b065c1f17cd5c847ab247312ffc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a0829bd20be2d34873b57149555f7d1c1" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts_scalar&gt;(<sp/>lhs,iop_add,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="23" refid="namespaceshyft_1_1api_1a56e64a6dd8556efc91dfae8766e17fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a0829bd20be2d34873b57149555f7d1c1" kindref="member">operator+</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>lhs,iop_add,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespaceshyft_1_1api_1ad3907fce4fcdf53e4f3057016343fa33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ad3907fce4fcdf53e4f3057016343fa33" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(<sp/>lhs,iop_sub,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="26" refid="namespaceshyft_1_1api_1aca5883fb353332d1578a4a1b154397f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ad3907fce4fcdf53e4f3057016343fa33" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts_scalar&gt;(<sp/>lhs,iop_sub,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="27" refid="namespaceshyft_1_1api_1abd2b6fb3a66d16839c7f420829ef0dc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ad3907fce4fcdf53e4f3057016343fa33" kindref="member">operator-</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>lhs,iop_sub,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="28" refid="namespaceshyft_1_1api_1a103b172f4281114663ac4b6135d68de0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ad3907fce4fcdf53e4f3057016343fa33" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>-1.0,iop_mul,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespaceshyft_1_1api_1a8228b684f975416fc858ec3deb1c60f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a8228b684f975416fc858ec3deb1c60f7" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(<sp/>lhs,iop_div,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="31" refid="namespaceshyft_1_1api_1ad517f1457caaa7729ecc35ad3bfacc73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a8228b684f975416fc858ec3deb1c60f7" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts_scalar&gt;(<sp/>lhs,iop_div,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="32" refid="namespaceshyft_1_1api_1aa3ac735ea9d48f7f6ca841a3f909d067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a8228b684f975416fc858ec3deb1c60f7" kindref="member">operator/</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>lhs,iop_div,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceshyft_1_1api_1aa0848b8c5757f64246b015543103a475" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1aa0848b8c5757f64246b015543103a475" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(<sp/>lhs,iop_mul,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="35" refid="namespaceshyft_1_1api_1a6e3a7e30a6a2ffdc6e3f9f0aaa9f5626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1aa0848b8c5757f64246b015543103a475" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts_scalar&gt;(<sp/>lhs,iop_mul,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="36" refid="namespaceshyft_1_1api_1a4434e0c52d24c81ce991fdbe6bb1650a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1aa0848b8c5757f64246b015543103a475" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>lhs,iop_mul,rhs<sp/>));<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" kindref="member">max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(<sp/>lhs,iop_max,rhs<sp/>));}</highlight></codeline>
<codeline lineno="40" refid="namespaceshyft_1_1api_1ac2df98907abb5a21c5b2efc082f3271d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" kindref="member">max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts_scalar&gt;(<sp/>lhs,iop_max,rhs<sp/>));}</highlight></codeline>
<codeline lineno="41" refid="namespaceshyft_1_1api_1abc7f4a5025d574f442699be4dec03001" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" kindref="member">max</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>lhs,iop_max,rhs<sp/>));}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" kindref="member">min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts&gt;(<sp/>lhs,iop_min,rhs<sp/>));}</highlight></codeline>
<codeline lineno="44" refid="namespaceshyft_1_1api_1a85082fe9d2a703e537b342df2a87dad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" kindref="member">min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>lhs,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_ts_scalar&gt;(<sp/>lhs,iop_min,rhs<sp/>));}</highlight></codeline>
<codeline lineno="45" refid="namespaceshyft_1_1api_1a4da3af69cc0ba11f60db97a28728d377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" kindref="member">min</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>rhs)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(std::make_shared&lt;abin_op_scalar_ts&gt;(<sp/>lhs,iop_min,rhs<sp/>));}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structshyft_1_1api_1_1abin__op__ts_1a29ec40b3cce1ff2da668399f9ed57afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1abin__op__ts_1a29ec40b3cce1ff2da668399f9ed57afa" kindref="member">abin_op_ts::value_at</ref>(<ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="structshyft_1_1api_1_1abin__op__ts_1aa629242be92f723175ceb1bf4d6742b3" kindref="member">ta</ref>.<ref refid="structshyft_1_1time__axis_1_1generic__dt_1af851b1468079d2427e638eaf2af5b639" kindref="member">total_period</ref>().<ref refid="structshyft_1_1core_1_1utcperiod_1a686df27c357b1d84e0d0cc4eceade68b" kindref="member">contains</ref>(t))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1abb17c53f5f6d6eb8901cd2491680cba4" kindref="member">nan</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1abin__op__ts_1ac7be6ad975b78d1779f7d16172b49b23" kindref="member">op</ref>(<sp/><ref refid="structshyft_1_1api_1_1abin__op__ts_1a727cf1691ae2ceb57007d4372f07b492" kindref="member">lhs</ref>(t),<ref refid="structshyft_1_1api_1_1abin__op__ts_1acc6d8c53f493a31bf37b95d746492912" kindref="member">rhs</ref>(t)<sp/>);</highlight><highlight class="comment">//<sp/>this<sp/>might<sp/>cost<sp/>a<sp/>2xbin-search<sp/>if<sp/>not<sp/>the<sp/>underlying<sp/>ts<sp/>have<sp/>smart<sp/>incremental<sp/>search<sp/>(at<sp/>the<sp/>cost<sp/>of<sp/>thread<sp/>safety)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structshyft_1_1api_1_1abin__op__ts_1a2a51626dd496c6ab6fe6ed18c903fc22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1abin__op__ts_1a2a51626dd496c6ab6fe6ed18c903fc22" kindref="member">abin_op_ts::values</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>r;r.reserve(<ref refid="structshyft_1_1api_1_1abin__op__ts_1aa629242be92f723175ceb1bf4d6742b3" kindref="member">ta</ref>.<ref refid="structshyft_1_1time__axis_1_1generic__dt_1a61633063c5efb31b6fcd6b4748efb46a" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;<ref refid="structshyft_1_1api_1_1abin__op__ts_1aa629242be92f723175ceb1bf4d6742b3" kindref="member">ta</ref>.<ref refid="structshyft_1_1time__axis_1_1generic__dt_1a61633063c5efb31b6fcd6b4748efb46a" kindref="member">size</ref>();++i)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.push_back(<ref refid="structshyft_1_1api_1_1abin__op__ts_1a5e9be21cc53de6e583d87da536be1843" kindref="member">value</ref>(i));</highlight><highlight class="comment">//TODO:<sp/>improve<sp/>speed<sp/>using<sp/>accessors<sp/>with<sp/>ix-hint<sp/>for<sp/>lhs/rhs<sp/>stepwise<sp/>traversal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(r);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implement<sp/>popular<sp/>ct<sp/>for<sp/>apoint_ts<sp/>to<sp/>make<sp/>it<sp/>easy<sp/>to<sp/>expose<sp/>&amp;<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classshyft_1_1api_1_1apoint__ts_1aa971d17336cb781936435436bc78cb38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;<sp/>ta,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fill_value,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:ts(std::make_shared&lt;<ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>&gt;(ta,fill_value,point_fx))<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65" refid="classshyft_1_1api_1_1apoint__ts_1a89e5b1fde4fa9ee818970f3ab7cf4930" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;<sp/>ta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>values,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:ts(std::make_shared&lt;<ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>&gt;(ta,values,point_fx))<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68" refid="classshyft_1_1api_1_1apoint__ts_1a150f0505783cc30c3e04f2c91241c845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;<sp/>ta,std::vector&lt;double&gt;&amp;&amp;<sp/>values,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:ts(std::make_shared&lt;<ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>&gt;(ta,std::move(values),point_fx))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>python<sp/>needs<sp/>these:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classshyft_1_1api_1_1apoint__ts_1ac1ba6c0ac5585c7cd0cbd3a4b206a9a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1fixed__dt" kindref="compound">time_axis::fixed_dt</ref>&amp;<sp/>ta,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fill_value,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(time_axis::generic_dt(ta),fill_value,point_fx)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76" refid="classshyft_1_1api_1_1apoint__ts_1af28d29fdbc26420c8f82c50de3873bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1fixed__dt" kindref="compound">time_axis::fixed_dt</ref>&amp;<sp/>ta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>values,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(time_axis::generic_dt(ta),values,point_fx)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>python<sp/>needs<sp/>these:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classshyft_1_1api_1_1apoint__ts_1ab65c67c4e5a0525ecde70ea6f6d07469" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1point__dt" kindref="compound">time_axis::point_dt</ref>&amp;<sp/>ta,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fill_value,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(time_axis::generic_dt(ta),fill_value,point_fx)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84" refid="classshyft_1_1api_1_1apoint__ts_1ac7f33aa560b6cb245a6cd2991d3d5199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1point__dt" kindref="compound">time_axis::point_dt</ref>&amp;<sp/>ta,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>values,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(time_axis::generic_dt(ta),values,point_fx)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87" refid="classshyft_1_1api_1_1apoint__ts_1a7e1d5d24f6b0e900fa5f9878a397dea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">rts_t</ref><sp/>&amp;rts):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(time_axis::generic_dt(rts.ta),rts.v,rts.point_interpretation())</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classshyft_1_1api_1_1apoint__ts_1a2e04d0c73c0ce9595b0ada73e48de848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>pattern,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;<sp/>ta)<sp/>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(make_shared&lt;<ref refid="structshyft_1_1timeseries_1_1periodic__ts" kindref="compound">periodic_ts</ref>&gt;(pattern,<sp/>dt,<sp/>ta))<sp/>{}</highlight></codeline>
<codeline lineno="93" refid="classshyft_1_1api_1_1apoint__ts_1a69e078eac108ddbfaecad46fb986014c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>pattern,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt,<sp/><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>pattern_t0,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;<sp/>ta)<sp/>:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(make_shared&lt;<ref refid="structshyft_1_1timeseries_1_1periodic__ts" kindref="compound">periodic_ts</ref>&gt;(pattern,<sp/>dt,pattern_t0,ta))<sp/>{}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classshyft_1_1api_1_1apoint__ts_1a92b75e49a3a85091455db60ca1b19c83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(<ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;&amp;<sp/>ta,std::vector&lt;double&gt;&amp;&amp;<sp/>values,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:ts(std::make_shared&lt;<ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>&gt;(std::move(ta),std::move(values),point_fx))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99" refid="classshyft_1_1api_1_1apoint__ts_1abdc4d25a069da1e86abe8157fa22667b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts::apoint_ts</ref>(<ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>&amp;&amp;<sp/>ta,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fill_value,<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>point_fx)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:ts(std::make_shared&lt;<ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>&gt;(std::move(ta),fill_value,point_fx))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103" refid="classshyft_1_1api_1_1apoint__ts_1a9046821addede16a7673dad85b3bc500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a9046821addede16a7673dad85b3bc500" kindref="member">apoint_ts::average</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref><sp/>&amp;ta)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1a1cc1269af51a9ab1043b7c5f907d7536" kindref="member">shyft::api::average</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,ta);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106" refid="classshyft_1_1api_1_1apoint__ts_1a9fab2440c23d4af2130ac22e960ced8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a9fab2440c23d4af2130ac22e960ced8f" kindref="member">apoint_ts::accumulate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref><sp/>&amp;ta)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1abc8be68c104b8ce6fde4b68f4c8a1724" kindref="member">shyft::api::accumulate</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ta);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109" refid="classshyft_1_1api_1_1apoint__ts_1ace12264611d4ad5b00fa7da31c6049d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1ace12264611d4ad5b00fa7da31c6049d7" kindref="member">apoint_ts::time_shift</ref>(<ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1a5fbb4f0820000cf99c149979589106f6" kindref="member">shyft::api::time_shift</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>dt);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="classshyft_1_1api_1_1apoint__ts_1a4e6463ddcdcc56ad064306c0b2a353be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;apoint_ts&gt;<sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a4e6463ddcdcc56ad064306c0b2a353be" kindref="member">apoint_ts::partition_by</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1calendar" kindref="compound">calendar</ref>&amp;<sp/>cal,<sp/><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>t,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>partition_interval,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_partitions,<sp/><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>common_t0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>very<sp/>rudimentary<sp/>argument<sp/>checks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_partitions<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;n_partitions<sp/>should<sp/>be<sp/>&gt;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partition_interval<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;partition_interval<sp/>should<sp/>be<sp/>&gt;<sp/>0,<sp/>typically<sp/>Calendar::YEAR|MONTH|WEEK|DAY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mk_raw_time_shift<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>ts,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt)-&gt;<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a971d195ec6f29ffcd6b7cdffe9edd941" kindref="member">apoint_ts</ref>(std::make_shared&lt;shyft::api::time_shift_ts&gt;(ts,<sp/>dt));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shyft::timeseries::partition_by&lt;apoint_ts&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>cal,<sp/>t,partition_interval,<sp/>n_partitions,<sp/>common_t0,<sp/>mk_raw_time_shift);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classshyft_1_1api_1_1apoint__ts_1a0671d85163a851833f33c236b3c058df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a0671d85163a851833f33c236b3c058df" kindref="member">apoint_ts::set</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref><sp/>*gpts=</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ts.get());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gpts)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;apoint_ts::set(i,x)<sp/>only<sp/>allowed<sp/>for<sp/>ts<sp/>of<sp/>non-expression<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpts-&gt;<ref refid="structshyft_1_1api_1_1gpoint__ts_1a90b34888fcf97ab46d07bba1ea64e8b4" kindref="member">set</ref>(i,x);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131" refid="classshyft_1_1api_1_1apoint__ts_1a4a5939b8540a146fb80f98fdd3be243f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a4a5939b8540a146fb80f98fdd3be243f" kindref="member">apoint_ts::fill</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref><sp/>*gpts=</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ts.get());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gpts)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;apoint_ts::fill(x)<sp/>only<sp/>allowed<sp/>for<sp/>ts<sp/>of<sp/>non-expression<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpts-&gt;<ref refid="structshyft_1_1api_1_1gpoint__ts_1ae2aa7e87d0d8953939d946780d905214" kindref="member">fill</ref>(x);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137" refid="classshyft_1_1api_1_1apoint__ts_1a44252de65974b7b78f7f89427b2662f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a44252de65974b7b78f7f89427b2662f7" kindref="member">apoint_ts::scale_by</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref><sp/>*gpts=</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1gpoint__ts" kindref="compound">gpoint_ts</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ts.get());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!gpts)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;apoint_ts::scale_by(x)<sp/>only<sp/>allowed<sp/>for<sp/>ts<sp/>of<sp/>non-expression<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpts-&gt;<ref refid="structshyft_1_1api_1_1gpoint__ts_1ad7606fce4a23935b3bae8777f1285ff4" kindref="member">scale_by</ref>(x);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classshyft_1_1api_1_1apoint__ts_1af909198be3e60df5259545c71c7bec24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1af909198be3e60df5259545c71c7bec24" kindref="member">apoint_ts::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ts.get()<sp/>==<sp/>other.ts.get())<sp/></highlight><highlight class="comment">//<sp/>equal<sp/>by<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>time-consuming<sp/>part,<sp/>equal<sp/>by<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SiH:<sp/>I<sp/>am<sp/>not<sp/>sure<sp/>if<sp/>this<sp/>is<sp/>ever<sp/>useful,<sp/>nevertheless<sp/>it&apos;s<sp/>doable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>that<sp/>it&apos;s<sp/>ok<sp/>with<sp/>the<sp/>zero-limit(not<sp/>generally<sp/>applicable!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zero_limit=1e-9;</highlight><highlight class="comment">//<sp/>in<sp/>hydrology,<sp/>this<sp/>is<sp/>usually<sp/>a<sp/>small<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ts-&gt;size()<sp/>!=<sp/>other.ts-&gt;size())</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;i&lt;ts-&gt;size();++i)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ts-&gt;time_axis().period(i)<sp/>!=<sp/>other.ts-&gt;time_axis().period(i))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(ts-&gt;value(i)<sp/>-<sp/>other.ts-&gt;value(i))<sp/>&gt;zero_limit)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classshyft_1_1api_1_1apoint__ts_1ab4bcb9f635cee218caafdf7aa7b530bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1ab4bcb9f635cee218caafdf7aa7b530bd" kindref="member">apoint_ts::max</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" kindref="member">shyft::api::max</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,a);}</highlight></codeline>
<codeline lineno="164" refid="classshyft_1_1api_1_1apoint__ts_1a176700b82a94f4e40c14036931024a29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a176700b82a94f4e40c14036931024a29" kindref="member">apoint_ts::min</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" kindref="member">shyft::api::min</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,a);}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classshyft_1_1api_1_1apoint__ts_1aa084accdf65c6c7d8e04499bcc22fcc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1ab4bcb9f635cee218caafdf7aa7b530bd" kindref="member">apoint_ts::max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" kindref="member">shyft::api::max</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,other);}</highlight></codeline>
<codeline lineno="167" refid="classshyft_1_1api_1_1apoint__ts_1a90f9f288bf548f10e686b4a16aaa413c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a176700b82a94f4e40c14036931024a29" kindref="member">apoint_ts::min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" kindref="member">shyft::api::min</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,other);}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classshyft_1_1api_1_1apoint__ts_1a75aa1a24e768e19abf62aa168512712b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1ab4bcb9f635cee218caafdf7aa7b530bd" kindref="member">apoint_ts::max</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1a81c1836a5ac9b48f80e21d4c7442b980" kindref="member">shyft::api::max</ref>(a,b);}</highlight></codeline>
<codeline lineno="170" refid="classshyft_1_1api_1_1apoint__ts_1ad3fea43125a477a0c68252ce07c8db4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1apoint__ts_1a176700b82a94f4e40c14036931024a29" kindref="member">apoint_ts::min</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;b){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1ae42ecf9cbd590fe15303d1bc36c3ae75" kindref="member">shyft::api::min</ref>(a,b);}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="namespaceshyft_1_1api_1ace68f18daf5cc4554b4d6666a14307f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;apoint_ts&gt;<sp/><ref refid="namespaceshyft_1_1api_1ace68f18daf5cc4554b4d6666a14307f2" kindref="member">percentiles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;apoint_ts&gt;&amp;<sp/>ts_list,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref>&amp;<sp/>ta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>percentile_list)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;apoint_ts&gt;<sp/>r;r.reserve(percentile_list.size());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--<sp/>use<sp/>core<sp/>calc<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp=<sp/><ref refid="namespaceshyft_1_1timeseries_1ac3338df219f328629f72ab4e5ab0a02f" kindref="member">shyft::timeseries::calculate_percentiles</ref>(ta,ts_list,percentile_list);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;ts:rp)<sp/>r.emplace_back(ta,std::move(ts.v),<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" kindref="member">POINT_AVERAGE_VALUE</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179" refid="namespaceshyft_1_1api_1ace19525ad1933b971135cce4150c4739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;apoint_ts&gt;<sp/><ref refid="namespaceshyft_1_1api_1ace68f18daf5cc4554b4d6666a14307f2" kindref="member">percentiles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;apoint_ts&gt;&amp;<sp/>ts_list,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1fixed__dt" kindref="compound">time_axis::fixed_dt</ref>&amp;<sp/>ta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>percentile_list)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1ace68f18daf5cc4554b4d6666a14307f2" kindref="member">percentiles</ref>(ts_list,<ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">time_axis::generic_dt</ref>(ta),percentile_list);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structshyft_1_1api_1_1abin__op__ts_1a5e9be21cc53de6e583d87da536be1843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1abin__op__ts_1a5e9be21cc53de6e583d87da536be1843" kindref="member">abin_op_ts::value</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==std::string::npos<sp/>||<sp/>i&gt;=<ref refid="structshyft_1_1api_1_1abin__op__ts_1aa629242be92f723175ceb1bf4d6742b3" kindref="member">ta</ref>.<ref refid="structshyft_1_1time__axis_1_1generic__dt_1a61633063c5efb31b6fcd6b4748efb46a" kindref="member">size</ref>()<sp/>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1abb17c53f5f6d6eb8901cd2491680cba4" kindref="member">nan</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1abin__op__ts_1a29ec40b3cce1ff2da668399f9ed57afa" kindref="member">value_at</ref>(<ref refid="structshyft_1_1api_1_1abin__op__ts_1aa629242be92f723175ceb1bf4d6742b3" kindref="member">ta</ref>.<ref refid="structshyft_1_1time__axis_1_1generic__dt_1a2b8f83a37ad30534bd8c3a8866a87b8f" kindref="member">time</ref>(i));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hmm!<sp/>here<sp/>we<sp/>have<sp/>to<sp/>define<sp/>what<sp/>value(i)<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>..<sp/>we<sp/>could<sp/>define<sp/>it<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>the<sp/>value<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>i&apos;th<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>then<sp/>we<sp/>define<sp/>value(t)<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>as<sp/>the<sp/>point<sp/>interpretation<sp/>of<sp/>f(t)..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(fx_policy==point_interpretation_policy::POINT_AVERAGE_VALUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>value_at(ta.time(i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//utcperiod<sp/>p=ta.period(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>v0=<sp/>value_at(p.start);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>v1=<sp/>value_at(p.end);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(isfinite(v1))<sp/>return<sp/>0.5*(v0<sp/>+<sp/>v1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>v0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202" refid="namespaceshyft_1_1api_1a5fbb4f0820000cf99c149979589106f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="namespaceshyft_1_1api_1a5fbb4f0820000cf99c149979589106f6" kindref="member">time_shift</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>ts,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(<sp/>std::make_shared&lt;shyft::api::time_shift_ts&gt;(ts,dt));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="namespaceshyft_1_1api_1adfcf8885fc2a933b20d3defc8321b5e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1adfcf8885fc2a933b20d3defc8321b5e1" kindref="member">nash_sutcliffe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>observation_ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/>model_ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref><sp/>&amp;ta)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1average__accessor" kindref="compound">average_accessor&lt;apoint_ts, gta_t&gt;</ref><sp/>o(observation_ts,<sp/>ta);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1average__accessor" kindref="compound">average_accessor&lt;apoint_ts, gta_t&gt;</ref><sp/>m(model_ts,<sp/>ta);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0<sp/>-<sp/><ref refid="namespaceshyft_1_1timeseries_1ac3ecf5b3080c2f416bb7737978cfdbcc" kindref="member">shyft::timeseries::nash_sutcliffe_goal_function</ref>(o,<sp/>m);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="namespaceshyft_1_1api_1ac8f18b2d1b1d01d8dae6ddce69f863fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1api_1ac8f18b2d1b1d01d8dae6ddce69f863fd" kindref="member">kling_gupta</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>&amp;<sp/>observation_ts,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>&amp;model_ts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1time__axis_1_1generic__dt" kindref="compound">gta_t</ref><sp/>&amp;<sp/>ta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_b)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1average__accessor" kindref="compound">average_accessor&lt;apoint_ts, gta_t&gt;</ref><sp/>o(observation_ts,<sp/>ta);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1average__accessor" kindref="compound">average_accessor&lt;apoint_ts, gta_t&gt;</ref><sp/>m(model_ts,<sp/>ta);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0<sp/>-<sp/>shyft::timeseries::kling_gupta_goal_function&lt;dlib::running_scalar_covariance&lt;double&gt;&gt;(o,<sp/>m,<sp/>s_r,<sp/>s_a,<sp/>s_b);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/timeseries.cpp"/>
  </compounddef>
</doxygen>
