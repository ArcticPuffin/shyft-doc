<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structshyft_1_1core_1_1cell__statistics" kind="struct" language="C++" prot="public">
    <compoundname>shyft::core::cell_statistics</compoundname>
    <includes refid="cell__model_8h" local="no">cell_model.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structshyft_1_1core_1_1cell__statistics_1a8e381103de2dfda6a0f9fe6ab76dba31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void shyft::core::cell_statistics::verify_cids_exist</definition>
        <argsstring>(const vector&lt; cell &gt; &amp;cells, const vector&lt; int &gt; &amp;catchment_indexes)</argsstring>
        <name>verify_cids_exist</name>
        <param>
          <type>const vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>throws runtime_error if catchment_indexes contains cid that&apos;s not part of cells </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/core/cell_model.h" line="166" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1cell__statistics_1aa10fd1160847f815e52bd017d1203215" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
          </param>
          <param>
            <type>typename cell_feature_ts</type>
          </param>
        </templateparamlist>
        <type>shared_ptr&lt; <ref refid="namespaceshyft_1_1core_1a78d0ca8964be5db44a5022740019e7fc" kindref="member">pts_t</ref> &gt;</type>
        <definition>static shared_ptr&lt;pts_t&gt; shyft::core::cell_statistics::average_catchment_feature</definition>
        <argsstring>(const vector&lt; cell &gt; &amp;cells, const vector&lt; int &gt; &amp;catchment_indexes, cell_feature_ts &amp;&amp;cell_ts)</argsstring>
        <name>average_catchment_feature</name>
        <param>
          <type>const vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>cell_feature_ts &amp;&amp;</type>
          <declname>cell_ts</declname>
        </param>
        <briefdescription>
<para>average_catchment_feature returns the area-weighted average </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>the cell type, assumed to have .geo.area(), and geo.catchment_id() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_feature_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that takes a const cell ref, returns a ts </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells</parametername>
</parameternamelist>
<parameterdescription>
<para>that we want to perform calculation on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchment_indexes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of catchment-id that identifies the cells, if zero length, all are averaged </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that fetches the cell feature we want to average </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if number of cells are zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>area weighted feature sum, as a ts, a shared_ptr&lt;pts_ts&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/core/cell_model.h" line="186" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="186" bodyend="210"/>
        <references refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" compoundref="core_2timeseries_8h" startline="54">shyft::timeseries::POINT_AVERAGE_VALUE</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
          </param>
          <param>
            <type>typename cell_feature_ts</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double shyft::core::cell_statistics::average_catchment_feature_value</definition>
        <argsstring>(const vector&lt; cell &gt; &amp;cells, const vector&lt; int &gt; &amp;catchment_indexes, cell_feature_ts &amp;&amp;cell_ts, size_t i)</argsstring>
        <name>average_catchment_feature_value</name>
        <param>
          <type>const vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>cell_feature_ts &amp;&amp;</type>
          <declname>cell_ts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>average_catchment_feature_value returns the area-weighted average for a timestep </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>the cell type, assumed to have .geo.area(), and geo.catchment_id() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_feature_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that takes a const cell ref, returns a ts </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells</parametername>
</parameternamelist>
<parameterdescription>
<para>that we want to perform calculation on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchment_indexes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of catchment-id that identifies the cells, if zero length, all are averaged </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that fetches the cell feature we want to average </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the i&apos;th time-step for which we compute the value </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if number of cells are zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>area weighted feature sum, as a double value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/core/cell_model.h" line="224" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="224" bodyend="248"/>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a2717c2f83256bba9fd5df03a09111348" compoundref="api_8h" startline="263" endline="267">shyft::api::basic_cell_statistics&lt; cell &gt;::temperature_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1ac4cc415689c1ff4ce7e238e4b3617081" compoundref="api_8h" startline="279" endline="283">shyft::api::basic_cell_statistics&lt; cell &gt;::precipitation_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1aa955b36f9238bb41fd059d5bfad6bdd3" compoundref="api_8h" startline="295" endline="299">shyft::api::basic_cell_statistics&lt; cell &gt;::radiation_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1aedf73038a37616be13c32a71a54771f8" compoundref="api_8h" startline="311" endline="315">shyft::api::basic_cell_statistics&lt; cell &gt;::wind_speed_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a40bdda18f3a11053bd9f0a1a8ef9a120" compoundref="api_8h" startline="327" endline="331">shyft::api::basic_cell_statistics&lt; cell &gt;::rel_hum_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a799cada864e74c0cbbcc95acc0c19584" compoundref="api_8h" startline="417" endline="421">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::albedo_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a884e56beed1b1612184502bea8853659" compoundref="api_8h" startline="433" endline="437">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::lwc_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a9b9401cedf4855fa0bc3734a2c8d76ee" compoundref="api_8h" startline="449" endline="453">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::surface_heat_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a6c8c2934c46f3db59378e1d75dd56607" compoundref="api_8h" startline="465" endline="469">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::alpha_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a90fd09d28a46838c4832962b17d0665a" compoundref="api_8h" startline="481" endline="485">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::sdc_melt_mean_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a29c5d388ccd387d2ba6ffdf0126013e6" compoundref="api_8h" startline="497" endline="501">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::acc_melt_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1add458faae976326df70032a33cebcdf1" compoundref="api_8h" startline="513" endline="517">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::iso_pot_energy_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a54e04021e27ec954fbd25345bb793ec3" compoundref="api_8h" startline="529" endline="533">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::temp_swe_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1aeb9cfc69fca2ba642bc09881e67d317f" compoundref="api_8h" startline="552" endline="556">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::sca_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a1215148af0c350906f353a2da13c12b7" compoundref="api_8h" startline="568" endline="572">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::swe_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1afb27adfe6c9eb0a7612dd4878efa6add" compoundref="api_8h" startline="627" endline="631">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::alpha_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a47bca4189782d59671a55c9efc8c4524" compoundref="api_8h" startline="643" endline="647">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::nu_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ad796bc736dd08dd56c1e4e1d54d42730" compoundref="api_8h" startline="659" endline="663">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::lwc_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ab334d679652924c9b04bac43c948e832" compoundref="api_8h" startline="675" endline="679">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::residual_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a663d8ff8ac60aef9262753a3bc2da385" compoundref="api_8h" startline="691" endline="695">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::swe_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1add916a60016c360aaeaaf2e9b2c847df" compoundref="api_8h" startline="707" endline="711">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::sca_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ae4be53380a14ce387dad633425e0643f" compoundref="api_8h" startline="746" endline="750">shyft::api::skaugen_cell_response_statistics&lt; cell &gt;::total_stored_water_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1ac543e6fef1307d05ba454671596c66b7" compoundref="api_8h" startline="789" endline="793">shyft::api::hbv_snow_cell_state_statistics&lt; cell &gt;::swe_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1aad097dbf123dfaec2201bfa029d62762" compoundref="api_8h" startline="805" endline="809">shyft::api::hbv_snow_cell_state_statistics&lt; cell &gt;::sca_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a36d694c782bbb7682cab937d3edf2018" compoundref="api_8h" startline="871" endline="875">shyft::api::priestley_taylor_cell_response_statistics&lt; cell &gt;::output_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1aadaf3d817a4928f95ded6edabdc7a866" compoundref="api_8h" startline="893" endline="897">shyft::api::hbv_soil_cell_response_statistics&lt; cell &gt;::output_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a5eed44f87371a4bc028c2db4e430c817" compoundref="api_8h" startline="914" endline="918">shyft::api::actual_evapotranspiration_cell_response_statistics&lt; cell &gt;::output_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1abb831d47c80a22e0671073150f2805ac" compoundref="api_8h" startline="936" endline="940">shyft::api::hbv_actual_evapotranspiration_cell_response_statistics&lt; cell &gt;::output_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1cell__statistics_1a7115ce247d298ae434ed6fdce616f90e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
          </param>
          <param>
            <type>typename cell_feature_ts</type>
          </param>
        </templateparamlist>
        <type>shared_ptr&lt; <ref refid="namespaceshyft_1_1core_1a78d0ca8964be5db44a5022740019e7fc" kindref="member">pts_t</ref> &gt;</type>
        <definition>static shared_ptr&lt;pts_t&gt; shyft::core::cell_statistics::sum_catchment_feature</definition>
        <argsstring>(const vector&lt; cell &gt; &amp;cells, const vector&lt; int &gt; &amp;catchment_indexes, cell_feature_ts &amp;&amp;cell_ts)</argsstring>
        <name>sum_catchment_feature</name>
        <param>
          <type>const vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>cell_feature_ts &amp;&amp;</type>
          <declname>cell_ts</declname>
        </param>
        <briefdescription>
<para>sum_catchment_feature returns the sum of cell-features(discharge etc) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>the cell type, assumed to have geo.catchment_id() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_feature_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that takes a const cell ref, returns a ts </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells</parametername>
</parameternamelist>
<parameterdescription>
<para>that we want to perform calculation on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchment_indexes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of catchment-id that identifies the cells, if zero length, all are summed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that fetches the cell feature we want to sum </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if number of cells are zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>feature sum, as a ts, a shared_ptr&lt;pts_ts&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/core/cell_model.h" line="262" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="262" bodyend="283"/>
        <references refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" compoundref="core_2timeseries_8h" startline="54">shyft::timeseries::POINT_AVERAGE_VALUE</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
          </param>
          <param>
            <type>typename cell_feature_ts</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double shyft::core::cell_statistics::sum_catchment_feature_value</definition>
        <argsstring>(const vector&lt; cell &gt; &amp;cells, const vector&lt; int &gt; &amp;catchment_indexes, cell_feature_ts &amp;&amp;cell_ts, size_t i)</argsstring>
        <name>sum_catchment_feature_value</name>
        <param>
          <type>const vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>cell_feature_ts &amp;&amp;</type>
          <declname>cell_ts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>sum_catchment_feature_value returns the sum of cell-features(discharge etc) value at the i&apos;th timestep </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>the cell type, assumed to have geo.catchment_id() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_feature_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that takes a const cell ref, returns a ts </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells</parametername>
</parameternamelist>
<parameterdescription>
<para>that we want to perform calculation on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchment_indexes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of catchment-id that identifies the cells, if zero length, all are summed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that fetches the cell feature we want to sum </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the i&apos;th time-step of the time-axis to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if number of cells are zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>feature sum, as a ts, a shared_ptr&lt;pts_ts&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/core/cell_model.h" line="296" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="296" bodyend="317"/>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a199f12198bb0282511b3602fde44c48d" compoundref="api_8h" startline="247" endline="251">shyft::api::basic_cell_statistics&lt; cell &gt;::discharge_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a0a4d16f578e2447678458143e0b951ca" compoundref="api_8h" startline="349" endline="353">shyft::api::kirchner_cell_state_statistics&lt; cell &gt;::discharge_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a48527c6fa4e80b3daa437e7e564c7250" compoundref="api_8h" startline="371" endline="375">shyft::api::hbv_soil_cell_state_statistics&lt; cell &gt;::discharge_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a8664d5115207b6829e85d960a59b509d" compoundref="api_8h" startline="393" endline="397">shyft::api::hbv_tank_cell_state_statistics&lt; cell &gt;::discharge_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a598a56291a129a275c530e1428d54d4d" compoundref="api_8h" startline="584" endline="588">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::outflow_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a9b44d94b9a080e0fecb7cf814b859765" compoundref="api_8h" startline="603" endline="607">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::glacier_melt_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ab29814c37e28272cdcbe83e42bee610f" compoundref="api_8h" startline="730" endline="734">shyft::api::skaugen_cell_response_statistics&lt; cell &gt;::outflow_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a843b3cde542c64f3c7d0bb85c1e1af37" compoundref="api_8h" startline="765" endline="769">shyft::api::skaugen_cell_response_statistics&lt; cell &gt;::glacier_melt_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a2c6b0fc489a92148fdbb4b9d9283aee0" compoundref="api_8h" startline="828" endline="832">shyft::api::hbv_snow_cell_response_statistics&lt; cell &gt;::outflow_value</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a35a388e0ad8de6c402fe3d477b5a212e" compoundref="api_8h" startline="848" endline="852">shyft::api::hbv_snow_cell_response_statistics&lt; cell &gt;::glacier_melt_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
          </param>
          <param>
            <type>typename cell_feature_ts</type>
          </param>
        </templateparamlist>
        <type>vector&lt; double &gt;</type>
        <definition>static vector&lt;double&gt; shyft::core::cell_statistics::catchment_feature</definition>
        <argsstring>(const vector&lt; cell &gt; &amp;cells, const vector&lt; int &gt; &amp;catchment_indexes, cell_feature_ts &amp;&amp;cell_ts, size_t i)</argsstring>
        <name>catchment_feature</name>
        <param>
          <type>const vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>cell_feature_ts &amp;&amp;</type>
          <declname>cell_ts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>catchment_feature extracts cell-features(discharge etc) for specific i&apos;th period of timeaxis </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>cell</parametername>
</parameternamelist>
<parameterdescription>
<para>the cell type, assumed to have geo.catchment_id() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_feature_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that takes a const cell ref, returns a ts </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cells</parametername>
</parameternamelist>
<parameterdescription>
<para>that we want to extract feature from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catchment_indexes</parametername>
</parameternamelist>
<parameterdescription>
<para>list of catchment-id that identifies the cells, if zero length, all are summed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_ts</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable that fetches the cell feature ts </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the i&apos;th step on the time-axis of the cell-feature </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if number of cells are zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector filled with feature for the i&apos;th time-step on timeaxis </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/core/cell_model.h" line="331" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="331" bodyend="352"/>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a470c074cace6796ba0d1971929755b0c" compoundref="api_8h" startline="242" endline="246">shyft::api::basic_cell_statistics&lt; cell &gt;::discharge</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1ae52b209c4fa48f3903a94b52cc7f7b3f" compoundref="api_8h" startline="258" endline="262">shyft::api::basic_cell_statistics&lt; cell &gt;::temperature</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a8557686cb8ffc4976a8103d85bb25971" compoundref="api_8h" startline="274" endline="278">shyft::api::basic_cell_statistics&lt; cell &gt;::precipitation</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a016acbac06725469ff07bac5f0f89039" compoundref="api_8h" startline="290" endline="294">shyft::api::basic_cell_statistics&lt; cell &gt;::radiation</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1ac431ba0709ed19378c4d33b066be65dd" compoundref="api_8h" startline="306" endline="310">shyft::api::basic_cell_statistics&lt; cell &gt;::wind_speed</referencedby>
        <referencedby refid="structshyft_1_1api_1_1basic__cell__statistics_1a75fc26565cbef7f20d02a9263b73b7a3" compoundref="api_8h" startline="322" endline="326">shyft::api::basic_cell_statistics&lt; cell &gt;::rel_hum</referencedby>
        <referencedby refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1adcdcee7f3d099fd3bdff9f1a5c2faa92" compoundref="api_8h" startline="344" endline="348">shyft::api::kirchner_cell_state_statistics&lt; cell &gt;::discharge</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1aca03a4a8ca9300814f9bbc696b2cebe0" compoundref="api_8h" startline="366" endline="370">shyft::api::hbv_soil_cell_state_statistics&lt; cell &gt;::discharge</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a23871d6cc6f25b2b786b377b9d77c16d" compoundref="api_8h" startline="388" endline="392">shyft::api::hbv_tank_cell_state_statistics&lt; cell &gt;::discharge</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aaab24e0af2fafb6a63fc3b1d701bc03f" compoundref="api_8h" startline="412" endline="416">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::albedo</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aceeb4b898252db760509c7c4d151d421" compoundref="api_8h" startline="428" endline="432">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::lwc</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af00329a7138fdd2cd954324ea7afa078" compoundref="api_8h" startline="444" endline="448">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::surface_heat</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1adb508efbe009a157e3ef64c5ea2d9af6" compoundref="api_8h" startline="460" endline="464">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::alpha</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aa2705dfe9ffcdbb4a4be68d741e9f9c2" compoundref="api_8h" startline="476" endline="480">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::sdc_melt_mean</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a0157af1553414599a9871d94fdf06e2b" compoundref="api_8h" startline="492" endline="496">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::acc_melt</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a49d1c455c48115fbb1cddd7d042f6dc8" compoundref="api_8h" startline="508" endline="512">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::iso_pot_energy</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a2d5b04f4c7e2748ea730e0b666273a6b" compoundref="api_8h" startline="524" endline="528">shyft::api::gamma_snow_cell_state_statistics&lt; cell &gt;::temp_swe</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1abdbbfc3e0eae934b8a678b433f19a83a" compoundref="api_8h" startline="547" endline="551">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::sca</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a42035b93e7490c295016beafba2c05fc" compoundref="api_8h" startline="563" endline="567">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::swe</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1aaa1c46dbdb7b5f426efbde68d56a9757" compoundref="api_8h" startline="579" endline="583">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::outflow</referencedby>
        <referencedby refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a971592605ef3f2780466c30ea3062204" compoundref="api_8h" startline="598" endline="602">shyft::api::gamma_snow_cell_response_statistics&lt; cell &gt;::glacier_melt</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ab3b47c1fab591630c4b3a051dad59348" compoundref="api_8h" startline="622" endline="626">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::alpha</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ae3dda9e7f943ce267848e897a0a88335" compoundref="api_8h" startline="638" endline="642">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::nu</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ace5bc88150d819130369995d870cd347" compoundref="api_8h" startline="654" endline="658">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::lwc</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aacb20d679ca922771dff840fa1e44bd8" compoundref="api_8h" startline="670" endline="674">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::residual</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a55e0b809aca69e3dacf7dd01758ca599" compoundref="api_8h" startline="686" endline="690">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::swe</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ad2f86d9cfba13e806446ba84cf263ec1" compoundref="api_8h" startline="702" endline="706">shyft::api::skaugen_cell_state_statistics&lt; cell &gt;::sca</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a8a56b10bfffe49b4e6f4d7946ec8599f" compoundref="api_8h" startline="725" endline="729">shyft::api::skaugen_cell_response_statistics&lt; cell &gt;::outflow</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a24bc09db37b334750b5d46175fb8b738" compoundref="api_8h" startline="741" endline="745">shyft::api::skaugen_cell_response_statistics&lt; cell &gt;::total_stored_water</referencedby>
        <referencedby refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a17d8fae466441260e3050a4d84c5dd4e" compoundref="api_8h" startline="760" endline="764">shyft::api::skaugen_cell_response_statistics&lt; cell &gt;::glacier_melt</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a36a69f7161a787339a344cd750c8e44a" compoundref="api_8h" startline="784" endline="788">shyft::api::hbv_snow_cell_state_statistics&lt; cell &gt;::swe</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a6c51591e3553d3d735fad8456867f403" compoundref="api_8h" startline="800" endline="804">shyft::api::hbv_snow_cell_state_statistics&lt; cell &gt;::sca</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a3e8a0838cc6b670b030470ae6a530df7" compoundref="api_8h" startline="823" endline="827">shyft::api::hbv_snow_cell_response_statistics&lt; cell &gt;::outflow</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a192a8114ca8a7791be8fb4c34d53a668" compoundref="api_8h" startline="843" endline="847">shyft::api::hbv_snow_cell_response_statistics&lt; cell &gt;::glacier_melt</referencedby>
        <referencedby refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1af78a5244fb378e25af8f61768fe841c8" compoundref="api_8h" startline="866" endline="870">shyft::api::priestley_taylor_cell_response_statistics&lt; cell &gt;::output</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1a5c2b38ebb91ccac1c3cc5ec70fd977d4" compoundref="api_8h" startline="888" endline="892">shyft::api::hbv_soil_cell_response_statistics&lt; cell &gt;::output</referencedby>
        <referencedby refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1ab59df34fdac7b44fb0f2e89cfde27a10" compoundref="api_8h" startline="909" endline="913">shyft::api::actual_evapotranspiration_cell_response_statistics&lt; cell &gt;::output</referencedby>
        <referencedby refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a4a8d95cb581b3c709db6b551cfc76793" compoundref="api_8h" startline="931" endline="935">shyft::api::hbv_actual_evapotranspiration_cell_response_statistics&lt; cell &gt;::output</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>cell statistics provides ts feature summation over cells </para>    </briefdescription>
    <detaileddescription>
<para>Since the cells are different, like different features, based on method stack, we use template to do the &quot;main work&quot;, either to do a scaled average, e.g. temperature, or plain sum (cell run_off in m3/s) Using this technique, there is only one line pr. feature sum/average needed -and we can keep the kloc down to a minimum.</para><para>Using swig/python, we need a helper class in either _api.h, or api.i to provide the functions to python layer </para>    </detaileddescription>
    <location file="/home/sih/projects/shyft/core/cell_model.h" line="162" column="1" bodyfile="/home/sih/projects/shyft/core/cell_model.h" bodystart="162" bodyend="354"/>
    <listofallmembers>
      <member refid="structshyft_1_1core_1_1cell__statistics_1aa10fd1160847f815e52bd017d1203215" prot="public" virt="non-virtual"><scope>shyft::core::cell_statistics</scope><name>average_catchment_feature</name></member>
      <member refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" prot="public" virt="non-virtual"><scope>shyft::core::cell_statistics</scope><name>average_catchment_feature_value</name></member>
      <member refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" prot="public" virt="non-virtual"><scope>shyft::core::cell_statistics</scope><name>catchment_feature</name></member>
      <member refid="structshyft_1_1core_1_1cell__statistics_1a7115ce247d298ae434ed6fdce616f90e" prot="public" virt="non-virtual"><scope>shyft::core::cell_statistics</scope><name>sum_catchment_feature</name></member>
      <member refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" prot="public" virt="non-virtual"><scope>shyft::core::cell_statistics</scope><name>sum_catchment_feature_value</name></member>
      <member refid="structshyft_1_1core_1_1cell__statistics_1a8e381103de2dfda6a0f9fe6ab76dba31" prot="public" virt="non-virtual"><scope>shyft::core::cell_statistics</scope><name>verify_cids_exist</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
