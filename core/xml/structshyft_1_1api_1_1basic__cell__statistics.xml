<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structshyft_1_1api_1_1basic__cell__statistics" kind="struct" language="C++" prot="public">
    <compoundname>shyft::api::basic_cell_statistics</compoundname>
    <includes refid="api_8h" local="no">api.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structshyft_1_1api_1_1basic__cell__statistics_1a0a2291fd3d2eb93037f2df606a56e386" prot="public" static="no" mutable="no">
        <type>shared_ptr&lt; vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt; &gt;</type>
        <definition>shared_ptr&lt;vector&lt;cell&gt; &gt; shyft::api::basic_cell_statistics&lt; cell &gt;::cells</definition>
        <argsstring></argsstring>
        <name>cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="168" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a52a6b3517697539850063c262f2a03ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shyft::api::basic_cell_statistics&lt; cell &gt;::basic_cell_statistics</definition>
        <argsstring>(shared_ptr&lt; vector&lt; cell &gt;&gt; cells)</argsstring>
        <name>basic_cell_statistics</name>
        <param>
          <type>shared_ptr&lt; vector&lt; <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> &gt;&gt;</type>
          <declname>cells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="169" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ae14778720cb4ca39f54b2c3a3958d222" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::total_area</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>total_area</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="171" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="171" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1aa454059a8e011e3d4c15c7b297817f0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::forest_area</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>forest_area</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="182" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="182" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ae8329a30b8173f1a904aa1f2fb6c7783" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::glacier_area</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>glacier_area</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="193" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="193" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a5d6990d061cd3afb8ed3da27c65b1e5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::lake_area</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>lake_area</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="204" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="204" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a9d9c5fb7c258c1e742f901ffc96ad203" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::reservoir_area</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>reservoir_area</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="215" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="215" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ae203208ae93ebab38fd2113353b36182" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::unspecified_area</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>unspecified_area</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="226" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="226" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a542c9330f3602b8aec47a6d4fdc043cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></type>
        <definition>apoint_ts shyft::api::basic_cell_statistics&lt; cell &gt;::discharge</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>discharge</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="237" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="237" bodyend="241"/>
        <references refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" compoundref="cell__model_8h" startline="104">shyft::core::cell&lt; P, E, S, SC, RC &gt;::rc</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a470c074cace6796ba0d1971929755b0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::api::basic_cell_statistics&lt; cell &gt;::discharge</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>discharge</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="242" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="242" bodyend="246"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" compoundref="cell__model_8h" startline="331" endline="352">shyft::core::cell_statistics::catchment_feature</references>
        <references refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" compoundref="cell__model_8h" startline="104">shyft::core::cell&lt; P, E, S, SC, RC &gt;::rc</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a199f12198bb0282511b3602fde44c48d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::discharge_value</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>discharge_value</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="247" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="247" bodyend="251"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" compoundref="cell__model_8h" startline="296" endline="317">shyft::core::cell_statistics::sum_catchment_feature_value</references>
        <references refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" compoundref="cell__model_8h" startline="104">shyft::core::cell&lt; P, E, S, SC, RC &gt;::rc</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a2c02660620af568f13985b8bcdb73ff3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></type>
        <definition>apoint_ts shyft::api::basic_cell_statistics&lt; cell &gt;::temperature</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>temperature</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="253" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="253" bodyend="257"/>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ae52b209c4fa48f3903a94b52cc7f7b3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::api::basic_cell_statistics&lt; cell &gt;::temperature</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>temperature</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="258" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="258" bodyend="262"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" compoundref="cell__model_8h" startline="331" endline="352">shyft::core::cell_statistics::catchment_feature</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a2717c2f83256bba9fd5df03a09111348" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::temperature_value</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>temperature_value</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="263" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="263" bodyend="267"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" compoundref="cell__model_8h" startline="224" endline="248">shyft::core::cell_statistics::average_catchment_feature_value</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ae4f021b4e0d9062606c043590cf036d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></type>
        <definition>apoint_ts shyft::api::basic_cell_statistics&lt; cell &gt;::precipitation</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>precipitation</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="269" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="269" bodyend="273"/>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a8557686cb8ffc4976a8103d85bb25971" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::api::basic_cell_statistics&lt; cell &gt;::precipitation</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>precipitation</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="274" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="274" bodyend="278"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" compoundref="cell__model_8h" startline="331" endline="352">shyft::core::cell_statistics::catchment_feature</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ac4cc415689c1ff4ce7e238e4b3617081" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::precipitation_value</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>precipitation_value</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="279" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="279" bodyend="283"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" compoundref="cell__model_8h" startline="224" endline="248">shyft::core::cell_statistics::average_catchment_feature_value</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a104ed04210c784efedf5be5a938a440a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></type>
        <definition>apoint_ts shyft::api::basic_cell_statistics&lt; cell &gt;::radiation</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>radiation</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="285" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="285" bodyend="289"/>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a016acbac06725469ff07bac5f0f89039" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::api::basic_cell_statistics&lt; cell &gt;::radiation</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>radiation</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="290" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="290" bodyend="294"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" compoundref="cell__model_8h" startline="331" endline="352">shyft::core::cell_statistics::catchment_feature</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1aa955b36f9238bb41fd059d5bfad6bdd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::radiation_value</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>radiation_value</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="295" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="295" bodyend="299"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" compoundref="cell__model_8h" startline="224" endline="248">shyft::core::cell_statistics::average_catchment_feature_value</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ac73977ec401ba2dc74996bae56638cde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></type>
        <definition>apoint_ts shyft::api::basic_cell_statistics&lt; cell &gt;::wind_speed</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>wind_speed</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="301" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="301" bodyend="305"/>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1ac431ba0709ed19378c4d33b066be65dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::api::basic_cell_statistics&lt; cell &gt;::wind_speed</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>wind_speed</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="306" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="306" bodyend="310"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" compoundref="cell__model_8h" startline="331" endline="352">shyft::core::cell_statistics::catchment_feature</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1aedf73038a37616be13c32a71a54771f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::wind_speed_value</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>wind_speed_value</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="311" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="311" bodyend="315"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" compoundref="cell__model_8h" startline="224" endline="248">shyft::core::cell_statistics::average_catchment_feature_value</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a28609e25207f3e341a7e4a1e1e1ff4a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></type>
        <definition>apoint_ts shyft::api::basic_cell_statistics&lt; cell &gt;::rel_hum</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes) const</argsstring>
        <name>rel_hum</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="317" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="317" bodyend="321"/>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a75fc26565cbef7f20d02a9263b73b7a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::api::basic_cell_statistics&lt; cell &gt;::rel_hum</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>rel_hum</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="322" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="322" bodyend="326"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" compoundref="cell__model_8h" startline="331" endline="352">shyft::core::cell_statistics::catchment_feature</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1api_1_1basic__cell__statistics_1a40bdda18f3a11053bd9f0a1a8ef9a120" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double shyft::api::basic_cell_statistics&lt; cell &gt;::rel_hum_value</definition>
        <argsstring>(const vector&lt; int &gt; &amp;catchment_indexes, size_t ith_timestep) const</argsstring>
        <name>rel_hum_value</name>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>catchment_indexes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ith_timestep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sih/projects/shyft/api/api.h" line="327" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="327" bodyend="331"/>
        <references refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" compoundref="cell__model_8h" startline="224" endline="248">shyft::core::cell_statistics::average_catchment_feature_value</references>
        <references refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" compoundref="cell__model_8h" startline="101">shyft::core::cell&lt; P, E, S, SC, RC &gt;::env_ts</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class that facilitates fast state io, the yaml in Python is too slow. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/sih/projects/shyft/api/api.h" line="167" column="1" bodyfile="/home/sih/projects/shyft/api/api.h" bodystart="167" bodyend="332"/>
    <listofallmembers>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a52a6b3517697539850063c262f2a03ef" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>basic_cell_statistics</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a0a2291fd3d2eb93037f2df606a56e386" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>cells</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a542c9330f3602b8aec47a6d4fdc043cc" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>discharge</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a470c074cace6796ba0d1971929755b0c" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>discharge</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a199f12198bb0282511b3602fde44c48d" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>discharge_value</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1aa454059a8e011e3d4c15c7b297817f0b" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>forest_area</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ae8329a30b8173f1a904aa1f2fb6c7783" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>glacier_area</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a5d6990d061cd3afb8ed3da27c65b1e5c" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>lake_area</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ae4f021b4e0d9062606c043590cf036d9" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>precipitation</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a8557686cb8ffc4976a8103d85bb25971" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>precipitation</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ac4cc415689c1ff4ce7e238e4b3617081" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>precipitation_value</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a104ed04210c784efedf5be5a938a440a" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>radiation</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a016acbac06725469ff07bac5f0f89039" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>radiation</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1aa955b36f9238bb41fd059d5bfad6bdd3" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>radiation_value</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a28609e25207f3e341a7e4a1e1e1ff4a5" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>rel_hum</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a75fc26565cbef7f20d02a9263b73b7a3" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>rel_hum</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a40bdda18f3a11053bd9f0a1a8ef9a120" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>rel_hum_value</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a9d9c5fb7c258c1e742f901ffc96ad203" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>reservoir_area</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a2c02660620af568f13985b8bcdb73ff3" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>temperature</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ae52b209c4fa48f3903a94b52cc7f7b3f" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>temperature</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1a2717c2f83256bba9fd5df03a09111348" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>temperature_value</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ae14778720cb4ca39f54b2c3a3958d222" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>total_area</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ae203208ae93ebab38fd2113353b36182" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>unspecified_area</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ac73977ec401ba2dc74996bae56638cde" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>wind_speed</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1ac431ba0709ed19378c4d33b066be65dd" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>wind_speed</name></member>
      <member refid="structshyft_1_1api_1_1basic__cell__statistics_1aedf73038a37616be13c32a71a54771f8" prot="public" virt="non-virtual"><scope>shyft::api::basic_cell_statistics</scope><name>wind_speed_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
