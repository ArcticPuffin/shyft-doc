<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classshyft_1_1core_1_1region__model" kind="class" language="C++" prot="public">
    <compoundname>shyft::core::region_model</compoundname>
    <includes refid="region__model_8h" local="no">region_model.h</includes>
    <templateparamlist>
      <param>
        <type>class C</type>
      </param>
      <param>
        <type>class RE</type>
        <defval><ref refid="structshyft_1_1core_1_1region__environment" kindref="compound">region_environment</ref>&lt;<ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref>,<ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref>,<ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref>,<ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref>,<ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref>&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1ade47f813473ea7c82e8d7c177a0455cb" prot="public" static="no">
        <type>C</type>
        <definition>typedef C shyft::core::region_model&lt; C, RE &gt;::cell_t</definition>
        <argsstring></argsstring>
        <name>cell_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="212" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1a7c3551b5c2de31c4b2043c55262037a5" prot="public" static="no">
        <type>C::state_t</type>
        <definition>typedef C::state_t shyft::core::region_model&lt; C, RE &gt;::state_t</definition>
        <argsstring></argsstring>
        <name>state_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="213" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" prot="public" static="no">
        <type>C::parameter_t</type>
        <definition>typedef C::parameter_t shyft::core::region_model&lt; C, RE &gt;::parameter_t</definition>
        <argsstring></argsstring>
        <name>parameter_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="214" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" prot="public" static="no">
        <type>C::timeaxis_t</type>
        <definition>typedef C::timeaxis_t shyft::core::region_model&lt; C, RE &gt;::timeaxis_t</definition>
        <argsstring></argsstring>
        <name>timeaxis_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="215" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1aaee85dc06f4831b972d0ca6b10c4ace0" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classshyft_1_1core_1_1region__model_1ade47f813473ea7c82e8d7c177a0455cb" kindref="member">cell_t</ref> &gt;</type>
        <definition>typedef std::vector&lt;cell_t&gt; shyft::core::region_model&lt; C, RE &gt;::cell_vec_t</definition>
        <argsstring></argsstring>
        <name>cell_vec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="216" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1a235f5fb30a5bfa243da8e4393cd95518" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classshyft_1_1core_1_1region__model_1aaee85dc06f4831b972d0ca6b10c4ace0" kindref="member">cell_vec_t</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;cell_vec_t &gt; shyft::core::region_model&lt; C, RE &gt;::cell_vec_t_</definition>
        <argsstring></argsstring>
        <name>cell_vec_t_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="217" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1a6aa0dbf869732b15a60d7ce83643a6e4" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;parameter_t&gt; shyft::core::region_model&lt; C, RE &gt;::parameter_t_</definition>
        <argsstring></argsstring>
        <name>parameter_t_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="218" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1a0c4f1ad910577a13260845b1f9fc3dac" prot="public" static="no">
        <type>cell_vec_t::iterator</type>
        <definition>typedef cell_vec_t::iterator shyft::core::region_model&lt; C, RE &gt;::cell_iterator</definition>
        <argsstring></argsstring>
        <name>cell_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="219" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classshyft_1_1core_1_1region__model_1a1fdec71710db7940aec82c3296019605" prot="public" static="no">
        <type>RE</type>
        <definition>typedef RE shyft::core::region_model&lt; C, RE &gt;::region_env_t</definition>
        <argsstring></argsstring>
        <name>region_env_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="220" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ae6d8d0fc2bd2fd704e3167bb885fbc4b" prot="protected" static="no" mutable="no">
        <type><ref refid="classshyft_1_1core_1_1region__model_1a235f5fb30a5bfa243da8e4393cd95518" kindref="member">cell_vec_t_</ref></type>
        <definition>cell_vec_t_ shyft::core::region_model&lt; C, RE &gt;::cells</definition>
        <argsstring></argsstring>
        <name>cells</name>
        <briefdescription>
<para>a region consists of cells that orchestrate the distributed correlation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="223" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="223" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ab0532d2fa23818127f902927dd64d5d5" prot="protected" static="no" mutable="no">
        <type><ref refid="classshyft_1_1core_1_1region__model_1a6aa0dbf869732b15a60d7ce83643a6e4" kindref="member">parameter_t_</ref></type>
        <definition>parameter_t_ shyft::core::region_model&lt; C, RE &gt;::region_parameter</definition>
        <argsstring></argsstring>
        <name>region_parameter</name>
        <briefdescription>
<para>applies to all cells, except those with catchment override </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="224" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="224" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1a0f167f1070d32bdea9ad885eb9d5d61b" prot="protected" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="classshyft_1_1core_1_1region__model_1a6aa0dbf869732b15a60d7ce83643a6e4" kindref="member">parameter_t_</ref> &gt;</type>
        <definition>std::map&lt;int, parameter_t_&gt; shyft::core::region_model&lt; C, RE &gt;::catchment_parameters</definition>
        <argsstring></argsstring>
        <name>catchment_parameters</name>
        <briefdescription>
<para>for each catchment (with cid) parameter is possible </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="225" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="225" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ada95b49d7d4ca35ba7a561c9595e3fff" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; shyft::core::region_model&lt; C, RE &gt;::catchment_filter</definition>
        <argsstring></argsstring>
        <name>catchment_filter</name>
        <briefdescription>
<para>if active (alias .<ref refid="classshyft_1_1core_1_1region__model_1a6c4a010bfbf4dc2603adcb7190948380" kindref="member">size()</ref>&gt;0), only calc if catchment_filter[catchment_id] is true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="227" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="227" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1a44edd4d8cb58b57bbea4ac094dd04950" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; shyft::core::region_model&lt; C, RE &gt;::cix_to_cid</definition>
        <argsstring></argsstring>
        <name>cix_to_cid</name>
        <briefdescription>
<para>maps internal zero-based catchment index ix to externally supplied catchment id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="228" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="228" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ac51e72d6c48005bc588730431cd4b9b3" prot="protected" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int,int&gt; shyft::core::region_model&lt; C, RE &gt;::cid_to_cix</definition>
        <argsstring></argsstring>
        <name>cid_to_cix</name>
        <briefdescription>
<para>map external catchment id to internal index </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="229" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="229" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1abae2995dc32f5ff1945feb8dfc47bdbd" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t shyft::core::region_model&lt; C, RE &gt;::n_catchments</definition>
        <argsstring></argsstring>
        <name>n_catchments</name>
        <initializer>=0</initializer>
        <briefdescription>
<para>optimized//extracted as max(cell.geo.catchment_id())+1 in run interpolate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="249" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="249" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1aef46bfbe262cfe71aae246d83c34f9a4" prot="public" static="no" mutable="no">
        <type><ref refid="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" kindref="member">timeaxis_t</ref></type>
        <definition>timeaxis_t shyft::core::region_model&lt; C, RE &gt;::time_axis</definition>
        <argsstring></argsstring>
        <name>time_axis</name>
        <briefdescription>
<para><ndash/> properties accessible to user </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref> as set from run_interpolation, determines the axis for <ref refid="namespaceshyft_1_1core_1_1pt__hs__k_1a8f36026f35fc84f58d593fdd19cbab8d" kindref="member">run()</ref>.. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="310" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="310" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1aa79737778f903ae7bbbb48619e65e3fb" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t shyft::core::region_model&lt; C, RE &gt;::ncore</definition>
        <argsstring></argsstring>
        <name>ncore</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>&lt; defaults to 4x hardware concurrency, controls number of threads used for cell processing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="311" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="311" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ad9304e1161aa44c8a63327467f586c52" prot="public" static="no" mutable="no">
        <type><ref refid="structshyft_1_1core_1_1interpolation__parameter" kindref="compound">interpolation_parameter</ref></type>
        <definition>interpolation_parameter shyft::core::region_model&lt; C, RE &gt;::ip_parameter</definition>
        <argsstring></argsstring>
        <name>ip_parameter</name>
        <briefdescription>
<para>the interpolation parameter as passed to interpolate/run_interpolation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="312" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="312" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ac588af973bcb69a92a9b6778fcf14dd2" prot="public" static="no" mutable="no">
        <type><ref refid="classshyft_1_1core_1_1region__model_1a1fdec71710db7940aec82c3296019605" kindref="member">region_env_t</ref></type>
        <definition>region_env_t shyft::core::region_model&lt; C, RE &gt;::region_env</definition>
        <argsstring></argsstring>
        <name>region_env</name>
        <briefdescription>
<para>the region environment (shallow-copy?) as passed to the interpolation/run_interpolation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="313" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="313" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1ab6e30f034a20faa24149bcc08b5eef1d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classshyft_1_1core_1_1region__model_1a7c3551b5c2de31c4b2043c55262037a5" kindref="member">state_t</ref> &gt;</type>
        <definition>std::vector&lt;state_t&gt; shyft::core::region_model&lt; C, RE &gt;::initial_state</definition>
        <argsstring></argsstring>
        <name>initial_state</name>
        <briefdescription>
<para>the initial state, set explicit, or by the first call to .set_states(..) or <ref refid="classshyft_1_1core_1_1region__model_1a642ae1d86027177ac1e88fd670e15392" kindref="member">run_cells()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="314" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="314" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classshyft_1_1core_1_1region__model_1a43a7bbfbd69c9cbc633cc7b7b1014897" prot="public" static="no" mutable="no">
        <type><ref refid="structshyft_1_1core_1_1routing_1_1river__network" kindref="compound">routing::river_network</ref></type>
        <definition>routing::river_network shyft::core::region_model&lt; C, RE &gt;::river_network</definition>
        <argsstring></argsstring>
        <name>river_network</name>
        <briefdescription>
<para>the routing river_network, can be empty </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="315" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="315" bodyend="-1"/>
        <referencedby refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" compoundref="region__model_8h" startline="251" endline="269">shyft::core::region_model&lt; C, RE &gt;::clone</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a99b7d24a42dd51a96cd2dfecb209e40b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::update_ix_to_id_mapping</definition>
        <argsstring>()</argsstring>
        <name>update_ix_to_id_mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="231" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="231" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::clone</definition>
        <argsstring>(const region_model &amp;c)</argsstring>
        <name>clone</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="251" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="251" bodyend="269"/>
        <references refid="classshyft_1_1core_1_1region__model_1aa79737778f903ae7bbbb48619e65e3fb" compoundref="region__model_8h" startline="311">shyft::core::region_model&lt; C, RE &gt;::ncore</references>
        <references refid="classshyft_1_1core_1_1region__model_1aef46bfbe262cfe71aae246d83c34f9a4" compoundref="region__model_8h" startline="310">shyft::core::region_model&lt; C, RE &gt;::time_axis</references>
        <references refid="classshyft_1_1core_1_1region__model_1ada95b49d7d4ca35ba7a561c9595e3fff" compoundref="region__model_8h" startline="227">shyft::core::region_model&lt; C, RE &gt;::catchment_filter</references>
        <references refid="classshyft_1_1core_1_1region__model_1abae2995dc32f5ff1945feb8dfc47bdbd" compoundref="region__model_8h" startline="249">shyft::core::region_model&lt; C, RE &gt;::n_catchments</references>
        <references refid="classshyft_1_1core_1_1region__model_1ad9304e1161aa44c8a63327467f586c52" compoundref="region__model_8h" startline="312">shyft::core::region_model&lt; C, RE &gt;::ip_parameter</references>
        <references refid="classshyft_1_1core_1_1region__model_1ac588af973bcb69a92a9b6778fcf14dd2" compoundref="region__model_8h" startline="313">shyft::core::region_model&lt; C, RE &gt;::region_env</references>
        <references refid="classshyft_1_1core_1_1region__model_1a44edd4d8cb58b57bbea4ac094dd04950" compoundref="region__model_8h" startline="228">shyft::core::region_model&lt; C, RE &gt;::cix_to_cid</references>
        <references refid="classshyft_1_1core_1_1region__model_1ac51e72d6c48005bc588730431cd4b9b3" compoundref="region__model_8h" startline="229">shyft::core::region_model&lt; C, RE &gt;::cid_to_cix</references>
        <references refid="classshyft_1_1core_1_1region__model_1ab6e30f034a20faa24149bcc08b5eef1d" compoundref="region__model_8h" startline="314">shyft::core::region_model&lt; C, RE &gt;::initial_state</references>
        <references refid="classshyft_1_1core_1_1region__model_1ae6d8d0fc2bd2fd704e3167bb885fbc4b" compoundref="region__model_8h" startline="223">shyft::core::region_model&lt; C, RE &gt;::cells</references>
        <references refid="classshyft_1_1core_1_1region__model_1a43a7bbfbd69c9cbc633cc7b7b1014897" compoundref="region__model_8h" startline="315">shyft::core::region_model&lt; C, RE &gt;::river_network</references>
        <references refid="classshyft_1_1core_1_1region__model_1ab0532d2fa23818127f902927dd64d5d5" compoundref="region__model_8h" startline="224">shyft::core::region_model&lt; C, RE &gt;::region_parameter</references>
        <references refid="classshyft_1_1core_1_1region__model_1a0f167f1070d32bdea9ad885eb9d5d61b" compoundref="region__model_8h" startline="225">shyft::core::region_model&lt; C, RE &gt;::catchment_parameters</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a9b3f84742552b02f4ae97f925591cf80" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::single_run</definition>
        <argsstring>(const timeaxis_t &amp;time_axis, int start_step, int n_steps, cell_iterator beg, cell_iterator endc)</argsstring>
        <name>single_run</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" kindref="member">timeaxis_t</ref> &amp;</type>
          <declname>time_axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_step</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_steps</declname>
        </param>
        <param>
          <type><ref refid="classshyft_1_1core_1_1region__model_1a0c4f1ad910577a13260845b1f9fc3dac" kindref="member">cell_iterator</ref></type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="classshyft_1_1core_1_1region__model_1a0c4f1ad910577a13260845b1f9fc3dac" kindref="member">cell_iterator</ref></type>
          <declname>endc</declname>
        </param>
        <briefdescription>
<para>parallell_run using a mid-point split + async to engange multicore execution </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>forwarded to the cell.run(time_axis) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_step</parametername>
</parameternamelist>
<parameterdescription>
<para>of time-axis </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of steps to run </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&apos;beg&apos;</parametername>
</parameternamelist>
<parameterdescription>
<para>the beginning of the cell-range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&apos;endc&apos;</parametername>
</parameternamelist>
<parameterdescription>
<para>the end of cell range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="872" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="872" bodyend="879"/>
        <references refid="structshyft_1_1core_1_1cell_1aa06edecba334fedb3ff47fda48707827" compoundref="cell__model_8h" startline="110">shyft::core::cell&lt; P, E, S, SC, RC &gt;::geo</references>
        <references refid="structshyft_1_1core_1_1geo__cell__data_1afd5e15a2cf82ee8aecffcc54ac13e69d" compoundref="geo__cell__data_8h" startline="117">shyft::core::geo_cell_data::catchment_ix</references>
        <references refid="structshyft_1_1core_1_1cell_1ae82e7854a95817d2d0ca57e4628cb137" compoundref="cell__model_8h" startline="145">shyft::core::cell&lt; P, E, S, SC, RC &gt;::run</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a09af2fc60c16994ee6693efbebe2d134" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::parallel_run</definition>
        <argsstring>(const timeaxis_t &amp;time_axis, int start_step, int n_steps, cell_iterator beg, cell_iterator endc, int use_ncore)</argsstring>
        <name>parallel_run</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" kindref="member">timeaxis_t</ref> &amp;</type>
          <declname>time_axis</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_step</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_steps</declname>
        </param>
        <param>
          <type><ref refid="classshyft_1_1core_1_1region__model_1a0c4f1ad910577a13260845b1f9fc3dac" kindref="member">cell_iterator</ref></type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="classshyft_1_1core_1_1region__model_1a0c4f1ad910577a13260845b1f9fc3dac" kindref="member">cell_iterator</ref></type>
          <declname>endc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>use_ncore</declname>
        </param>
        <briefdescription>
<para>uses async to execute the single_run, partitioning the cell range into thread-cell count </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if thread_cell_count is zero </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>when all cells calculated </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>time-axis to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_step</parametername>
</parameternamelist>
<parameterdescription>
<para>of time-axis </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of steps to run </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&apos;beg&apos;</parametername>
</parameternamelist>
<parameterdescription>
<para>the beginning of the cell-range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&apos;endc&apos;</parametername>
</parameternamelist>
<parameterdescription>
<para>the end of cell range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thread_cell_count</parametername>
</parameternamelist>
<parameterdescription>
<para>number of cells given to each async thread </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="891" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="891" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ae4dd68593dbe0993dc09c89d8a15d793" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::run_routing</definition>
        <argsstring>(int start_step, int n_steps)</argsstring>
        <name>run_routing</name>
        <param>
          <type>int</type>
          <declname>start_step</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="922" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="922" bodyend="948"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a5a7759fadf4e5abad488f3e7e9df9284" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shyft::core::region_model&lt; C, RE &gt;::region_model</definition>
        <argsstring>(std::shared_ptr&lt; std::vector&lt; C &gt; &gt; &amp;cells, const parameter_t &amp;region_param)</argsstring>
        <name>region_model</name>
        <param>
          <type>std::shared_ptr&lt; std::vector&lt; C &gt; &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
          <declname>region_param</declname>
        </param>
        <briefdescription>
<para>construct a region model, by supplying the following minimum set of parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>region_param</parametername>
</parameternamelist>
<parameterdescription>
<para>ref to parameters to apply to all cells, the constructor loops over cells and implants a ref to a copy of this param. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cells</parametername>
</parameternamelist>
<parameterdescription>
<para>a shared pointer to a vector of cells, notice, we do share the cell-vector! </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="278" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="278" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ab2502b156bcacd1325e72c543e2ed063" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shyft::core::region_model&lt; C, RE &gt;::region_model</definition>
        <argsstring>(const std::vector&lt; geo_cell_data &gt; &amp;geov, const parameter_t &amp;region_param)</argsstring>
        <name>region_model</name>
        <param>
          <type>const std::vector&lt; <ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref> &gt; &amp;</type>
          <declname>geov</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
          <declname>region_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="284" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="284" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ae9a42eaca45e4f4f11664bbf10142a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shyft::core::region_model&lt; C, RE &gt;::region_model</definition>
        <argsstring>(std::shared_ptr&lt; std::vector&lt; C &gt; &gt; &amp;cells, const parameter_t &amp;region_param, const std::map&lt; int, parameter_t &gt; &amp;catchment_parameters)</argsstring>
        <name>region_model</name>
        <param>
          <type>std::shared_ptr&lt; std::vector&lt; C &gt; &gt; &amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
          <declname>region_param</declname>
        </param>
        <param>
          <type>const std::map&lt; int, <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &gt; &amp;</type>
          <declname>catchment_parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="293" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="293" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a9fad3c75d46cf3518d85b375d90476be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shyft::core::region_model&lt; C, RE &gt;::region_model</definition>
        <argsstring>(const region_model &amp;model)</argsstring>
        <name>region_model</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="303" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a0c9b4340bf32056d0dd4387983ac0b4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> &amp;</type>
        <definition>region_model&amp; shyft::core::region_model&lt; C, RE &gt;::operator=</definition>
        <argsstring>(const region_model &amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="304" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a0d5b375322b6b0a03d04990c1a8a878c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t shyft::core::region_model&lt; C, RE &gt;::number_of_catchments</definition>
        <argsstring>() const</argsstring>
        <name>number_of_catchments</name>
        <briefdescription>
<para>compute and return number of catchments inspecting call cells.geo.catchment_id() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="317" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1aa22d4a05fe99ca180723e6f899cbed7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::connect_catchment_to_river</definition>
        <argsstring>(int cid, int rid)</argsstring>
        <name>connect_catchment_to_river</name>
        <param>
          <type>int</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>connect all cells in a catchment to a river <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>catchment id for the cells to be connected to the specified river </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rid</parametername>
</parameternamelist>
<parameterdescription>
<para>river id for the target river. Note it can be 0 to set no routing for the cells </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="323" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="323" bodyend="328"/>
        <references refid="namespaceshyft_1_1core_1_1routing_1aeefbcd046397e1cb59ec4b0973256d76" compoundref="routing_8h" startline="84" endline="84">shyft::core::routing::valid_routing_id</references>
        <references refid="structshyft_1_1core_1_1routing_1_1river__network_1a2527b0de222050e31e038833c3bfb5ae" compoundref="routing_8h" startline="147" endline="152">shyft::core::routing::river_network::check_rid</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a2e6f43a32cb8c7996b8b1b31d41ab036" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shyft::core::region_model&lt; C, RE &gt;::has_routing</definition>
        <argsstring>() const</argsstring>
        <name>has_routing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="330" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="330" bodyend="336"/>
        <references refid="namespaceshyft_1_1core_1_1routing_1aeefbcd046397e1cb59ec4b0973256d76" compoundref="routing_8h" startline="84" endline="84">shyft::core::routing::valid_routing_id</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a92efa856530515f259fed6eed56ee8cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref> &gt;</type>
        <definition>std::vector&lt;geo_cell_data&gt; shyft::core::region_model&lt; C, RE &gt;::extract_geo_cell_data</definition>
        <argsstring>() const</argsstring>
        <name>extract_geo_cell_data</name>
        <briefdescription>
<para>extracts the geo-cell data part out from the cells </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="338" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a735718766c4c66ae0463480f623c60e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::initialize_cell_environment</definition>
        <argsstring>(const timeaxis_t &amp;time_axis)</argsstring>
        <name>initialize_cell_environment</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" kindref="member">timeaxis_t</ref> &amp;</type>
          <declname>time_axis</declname>
        </param>
        <briefdescription>
<para>Initializes the cell enviroment (cell.env.ts* ) </para>        </briefdescription>
        <detaileddescription>
<para>The initializes the cell environment, that keeps temperature, precipitation etc that is local to the cell. The intial values of these time-series is set to zero. The region-model time-axis is set to the supplied time-axis, so that the any calculation steps will use the supplied time-axis. This call is needed prior to call to <ref refid="classshyft_1_1core_1_1region__model_1ad4141fe340f6d5c257ef4196a3e08a86" kindref="member">interpolate()</ref> or <ref refid="classshyft_1_1core_1_1region__model_1a642ae1d86027177ac1e88fd670e15392" kindref="member">run_cells()</ref>. The call ensures that all cells.env ts are reset to zero, with a time-axis and value-vectors according to the supplied <ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref>. Also note that the <ref refid="classshyft_1_1core_1_1region__model_1aef46bfbe262cfe71aae246d83c34f9a4" kindref="member">region_model.time_axis</ref> is set to the supplied time-axis.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the time-axis for the region-model, and thus the cells. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="357" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="357" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ad4141fe340f6d5c257ef4196a3e08a86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shyft::core::region_model&lt; C, RE &gt;::interpolate</definition>
        <argsstring>(const interpolation_parameter &amp;ip_parameter, const region_env_t &amp;env, bool best_effort=true)</argsstring>
        <name>interpolate</name>
        <param>
          <type>const <ref refid="structshyft_1_1core_1_1interpolation__parameter" kindref="compound">interpolation_parameter</ref> &amp;</type>
          <declname>ip_parameter</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a1fdec71710db7940aec82c3296019605" kindref="member">region_env_t</ref> &amp;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>best_effort</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>interpolate the supplied <ref refid="structshyft_1_1core_1_1region__environment" kindref="compound">region_environment</ref> to the cells </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>initialize_cell_environment should be called prior to this</para></simplesect>
Only supplied vectors of temp, precipitation etc. are interpolated, thus the user of the class can choose to put in place distributed series in stead.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RE</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structshyft_1_1core_1_1region__environment" kindref="compound">region_environment</ref> type</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip_parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>contains wanted parameters for the interpolation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>env</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the <ref refid="structshyft_1_1core_1_1region__environment" kindref="compound">region_environment</ref> type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>best_effort</parametername>
</parameternamelist>
<parameterdescription>
<para>controls if the entire calculation should be aborted in case of one ip-going wrong(leaving nans @ cells) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if everything went ok, false if exceptions, doing best effort </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="381" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="381" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1aebd851535d5f243857dbd53f6ab5b045" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shyft::core::region_model&lt; C, RE &gt;::run_interpolation</definition>
        <argsstring>(const interpolation_parameter &amp;ip_parameter, const timeaxis_t &amp;time_axis, const region_env_t &amp;env, bool best_effort=true)</argsstring>
        <name>run_interpolation</name>
        <param>
          <type>const <ref refid="structshyft_1_1core_1_1interpolation__parameter" kindref="compound">interpolation_parameter</ref> &amp;</type>
          <declname>ip_parameter</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" kindref="member">timeaxis_t</ref> &amp;</type>
          <declname>time_axis</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a1fdec71710db7940aec82c3296019605" kindref="member">region_env_t</ref> &amp;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>best_effort</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>initializes cell.env and project region env. <ref refid="namespaceshyft_1_1time__series" kindref="compound">time_series</ref> to cells. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Prior to running all cell.env_ts.xxx are reset to zero, and have a length of time_axis.size().</para></simplesect>
Only supplied vectors of temp, precip etc. are interpolated, thus the user of the class can choose to put in place distributed series in stead.</para><para>This call simply calls <ref refid="classshyft_1_1core_1_1region__model_1a735718766c4c66ae0463480f623c60e4" kindref="member">initialize_cell_environment()</ref> followed by <ref refid="classshyft_1_1core_1_1region__model_1ad4141fe340f6d5c257ef4196a3e08a86" kindref="member">interpolate&lt;..&gt;</ref>(..)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip_parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>contains wanted parameters for the interpolation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>should be equal to the <ref refid="namespaceshyft_1_1time__axis" kindref="compound">shyft::time_axis</ref> the <ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> is prepared running for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>env</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the <ref refid="structshyft_1_1core_1_1region__environment" kindref="compound">region_environment</ref> type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>best_effort</parametername>
</parameternamelist>
<parameterdescription>
<para>(default=true) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if entire process was done with no exceptions raised </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="530" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="530" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a642ae1d86027177ac1e88fd670e15392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::run_cells</definition>
        <argsstring>(size_t use_ncore=0, int start_step=0, int n_steps=0)</argsstring>
        <name>run_cells</name>
        <param>
          <type>size_t</type>
          <declname>use_ncore</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>start_step</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>n_steps</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>run_cells calculations over specified <ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref> the cell method stack is invoked for all the cells, using multicore up to a maximum number of tasks/cores. Notice that this implies that executing the cell method stack should have no side-effects except for invocation of the cell state_collector, response_collector. No thread should run simultaneously on the same cell, and the collectors must be carefully written to avoid any race-condition or memory contention (lock-free code). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>cells should be prepared by prior calls so that<orderedlist>
<listitem><para>all cells have env_ts intialized with env. precip,temp,rad etc.</para></listitem><listitem><para>all cells have state set to the initial values</para></listitem><listitem><para>catchment_parameters should be set (and applied to the matching cells) </para></listitem></orderedlist>
</para></simplesect>
<simplesect kind="post"><para>:<orderedlist>
<listitem><para>all cells have updated state variables</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>use_ncore</parametername>
</parameternamelist>
<parameterdescription>
<para>if 0 figure out threads using hardware info, otherwise use supplied value (throws if &gt;100x ncore) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_step</parametername>
</parameternamelist>
<parameterdescription>
<para>of time-axis, defaults to 0, starting at the beginning </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_steps</parametername>
</parameternamelist>
<parameterdescription>
<para>number of steps to run from the start_step, a value of 0 means running all time-steps </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="557" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="557" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a123b6a706b005d9851c8799bef01e976" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_region_parameter</definition>
        <argsstring>(const parameter_t &amp;p)</argsstring>
        <name>set_region_parameter</name>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>set the region parameter, apply it to all cells that do not have catchment specific parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>that if there already exist a region parameter then the values of the supplied parameter is just copied into the region parameter-set. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>is the wanted region parameter set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="585" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="585" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a64bea32d11dae7731a0aa5143c513be2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
        <definition>parameter_t&amp; shyft::core::region_model&lt; C, RE &gt;::get_region_parameter</definition>
        <argsstring>() const</argsstring>
        <name>get_region_parameter</name>
        <briefdescription>
<para>provide access to current region parameter-set </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a ref to region_parameter (non-const by intention) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="599" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="599" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ad8a94331e1da0e87e4c5dcc1da901a34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_catchment_parameter</definition>
        <argsstring>(int catchment_id, const parameter_t &amp;p)</argsstring>
        <name>set_catchment_parameter</name>
        <param>
          <type>int</type>
          <declname>catchment_id</declname>
        </param>
        <param>
          <type>const <ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>creates/modifies a pr catchment override parameter </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>catchment_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the 0 based catchment_id that correlates to the cells catchment_id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference to the parameter that will be used/applied to those cells </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="607" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="607" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a38c6d54b1900983ac39a918fa6ad09d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::remove_catchment_parameter</definition>
        <argsstring>(int catchment_id)</argsstring>
        <name>remove_catchment_parameter</name>
        <param>
          <type>int</type>
          <declname>catchment_id</declname>
        </param>
        <briefdescription>
<para>remove a catchment specific parameter override, if it exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="622" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="622" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ab40a6d4280578e8a22971c4e595df863" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shyft::core::region_model&lt; C, RE &gt;::has_catchment_parameter</definition>
        <argsstring>(int catchment_id) const</argsstring>
        <name>has_catchment_parameter</name>
        <param>
          <type>int</type>
          <declname>catchment_id</declname>
        </param>
        <briefdescription>
<para>returns true if there exist a specific parameter override for the specified 0-based catchment_id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="632" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="632" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ae524aff82577b32226653c204cc19922" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" kindref="member">parameter_t</ref> &amp;</type>
        <definition>parameter_t&amp; shyft::core::region_model&lt; C, RE &gt;::get_catchment_parameter</definition>
        <argsstring>(int catchment_id) const</argsstring>
        <name>get_catchment_parameter</name>
        <param>
          <type>int</type>
          <declname>catchment_id</declname>
        </param>
        <briefdescription>
<para>return the parameter valid for specified catchment_id, or global parameter if not found. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Be aware that if you change the returned parameter, it will affect the related cells. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>catchment_id</parametername>
</parameternamelist>
<parameterdescription>
<para>0 based catchment id as placed on each cell </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the real parameter structure for the catchment_id if exists, otherwise the global parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="641" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="641" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ae971803650e50f33b8cf36677007ee50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_catchment_calculation_filter</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;catchment_id_list)</argsstring>
        <name>set_catchment_calculation_filter</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>catchment_id_list</declname>
        </param>
        <briefdescription>
<para>set/reset the catchment based calculation filter. This affects what get simulate/calculated during the run command. Pass an empty list to reset/clear the filter (i.e. no filter). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>catchment_id_list</parametername>
</parameternamelist>
<parameterdescription>
<para>is a catchment id vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="654" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="654" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a83524e081f381b1b137eca7da05b9f4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_calculation_filter</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;catchment_id_list, const std::vector&lt; int &gt; &amp;river_id_list)</argsstring>
        <name>set_calculation_filter</name>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>catchment_id_list</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>river_id_list</declname>
        </param>
        <briefdescription>
<para>set/reset the catchment and river based calculation filter. This affects what get simulate/calculated during the run command. Pass an empty list to reset/clear the filter (i.e. no filter). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>catchment_id_list</parametername>
</parameternamelist>
<parameterdescription>
<para>is a catchment id vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>river_id_list</parametername>
</parameternamelist>
<parameterdescription>
<para>is a river id vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="677" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="677" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ade458ad694b940b037cc8e95a1bf53fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::set&lt; int &gt;</type>
        <definition>std::set&lt;int&gt; shyft::core::region_model&lt; C, RE &gt;::get_catchment_feeding_to_river</definition>
        <argsstring>(int river_id) const</argsstring>
        <name>get_catchment_feeding_to_river</name>
        <param>
          <type>int</type>
          <declname>river_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute the unique set of catchments feeding into this river_id, or any river upstream </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="690" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="690" bodyend="701"/>
        <references refid="namespaceshyft_1_1core_1_1routing_1aeefbcd046397e1cb59ec4b0973256d76" compoundref="routing_8h" startline="84" endline="84">shyft::core::routing::valid_routing_id</references>
        <references refid="namespaceshyft_1_1experimental_1_1io_1a93692cd20b6eabf36411f3ba1745c1d2" compoundref="experimental_8cpp" startline="48" endline="64">shyft::experimental::io::find</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a75a464c8168886af8649eb7ac761779c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shyft::core::region_model&lt; C, RE &gt;::is_calculated</definition>
        <argsstring>(size_t cid) const</argsstring>
        <name>is_calculated</name>
        <param>
          <type>size_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>using the catchment_calculation_filter to decide if discharge etc. are calculated. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>catchment id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if catchment id is calculated during runs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="707" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="707" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a5d3ccceba951c216cad17966d75d455a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool shyft::core::region_model&lt; C, RE &gt;::is_calculated_by_catchment_ix</definition>
        <argsstring>(size_t cix) const</argsstring>
        <name>is_calculated_by_catchment_ix</name>
        <param>
          <type>size_t</type>
          <declname>cix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="711" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="711" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1afbf9a08428250472fd5b220e3ccbe879" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t shyft::core::region_model&lt; C, RE &gt;::cix_from_cid</definition>
        <argsstring>(size_t cid) const</argsstring>
        <name>cix_from_cid</name>
        <param>
          <type>size_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="713" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="713" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ab5f7696f8a95d89fe4a185ddb5c819f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::get_states</definition>
        <argsstring>(std::vector&lt; state_t &gt; &amp;end_states) const</argsstring>
        <name>get_states</name>
        <param>
          <type>std::vector&lt; <ref refid="classshyft_1_1core_1_1region__model_1a7c3551b5c2de31c4b2043c55262037a5" kindref="member">state_t</ref> &gt; &amp;</type>
          <declname>end_states</declname>
        </param>
        <briefdescription>
<para>collects current state from all the cells </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>that catchment filter can influence which states are calculated/updated. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>end_states</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference to the vector&lt;state_t&gt; that are filled with cell state, in order of appearance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="723" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="723" bodyend="726"/>
        <references refid="structshyft_1_1core_1_1cell_1a5f0b2da8099f8a172e6dbc428ec61a77" compoundref="cell__model_8h" startline="112">shyft::core::cell&lt; P, E, S, SC, RC &gt;::state</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1acbe824cfe25c81f44013a80ffeeb57b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_states</definition>
        <argsstring>(const std::vector&lt; state_t &gt; &amp;states)</argsstring>
        <name>set_states</name>
        <param>
          <type>const std::vector&lt; <ref refid="classshyft_1_1core_1_1region__model_1a7c3551b5c2de31c4b2043c55262037a5" kindref="member">state_t</ref> &gt; &amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
<para>set current state for all the cells in the model. </para>        </briefdescription>
        <detaileddescription>
<para>If this is the first &apos;<ref refid="classshyft_1_1core_1_1region__model_1acbe824cfe25c81f44013a80ffeeb57b1" kindref="member">set_states()</ref>&apos;, initial_state is copied from the supplied vector. The purpose of this is to ease scripting so that one always get back the initial state if needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>is a vector&lt;state_t&gt; of all states, must match size/order of cells. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>throws runtime-error if states.size is different from cells.size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="737" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="737" bodyend="744"/>
        <references refid="structshyft_1_1core_1_1cell_1a2a2cf666df93bc8b098ee7d97b4b657b" compoundref="cell__model_8h" startline="139" endline="138">shyft::core::cell&lt; P, E, S, SC, RC &gt;::set_state</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a3b3d8c471dbb9d0be0b360eea84181f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::revert_to_initial_state</definition>
        <argsstring>()</argsstring>
        <name>revert_to_initial_state</name>
        <briefdescription>
<para>revert cell states to the initial state (if it exists) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="747" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="747" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a207310ec09ab0741847b136f7f09724a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_state_collection</definition>
        <argsstring>(int catchment_id, bool on_or_off)</argsstring>
        <name>set_state_collection</name>
        <param>
          <type>int</type>
          <declname>catchment_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on_or_off</declname>
        </param>
        <briefdescription>
<para>enable state collection for specified or all cells </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>that this only works if the underlying cell is configured to do state collection. THis is typically not the case for cell-types that are used during calibration/optimization </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="757" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="757" bodyend="761"/>
        <references refid="structshyft_1_1core_1_1cell_1aa06edecba334fedb3ff47fda48707827" compoundref="cell__model_8h" startline="110">shyft::core::cell&lt; P, E, S, SC, RC &gt;::geo</references>
        <references refid="structshyft_1_1core_1_1geo__cell__data_1aa56e4e1bdcbb259351f6e334459d4d84" compoundref="geo__cell__data_8h" startline="111" endline="111">shyft::core::geo_cell_data::catchment_id</references>
        <references refid="structshyft_1_1core_1_1cell_1af107be89dd5730c57bc9394b0d8bdaf2" compoundref="cell__model_8h" startline="141" endline="140">shyft::core::cell&lt; P, E, S, SC, RC &gt;::set_state_collection</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a491c98711397fcb73ace1dc771198035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::set_snow_sca_swe_collection</definition>
        <argsstring>(int catchment_id, bool on_or_off)</argsstring>
        <name>set_snow_sca_swe_collection</name>
        <param>
          <type>int</type>
          <declname>catchment_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on_or_off</declname>
        </param>
        <briefdescription>
<para>enable/disable collection of snow sca|sca for calibration purposes </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>catchment_id</parametername>
</parameternamelist>
<parameterdescription>
<para>to enable snow calibration for, -1 means turn on/off for all </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>on_or_off</parametername>
</parameternamelist>
<parameterdescription>
<para>true|or false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>if the underlying cell do not support snow sca|swe collection, this call has no effect </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="767" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="767" bodyend="771"/>
        <references refid="structshyft_1_1core_1_1cell_1aa06edecba334fedb3ff47fda48707827" compoundref="cell__model_8h" startline="110">shyft::core::cell&lt; P, E, S, SC, RC &gt;::geo</references>
        <references refid="structshyft_1_1core_1_1geo__cell__data_1aa56e4e1bdcbb259351f6e334459d4d84" compoundref="geo__cell__data_8h" startline="111" endline="111">shyft::core::geo_cell_data::catchment_id</references>
        <references refid="structshyft_1_1core_1_1cell_1aff7ec6497916397336bfd49e8af95472" compoundref="cell__model_8h" startline="143" endline="143">shyft::core::cell&lt; P, E, S, SC, RC &gt;::set_snow_sca_swe_collection</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a85c42c51816021509100cd31d86521a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classshyft_1_1core_1_1region__model_1a235f5fb30a5bfa243da8e4393cd95518" kindref="member">cell_vec_t_</ref></type>
        <definition>cell_vec_t_ shyft::core::region_model&lt; C, RE &gt;::get_cells</definition>
        <argsstring>() const</argsstring>
        <name>get_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>cells as shared_ptr&lt;vector&lt;cell_t&gt;&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="773" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="773" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a6c4a010bfbf4dc2603adcb7190948380" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t shyft::core::region_model&lt; C, RE &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of cells </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="776" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="776" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ab3750fcea38cf735cc3abea09ef37dea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TSV</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::catchment_discharges</definition>
        <argsstring>(TSV &amp;cr) const</argsstring>
        <name>catchment_discharges</name>
        <param>
          <type>TSV &amp;</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
<para>catchment_discharges, vital for calibration </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TSV</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector&lt;time_series&gt; type, where <ref refid="namespaceshyft_1_1time__series" kindref="compound">time_series</ref> supports:<orderedlist>
<listitem><para>.ct(timeaxis_t, double) fills a series with 0.0 for all <ref refid="namespaceshyft_1_1time__axis" kindref="compound">time_axis</ref> elements</para></listitem><listitem><para>.add( const some_ts &amp; ts) </para></listitem></orderedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cr</parametername>
</parameternamelist>
<parameterdescription>
<para>catchment result vector to be filled in </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the ts type should have proper move/copy etc. semantics </para></simplesect>
<simplesect kind="return"><para>filled in cr, dimensioned to number of catchments, where the i&apos;th entry correspond to cid using cix_to_cid(i) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="787" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="787" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a86a7e8d320ecbbba82b99bb61fc79f51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TSV</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::catchment_charges</definition>
        <argsstring>(TSV &amp;cr) const</argsstring>
        <name>catchment_charges</name>
        <param>
          <type>TSV &amp;</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="801" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="801" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a8487f23d31e135442fb3aabcf7c68095" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TSV</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void shyft::core::region_model&lt; C, RE &gt;::routing_discharges</definition>
        <argsstring>(TSV &amp;cr) const</argsstring>
        <name>routing_discharges</name>
        <param>
          <type>TSV &amp;</type>
          <declname>cr</declname>
        </param>
        <briefdescription>
<para>return all discharges at the output of the routing points </para>        </briefdescription>
        <detaileddescription>
<para>For all routing nodes,(maybe terminal routing nodes ?) compute the routed discharge. <simplesect kind="note"><para>if no routing, empty time-series is returned. </para></simplesect>
<simplesect kind="return"><para>time-series by ascending routing id order where the i&apos;th entry correspond to sorted river idents asc. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="823" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="823" bodyend="838"/>
        <references refid="structshyft_1_1core_1_1routing_1_1model_1a01b0297b059e2729c1feafdc05633ee1" compoundref="routing_8h" startline="376" endline="382">shyft::core::routing::model&lt; C &gt;::output_m3s</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ad151c970c0b56edd7194fd34566bdb36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref> &gt;</type>
        <definition>std::shared_ptr&lt;pts_t&gt; shyft::core::region_model&lt; C, RE &gt;::river_output_flow_m3s</definition>
        <argsstring>(int rid) const</argsstring>
        <name>river_output_flow_m3s</name>
        <param>
          <type>int</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="839" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="839" bodyend="846"/>
        <references refid="namespaceshyft_1_1time__series_1ab66642bfe2651c86498cf53c9217710fa6b1c6c9e56366f103913f2fc503270c3" compoundref="core_2time__series_8h" startline="64">shyft::time_series::POINT_AVERAGE_VALUE</references>
        <references refid="structshyft_1_1core_1_1routing_1_1model_1a01b0297b059e2729c1feafdc05633ee1" compoundref="routing_8h" startline="376" endline="382">shyft::core::routing::model&lt; C &gt;::output_m3s</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1a2fe0087c0fdeeee8845ef8dd54814e5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref> &gt;</type>
        <definition>std::shared_ptr&lt;pts_t&gt; shyft::core::region_model&lt; C, RE &gt;::river_upstream_inflow_m3s</definition>
        <argsstring>(int rid) const</argsstring>
        <name>river_upstream_inflow_m3s</name>
        <param>
          <type>int</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="847" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="847" bodyend="854"/>
        <references refid="namespaceshyft_1_1time__series_1ab66642bfe2651c86498cf53c9217710fa6b1c6c9e56366f103913f2fc503270c3" compoundref="core_2time__series_8h" startline="64">shyft::time_series::POINT_AVERAGE_VALUE</references>
        <references refid="structshyft_1_1core_1_1routing_1_1model_1a3bc7f2d20c9b446a39e3ed15a6955bc3" compoundref="routing_8h" startline="359" endline="369">shyft::core::routing::model&lt; C &gt;::upstream_inflow</references>
      </memberdef>
      <memberdef kind="function" id="classshyft_1_1core_1_1region__model_1ab4fea9d00916500737d9ae04ef356496" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="namespaceshyft_1_1core_1a66ab1c26a208c26ebbb03c3727d4c6de" kindref="member">pts_t</ref> &gt;</type>
        <definition>std::shared_ptr&lt;pts_t&gt; shyft::core::region_model&lt; C, RE &gt;::river_local_inflow_m3s</definition>
        <argsstring>(int rid) const</argsstring>
        <name>river_local_inflow_m3s</name>
        <param>
          <type>int</type>
          <declname>rid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="855" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="855" bodyend="862"/>
        <references refid="namespaceshyft_1_1time__series_1ab66642bfe2651c86498cf53c9217710fa6b1c6c9e56366f103913f2fc503270c3" compoundref="core_2time__series_8h" startline="64">shyft::time_series::POINT_AVERAGE_VALUE</references>
        <references refid="structshyft_1_1core_1_1routing_1_1model_1a19650092559146cf7b038c1c93d86de6" compoundref="routing_8h" startline="343" endline="353">shyft::core::routing::model&lt; C &gt;::local_inflow</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> is the calculation model for a region, where we can have one or more catchments. The role of the <ref refid="classshyft_1_1core_1_1region__model" kindref="compound">region_model</ref> is to describe region, so that we can run the region computational model efficiently for a number of type of cells, interpolation and catchment level algorihtms. </para>    </briefdescription>
    <detaileddescription>
<para>The region model keeps a list of cells, of specified type C</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> type parameter, describes the distributed <ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref> calculation stack. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RE</parametername>
</parameternamelist>
<parameterdescription>
<para>region environment class The cell-type must provide the following types:<orderedlist>
<listitem><para>parameter_t parameter type for the cell calculation stack</para></listitem><listitem><para>state_t state type for the cell</para></listitem><listitem><para>response_t response type for cell</para></listitem><listitem><para>timeaxis_t timeaxis type for the cell environment input/result ts. and following members/methods must be available</para></listitem><listitem><para>.run(time_axis) executes the method stack for the cell, (must be thread-safe!)</para></listitem><listitem><para>.env_ts with env. parameters </para></listitem></orderedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="808">
        <label>size_t</label>
      </node>
      <node id="809">
        <label>shyft::core::interpolation_parameter</label>
        <link refid="structshyft_1_1core_1_1interpolation__parameter"/>
        <childnode refid="810" relation="usage">
          <edgelabel>temperature_idw</edgelabel>
        </childnode>
        <childnode refid="812" relation="usage">
          <edgelabel>precipitation</edgelabel>
        </childnode>
        <childnode refid="811" relation="usage">
          <edgelabel>rel_hum</edgelabel>
          <edgelabel>wind_speed</edgelabel>
          <edgelabel>radiation</edgelabel>
        </childnode>
        <childnode refid="813" relation="usage">
          <edgelabel>temperature</edgelabel>
        </childnode>
      </node>
      <node id="813">
        <label>shyft::core::bayesian_kriging::parameter</label>
        <link refid="classshyft_1_1core_1_1bayesian__kriging_1_1parameter"/>
      </node>
      <node id="812">
        <label>shyft::core::inverse_distance::precipitation_parameter</label>
        <link refid="structshyft_1_1core_1_1inverse__distance_1_1precipitation__parameter"/>
        <childnode refid="811" relation="public-inheritance">
        </childnode>
      </node>
      <node id="810">
        <label>shyft::core::inverse_distance::temperature_parameter</label>
        <link refid="structshyft_1_1core_1_1inverse__distance_1_1temperature__parameter"/>
        <childnode refid="811" relation="public-inheritance">
        </childnode>
      </node>
      <node id="807">
        <label>shyft::core::routing::river_network</label>
        <link refid="structshyft_1_1core_1_1routing_1_1river__network"/>
      </node>
      <node id="811">
        <label>shyft::core::inverse_distance::parameter</label>
        <link refid="structshyft_1_1core_1_1inverse__distance_1_1parameter"/>
        <childnode refid="808" relation="usage">
          <edgelabel>max_members</edgelabel>
        </childnode>
      </node>
      <node id="806">
        <label>shyft::core::region_model&lt; C, RE &gt;</label>
        <link refid="classshyft_1_1core_1_1region__model"/>
        <childnode refid="807" relation="usage">
          <edgelabel>river_network</edgelabel>
        </childnode>
        <childnode refid="808" relation="usage">
          <edgelabel>n_catchments</edgelabel>
          <edgelabel>ncore</edgelabel>
        </childnode>
        <childnode refid="809" relation="usage">
          <edgelabel>ip_parameter</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" line="210" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_workspace/shyft/core/region_model.h" bodystart="210" bodyend="949"/>
    <listofallmembers>
      <member refid="classshyft_1_1core_1_1region__model_1a86a7e8d320ecbbba82b99bb61fc79f51" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>catchment_charges</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab3750fcea38cf735cc3abea09ef37dea" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>catchment_discharges</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ada95b49d7d4ca35ba7a561c9595e3fff" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>catchment_filter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a0f167f1070d32bdea9ad885eb9d5d61b" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>catchment_parameters</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a0c4f1ad910577a13260845b1f9fc3dac" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cell_iterator</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ade47f813473ea7c82e8d7c177a0455cb" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cell_t</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1aaee85dc06f4831b972d0ca6b10c4ace0" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cell_vec_t</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a235f5fb30a5bfa243da8e4393cd95518" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cell_vec_t_</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ae6d8d0fc2bd2fd704e3167bb885fbc4b" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cells</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ac51e72d6c48005bc588730431cd4b9b3" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cid_to_cix</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1afbf9a08428250472fd5b220e3ccbe879" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cix_from_cid</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a44edd4d8cb58b57bbea4ac094dd04950" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>cix_to_cid</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ae4e34d66358a583539c9659ce5323d61" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>clone</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1aa22d4a05fe99ca180723e6f899cbed7d" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>connect_catchment_to_river</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a92efa856530515f259fed6eed56ee8cd" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>extract_geo_cell_data</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ade458ad694b940b037cc8e95a1bf53fe" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>get_catchment_feeding_to_river</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ae524aff82577b32226653c204cc19922" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>get_catchment_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a85c42c51816021509100cd31d86521a9" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>get_cells</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a64bea32d11dae7731a0aa5143c513be2" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>get_region_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab5f7696f8a95d89fe4a185ddb5c819f9" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>get_states</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab40a6d4280578e8a22971c4e595df863" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>has_catchment_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a2e6f43a32cb8c7996b8b1b31d41ab036" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>has_routing</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab6e30f034a20faa24149bcc08b5eef1d" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>initial_state</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a735718766c4c66ae0463480f623c60e4" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>initialize_cell_environment</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ad4141fe340f6d5c257ef4196a3e08a86" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>interpolate</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ad9304e1161aa44c8a63327467f586c52" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>ip_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a75a464c8168886af8649eb7ac761779c" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>is_calculated</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a5d3ccceba951c216cad17966d75d455a" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>is_calculated_by_catchment_ix</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1abae2995dc32f5ff1945feb8dfc47bdbd" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>n_catchments</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1aa79737778f903ae7bbbb48619e65e3fb" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>ncore</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a0d5b375322b6b0a03d04990c1a8a878c" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>number_of_catchments</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a0c9b4340bf32056d0dd4387983ac0b4c" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>operator=</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a09af2fc60c16994ee6693efbebe2d134" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>parallel_run</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a6fa4958c05d9f54615c909636c4e5914" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>parameter_t</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a6aa0dbf869732b15a60d7ce83643a6e4" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>parameter_t_</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ac588af973bcb69a92a9b6778fcf14dd2" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_env</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a1fdec71710db7940aec82c3296019605" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_env_t</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a5a7759fadf4e5abad488f3e7e9df9284" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_model</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab2502b156bcacd1325e72c543e2ed063" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_model</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ae9a42eaca45e4f4f11664bbf10142a0b" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_model</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a9fad3c75d46cf3518d85b375d90476be" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_model</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab0532d2fa23818127f902927dd64d5d5" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>region_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a38c6d54b1900983ac39a918fa6ad09d3" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>remove_catchment_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a3b3d8c471dbb9d0be0b360eea84181f9" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>revert_to_initial_state</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ab4fea9d00916500737d9ae04ef356496" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>river_local_inflow_m3s</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a43a7bbfbd69c9cbc633cc7b7b1014897" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>river_network</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ad151c970c0b56edd7194fd34566bdb36" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>river_output_flow_m3s</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a2fe0087c0fdeeee8845ef8dd54814e5e" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>river_upstream_inflow_m3s</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a8487f23d31e135442fb3aabcf7c68095" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>routing_discharges</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a642ae1d86027177ac1e88fd670e15392" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>run_cells</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1aebd851535d5f243857dbd53f6ab5b045" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>run_interpolation</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ae4dd68593dbe0993dc09c89d8a15d793" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>run_routing</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a83524e081f381b1b137eca7da05b9f4a" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_calculation_filter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ae971803650e50f33b8cf36677007ee50" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_catchment_calculation_filter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ad8a94331e1da0e87e4c5dcc1da901a34" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_catchment_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a123b6a706b005d9851c8799bef01e976" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_region_parameter</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a491c98711397fcb73ace1dc771198035" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_snow_sca_swe_collection</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a207310ec09ab0741847b136f7f09724a" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_state_collection</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1acbe824cfe25c81f44013a80ffeeb57b1" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>set_states</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a9b3f84742552b02f4ae97f925591cf80" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>single_run</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a6c4a010bfbf4dc2603adcb7190948380" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>size</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a7c3551b5c2de31c4b2043c55262037a5" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>state_t</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1aef46bfbe262cfe71aae246d83c34f9a4" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>time_axis</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1ace9cf90e809bb9cf139989a351dfeb2a" prot="public" virt="non-virtual"><scope>shyft::core::region_model</scope><name>timeaxis_t</name></member>
      <member refid="classshyft_1_1core_1_1region__model_1a99b7d24a42dd51a96cd2dfecb209e40b" prot="protected" virt="non-virtual"><scope>shyft::core::region_model</scope><name>update_ix_to_id_mapping</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
