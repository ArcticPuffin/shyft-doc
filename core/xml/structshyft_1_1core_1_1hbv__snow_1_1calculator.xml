<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structshyft_1_1core_1_1hbv__snow_1_1calculator" kind="struct" language="C++" prot="public">
    <compoundname>shyft::core::hbv_snow::calculator</compoundname>
    <includes refid="hbv__snow_8h" local="no">hbv_snow.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>P</declname>
        <defname>P</defname>
      </param>
      <param>
        <type>class</type>
        <declname>S</declname>
        <defname>S</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1ab6351f0d32cdfb73adeb1757981949b5" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::core::hbv_snow::calculator&lt; P, S &gt;::sd</definition>
        <argsstring></argsstring>
        <name>sd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="138" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a50a0dbc6e559bf5044f2369c1a9f0423" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::core::hbv_snow::calculator&lt; P, S &gt;::I</definition>
        <argsstring></argsstring>
        <name>I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="139" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a09aba5a9ff33e776474d357997b0960a" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::core::hbv_snow::calculator&lt; P, S &gt;::sp</definition>
        <argsstring></argsstring>
        <name>sp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="140" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a638987996acef8b0a49d2e071fe53b3e" prot="public" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; shyft::core::hbv_snow::calculator&lt; P, S &gt;::sw</definition>
        <argsstring></argsstring>
        <name>sw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="141" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a244a17800727f46dec37f3130114fa64" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t shyft::core::hbv_snow::calculator&lt; P, S &gt;::I_n</definition>
        <argsstring></argsstring>
        <name>I_n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="142" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1aaa79b3f68fcfb5af2710729972ae562a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>shyft::core::hbv_snow::calculator&lt; P, S &gt;::calculator</definition>
        <argsstring>(const P &amp;p, S &amp;state)</argsstring>
        <name>calculator</name>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>S &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="144" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="144" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a15b346cee26c8e4a82e7392cb08c75c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::hbv_snow::calculator&lt; P, S &gt;::refreeze</definition>
        <argsstring>(double &amp;sp, double &amp;sw, const double rain, const double potmelt, const double lw)</argsstring>
        <name>refreeze</name>
        <param>
          <type>double &amp;</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sw</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rain</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>potmelt</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="179" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="179" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1ad8838f146beb6df1993aeb02a7f3d6dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shyft::core::hbv_snow::calculator&lt; P, S &gt;::update_state</definition>
        <argsstring>(double &amp;sp, double &amp;sw, const double rain, const double potmelt, const double lw)</argsstring>
        <name>update_state</name>
        <param>
          <type>double &amp;</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sw</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rain</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>potmelt</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="194" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="194" bodyend="201"/>
        <references refid="namespaceshyft_1_1timeseries_1a4fa091ae89d99e00daff8f0821576893" compoundref="core_2timeseries_8h" startline="892" endline="894">shyft::timeseries::min</references>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a5fe8ce8e60b82d2b8ad05535e6982bb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t shyft::core::hbv_snow::calculator&lt; P, S &gt;::sca_index</definition>
        <argsstring>(double sca) const</argsstring>
        <name>sca_index</name>
        <param>
          <type>double</type>
          <declname>sca</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="203" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a14f8e425bd7bbb14ef6799fd1d4e8c17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t shyft::core::hbv_snow::calculator&lt; P, S &gt;::melt_index</definition>
        <argsstring>(double potmelt)</argsstring>
        <name>melt_index</name>
        <param>
          <type>double</type>
          <declname>potmelt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="210" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a29b2d89d26ea325e00acfb7eee6f5639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class R</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void shyft::core::hbv_snow::calculator&lt; P, S &gt;::step</definition>
        <argsstring>(S &amp;s, R &amp;r, shyft::core::utctime t0, shyft::core::utctime t1, const P &amp;p, double prec, double temp)</argsstring>
        <name>step</name>
        <param>
          <type>S &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>R &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">shyft::core::utctime</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">shyft::core::utctime</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="217" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="217" bodyend="295"/>
        <references refid="namespaceshyft_1_1core_1_1hbv__snow_1a65b17e05da578ebac4e43edea3cb8847" compoundref="hbv__snow_8h" startline="35" endline="64">shyft::core::hbv_snow::integrate</references>
        <referencedby refid="namespaceshyft_1_1core_1_1hbv__stack_1a98bae2a3c968ad1ceeb1227957e1df78" compoundref="core_2hbv__stack_8h" startline="238" endline="309">shyft::core::hbv_stack::run_hbv_stack</referencedby>
        <referencedby refid="namespaceshyft_1_1core_1_1pt__hs__k_1a8f36026f35fc84f58d593fdd19cbab8d" compoundref="core_2pt__hs__k_8h" startline="151" endline="220">shyft::core::pt_hs_k::run</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generalized quantile based HBV Snow model method. </para>    </briefdescription>
    <detaileddescription>
<para>This algorithm uses arbitrary quartiles to model snow. No checks are performed to assert valid input. The starting points of the quantiles have to partition the unity, include the end points 0 and 1 and must be given in ascending order.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter type, implementing the interface:<itemizedlist>
<listitem><para>P.s() const <ndash/>&gt; vector&lt;double&gt;, snowfall redistribution vector</para></listitem><listitem><para>P.intervals() const <ndash/>&gt; vector&lt;double&gt;, starting points for the quantiles</para></listitem><listitem><para>P.lw() const <ndash/>&gt; double, max liquid water content of the snow</para></listitem><listitem><para>P.tx() const <ndash/>&gt; double, threshold temperature determining if precipitation is rain or snow</para></listitem><listitem><para>P.cx() const <ndash/>&gt; double, temperature index, i.e., melt = cx(t - ts) in mm per degree C</para></listitem><listitem><para>P.ts() const <ndash/>&gt; double, threshold temperature for melt onset</para></listitem><listitem><para>P.cfr() const <ndash/>&gt; double, refreeze coefficient, refreeze = cfr*cx*(ts - t) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>State type, implementing the interface:<itemizedlist>
<listitem><para>S.swe <ndash/>&gt; double, snow water equivalent of the snowpack [mm]</para></listitem><listitem><para>S.sca <ndash/>&gt; double, fraction of area covered by the snowpack [0,1] </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>Respone type, implementing the interface:<itemizedlist>
<listitem><para>S.set_outflow(double value) <ndash/>&gt; void, set the value of the outflow [mm] </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" line="136" column="1" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/core/hbv_snow.h" bodystart="136" bodyend="296"/>
    <listofallmembers>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1aaa79b3f68fcfb5af2710729972ae562a" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>calculator</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a50a0dbc6e559bf5044f2369c1a9f0423" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>I</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a244a17800727f46dec37f3130114fa64" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>I_n</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a14f8e425bd7bbb14ef6799fd1d4e8c17" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>melt_index</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a15b346cee26c8e4a82e7392cb08c75c7" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>refreeze</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a5fe8ce8e60b82d2b8ad05535e6982bb1" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>sca_index</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1ab6351f0d32cdfb73adeb1757981949b5" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>sd</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a09aba5a9ff33e776474d357997b0960a" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>sp</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a29b2d89d26ea325e00acfb7eee6f5639" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>step</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1a638987996acef8b0a49d2e071fe53b3e" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>sw</name></member>
      <member refid="structshyft_1_1core_1_1hbv__snow_1_1calculator_1ad8838f146beb6df1993aeb02a7f3d6dc" prot="public" virt="non-virtual"><scope>shyft::core::hbv_snow::calculator</scope><name>update_state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
