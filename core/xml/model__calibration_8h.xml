<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="model__calibration_8h" kind="file" language="C++">
    <compoundname>model_calibration.h</compoundname>
    <includes local="no">dlib/optimization.h</includes>
    <includes local="no">dlib/statistics.h</includes>
    <includes refid="cell__model_8h" local="yes">cell_model.h</includes>
    <includes refid="region__model_8h" local="yes">region_model.h</includes>
    <includes refid="dream__optimizer_8h" local="yes">dream_optimizer.h</includes>
    <includes refid="sceua__optimizer_8h" local="yes">sceua_optimizer.h</includes>
    <includedby refid="api_8h" local="yes">/home/sih/projects/shyft/api/api.h</includedby>
    <incdepgraph>
      <node id="811">
        <label>actual_evapotranspiration.h</label>
        <link refid="actual__evapotranspiration_8h"/>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="812">
        <label>precipitation_correction.h</label>
        <link refid="precipitation__correction_8h"/>
      </node>
      <node id="803">
        <label>functional</label>
      </node>
      <node id="792">
        <label>limits</label>
      </node>
      <node id="807">
        <label>gamma_snow.h</label>
        <link refid="gamma__snow_8h"/>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="775">
        <label>/home/sih/projects/shyft/core/model_calibration.h</label>
        <link refid="model__calibration_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
      </node>
      <node id="816">
        <label>dream_optimizer.h</label>
        <link refid="dream__optimizer_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>geo_cell_data.h</label>
        <link refid="geo__cell__data_8h"/>
        <childnode refid="798" relation="include">
        </childnode>
      </node>
      <node id="784">
        <label>cmath</label>
      </node>
      <node id="791">
        <label>stdexcept</label>
      </node>
      <node id="776">
        <label>dlib/optimization.h</label>
      </node>
      <node id="782">
        <label>string</label>
      </node>
      <node id="800">
        <label>bayesian_kriging.h</label>
        <link refid="bayesian__kriging_8h"/>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="801" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
      <node id="786">
        <label>map</label>
      </node>
      <node id="810">
        <label>pt_gs_k.h</label>
        <link refid="core_2pt__gs__k_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="804" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
      </node>
      <node id="798">
        <label>geo_point.h</label>
        <link refid="geo__point_8h"/>
      </node>
      <node id="801">
        <label>armadillo</label>
      </node>
      <node id="804">
        <label>kirchner.h</label>
        <link refid="kirchner_8h"/>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="806" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
      </node>
      <node id="789">
        <label>exception</label>
      </node>
      <node id="795">
        <label>glacier_melt.h</label>
        <link refid="glacier__melt_8h"/>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="781">
        <label>utctime_utilities.h</label>
        <link refid="utctime__utilities_8h"/>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
      </node>
      <node id="818">
        <label>sceua_optimizer.h</label>
        <link refid="sceua__optimizer_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="777">
        <label>dlib/statistics.h</label>
      </node>
      <node id="796">
        <label>unit_conversion.h</label>
        <link refid="unit__conversion_8h"/>
      </node>
      <node id="813">
        <label>pt_hs_k.h</label>
        <link refid="core_2pt__hs__k_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="804" relation="include">
        </childnode>
        <childnode refid="814" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
      </node>
      <node id="805">
        <label>boost/math_fwd.hpp</label>
      </node>
      <node id="814">
        <label>hbv_snow.h</label>
        <link refid="hbv__snow_8h"/>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="779">
        <label>timeseries.h</label>
        <link refid="core_2timeseries_8h"/>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
      </node>
      <node id="785">
        <label>vector</label>
      </node>
      <node id="815">
        <label>sstream</label>
      </node>
      <node id="788">
        <label>time_axis.h</label>
        <link refid="time__axis_8h"/>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="799">
        <label>region_model.h</label>
        <link refid="region__model_8h"/>
        <childnode refid="800" relation="include">
        </childnode>
        <childnode refid="802" relation="include">
        </childnode>
        <childnode refid="804" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
      </node>
      <node id="806">
        <label>boost/numeric/odeint.hpp</label>
      </node>
      <node id="802">
        <label>inverse_distance.h</label>
        <link refid="inverse__distance_8h"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="801" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
        <childnode refid="798" relation="include">
        </childnode>
      </node>
      <node id="783">
        <label>time.h</label>
      </node>
      <node id="793">
        <label>iostream</label>
      </node>
      <node id="817">
        <label>optimizer_utils.h</label>
        <link refid="optimizer__utils_8h"/>
      </node>
      <node id="778">
        <label>cell_model.h</label>
        <link refid="cell__model_8h"/>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
      </node>
      <node id="808">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="794">
        <label>type_traits</label>
      </node>
      <node id="790">
        <label>algorithm</label>
      </node>
      <node id="787">
        <label>memory</label>
      </node>
      <node id="780">
        <label>compiler_compatiblity.h</label>
        <link refid="compiler__compatiblity_8h"/>
      </node>
      <node id="809">
        <label>priestley_taylor.h</label>
        <link refid="priestley__taylor_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="819">
        <label>/home/sih/projects/shyft/core/model_calibration.h</label>
        <link refid="model__calibration_8h"/>
        <childnode refid="820" relation="include">
        </childnode>
      </node>
      <node id="820">
        <label>/home/sih/projects/shyft/api/api.h</label>
        <link refid="api_8h"/>
        <childnode refid="821" relation="include">
        </childnode>
      </node>
      <node id="821">
        <label>/home/sih/projects/shyft/api/api.cpp</label>
        <link refid="api_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx" prot="public">shyft::core::model_calibration::dream_fx</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx" prot="public">shyft::core::model_calibration::sceua_fx</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform" prot="public">shyft::core::model_calibration::ts_transform</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" prot="public">shyft::core::model_calibration::target_specification</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__sca" prot="public">shyft::core::model_calibration::detect_snow_sca</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__sca_3_01_t_00_01decltype_07_t_1_1snow__sca_00_01void_07_08_08_4" prot="public">shyft::core::model_calibration::detect_snow_sca&lt; T, decltype(T::snow_sca, void())&gt;</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__swe" prot="public">shyft::core::model_calibration::detect_snow_swe</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__swe_3_01_t_00_01decltype_07_t_1_1snow__swe_00_01void_07_08_08_4" prot="public">shyft::core::model_calibration::detect_snow_swe&lt; T, decltype(T::snow_swe, void())&gt;</innerclass>
    <innerclass refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" prot="public">shyft::core::model_calibration::area_ts</innerclass>
    <innerclass refid="classshyft_1_1core_1_1model__calibration_1_1optimizer" prot="public">shyft::core::model_calibration::optimizer</innerclass>
    <innernamespace refid="namespaceshyft">shyft</innernamespace>
    <innernamespace refid="namespaceshyft_1_1core">shyft::core</innernamespace>
    <innernamespace refid="namespaceshyft_1_1core_1_1model__calibration">shyft::core::model_calibration</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlib/optimization.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlib/statistics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cell__model_8h" kindref="compound">cell_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="region__model_8h" kindref="compound">region_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dream__optimizer_8h" kindref="compound">dream_optimizer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sceua__optimizer_8h" kindref="compound">sceua_optimizer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshyft" kindref="compound">shyft</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">core<sp/>{</highlight></codeline>
<codeline lineno="11" refid="namespaceshyft_1_1core_1_1model__calibration" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">model_calibration<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="31" refid="namespaceshyft_1_1core_1_1model__calibration_1a29d1dd6f07e3da2747064b5f2de13eed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a29d1dd6f07e3da2747064b5f2de13eed" kindref="member">min_bobyqa</ref>(M&amp;<sp/>model,<sp/>vector&lt;double&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_n_evaluations,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr_start,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr_stop)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>dlib::matrix&lt;double,<sp/>0,<sp/>1&gt;<sp/>column_vector;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>all<sp/>parameter<sp/>ranges<sp/>to<sp/>[0,<sp/>1]<sp/>for<sp/>better<sp/>initial<sp/>trust<sp/>region<sp/>radius<sp/>balance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>x_s<sp/>=<sp/>model.to_scaled(x);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_vector<sp/>_x<sp/>=<sp/>dlib::mat(x_s);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scaled<sp/>region<sp/>min<sp/>and<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_vector<sp/>x_l(_x.nr());<sp/>x_l<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_vector<sp/>x_u(_x.nr());<sp/>x_u<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>find_min_bobyqa([&amp;model](column_vector<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model(x);<sp/>},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_x,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>_x.nr()<sp/>+<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recommended<sp/>number<sp/>of<sp/>interpolation<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_l,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_u,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr_start,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>trust<sp/>region<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr_stop,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stopping<sp/>trust<sp/>region<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_n_evaluations<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>number<sp/>of<sp/>objective<sp/>function<sp/>evaluations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>back<sp/>to<sp/>real<sp/>parameter<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>model.from_scaled(_x);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="60" refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx" kindref="compound">dream_fx</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1optimizer_1_1ifx" kindref="compound">shyft::core::optimizer::ifx</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a6a21e9d90fe3adf223cea72c20def5fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M&amp;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a6a21e9d90fe3adf223cea72c20def5fb" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="62" refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a3a1008aad99e684fe09ddb25a88bfca9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a3a1008aad99e684fe09ddb25a88bfca9" kindref="member">dream_fx</ref>(M<sp/>&amp;<sp/>m)<sp/>:<sp/>m(m)<sp/>{}</highlight></codeline>
<codeline lineno="63" refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a6a051e53780662d12226aaa3ed83fd2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a6a051e53780662d12226aaa3ed83fd2a" kindref="member">evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a6a21e9d90fe3adf223cea72c20def5fb" kindref="member">m</ref>(x);<sp/></highlight><highlight class="comment">//<sp/>notice<sp/>that<sp/>dream<sp/>find<sp/>maximumvalue,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>negate<sp/>the<sp/>goal<sp/>function,<sp/>effectively<sp/>finding<sp/>the<sp/>minimum<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="76" refid="namespaceshyft_1_1core_1_1model__calibration_1a220dadd8e1f05e89b7a8d866f2af1d05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a220dadd8e1f05e89b7a8d866f2af1d05" kindref="member">min_dream</ref>(M&amp;<sp/>model,<sp/>vector&lt;double&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_n_evaluations)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>all<sp/>parameter<sp/>ranges<sp/>to<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>x_s<sp/>=<sp/>model.to_scaled(x);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx" kindref="compound">dream_fx&lt;M&gt;</ref><sp/>fx_m(model);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1core_1_1optimizer_1_1dream" kindref="compound">shyft::core::optimizer::dream</ref><sp/>dr;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>dr.<ref refid="classshyft_1_1core_1_1optimizer_1_1dream_1a50bc04e18e06cdbdfed4f932e360e832" kindref="member">find_max</ref>(fx_m,<sp/>x_s,<sp/>max_n_evaluations);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>back<sp/>to<sp/>real<sp/>parameter<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>model.from_scaled(x_s);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="89" refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx" kindref="compound">sceua_fx</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1optimizer_1_1ifx" kindref="compound">shyft::core::optimizer::ifx</ref><sp/>{</highlight></codeline>
<codeline lineno="90" refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx_1afb85dcbc6d117fc6f4addb0275ea1841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M&amp;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx_1afb85dcbc6d117fc6f4addb0275ea1841" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="91" refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx_1a0a1cd0ad80df96e980eeaccdc55a2f33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx_1a0a1cd0ad80df96e980eeaccdc55a2f33" kindref="member">sceua_fx</ref>(M<sp/>&amp;<sp/>m)<sp/>:<sp/>m(m)<sp/>{}</highlight></codeline>
<codeline lineno="92" refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx_1a0b4f68863ce2c4de4d2cac1c532b825b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx_1a0b4f68863ce2c4de4d2cac1c532b825b" kindref="member">evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1dream__fx_1a6a21e9d90fe3adf223cea72c20def5fb" kindref="member">m</ref>(x);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="108" refid="namespaceshyft_1_1core_1_1model__calibration_1a382ab7d062b7bfa5337fd166f81c83e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a382ab7d062b7bfa5337fd166f81c83e6" kindref="member">min_sceua</ref>(M&amp;<sp/>model,<sp/>vector&lt;double&gt;&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_eps<sp/>=<sp/>0.0001,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_eps<sp/>=<sp/>0.0001)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>all<sp/>parameter<sp/>ranges<sp/>to<sp/>[0,<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>x_s<sp/>=<sp/>model.to_scaled(x);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>x_min(x_s.size(),<sp/>0.0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>x_max(x_s.size(),<sp/>1.0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>x_epsv(x_s.size(),<sp/>x_eps);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notice<sp/>that<sp/>there<sp/>is<sp/>some<sp/>adapter<sp/>code<sp/>here,<sp/>for<sp/>now,<sp/>just<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>sceua<sp/>as<sp/>close<sp/>to<sp/>origin<sp/>as<sp/>possible(it<sp/>is<sp/>fast&amp;efficient,<sp/>with<sp/>stack-based<sp/>mem.allocs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*xv<sp/>=<sp/><ref refid="optimizer__utils_8h_1a906f73011cf1685b8a9da2f9ee44e540" kindref="member">__autoalloc__</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>x_s.size());<sp/>shyft::core::optimizer::fastcopy(xv,<sp/>x_s.data(),<sp/>x_s.size());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1sceua__fx" kindref="compound">sceua_fx&lt;M&gt;</ref><sp/>fx_m(model);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1core_1_1optimizer_1_1sceua" kindref="compound">shyft::core::optimizer::sceua</ref><sp/>opt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optimize<sp/>with<sp/>no<sp/>specific<sp/>range<sp/>for<sp/>y-exit<sp/>(max-less<sp/>than<sp/>min):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>opt_state<sp/>=<sp/>opt.<ref refid="classshyft_1_1core_1_1optimizer_1_1sceua_1a6a357fe2862dd062b65a01180c450bb9" kindref="member">find_min</ref>(x_s.size(),<sp/>x_min.data(),<sp/>x_max.data(),<sp/>xv,<sp/>y_result,<sp/>fx_m,<sp/>y_eps,<sp/>-1.0,<sp/>-2.0,<sp/>x_epsv.data(),<sp/>max_n_evaluations);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x_s.size();<sp/>++i)<sp/>x_s[i]<sp/>=<sp/>xv[i];</highlight><highlight class="comment">//copy<sp/>from<sp/>raw<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>back<sp/>to<sp/>real<sp/>parameter<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>model.from_scaled(x_s);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(opt_state<sp/>==<sp/><ref refid="namespaceshyft_1_1core_1_1optimizer_1a50d8a7acfa5c722a9b4fa540fb3b58cda81d68d9ca3c686ab5b8281c848e4b895" kindref="member">shyft::core::optimizer::OptimizerState::FinishedFxConvergence</ref><sp/>||<sp/>opt_state<sp/>==<sp/><ref refid="namespaceshyft_1_1core_1_1optimizer_1a50d8a7acfa5c722a9b4fa540fb3b58cdac7c88fac2a9aa0013d4176be2fea4062" kindref="member">shyft::core::optimizer::OptimizerState::FinishedXconvergence</ref>))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;sceua:<sp/>max-iterations<sp/>reached<sp/>before<sp/>convergence&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//FinishedMaxIterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y_result;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform" kindref="compound">ts_transform</ref><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TSS&gt;</highlight></codeline>
<codeline lineno="141" refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform_1a227bf627cd34db1751e68dd60edfa49b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;TS&gt;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform_1a227bf627cd34db1751e68dd60edfa49b" kindref="member">to_average</ref>(<ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>start,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TSS&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1time__axis_1_1fixed__dt" kindref="compound">shyft::timeseries::timeaxis</ref><sp/>time_axis(start,<sp/>dt,<sp/>n);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1average__accessor" kindref="compound">shyft::timeseries::average_accessor&lt; TSS, shyft::timeseries::timeaxis&gt;</ref><sp/>avg(src,<sp/>time_axis);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>make_shared&lt;<sp/>TS&gt;(time_axis,<sp/>0.0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;set_point_interpretation(<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" kindref="member">shyft::timeseries::POINT_AVERAGE_VALUE</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>avg.<ref refid="classshyft_1_1timeseries_1_1average__accessor_1a308367054d24ffef65d6743115007077" kindref="member">size</ref>();<sp/>++i)<sp/>r-&gt;set(i,<sp/>avg.<ref refid="classshyft_1_1timeseries_1_1average__accessor_1a0e2405bd25cc7e169f7d2b5e7f705350" kindref="member">value</ref>(i));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TSS&gt;</highlight></codeline>
<codeline lineno="150" refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform_1ac9a1cf726a689044e6644d23e0351dd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;TS&gt;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1ts__transform_1ac9a1cf726a689044e6644d23e0351dd8" kindref="member">to_average</ref>(<ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>start,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/>shared_ptr&lt;TSS&gt;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_average&lt;TS,<sp/>TSS&gt;(start,<sp/>dt,<sp/>n,<sp/>*src);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="155" refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36e" kindref="member">target_spec_calc_type</ref><sp/>{</highlight></codeline>
<codeline lineno="156" refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36eab41aca78a12a708091116416ba16e6a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36eab41aca78a12a708091116416ba16e6a7" kindref="member">NASH_SUTCLIFFE</ref>,<sp/></highlight><highlight class="comment">//<sp/>obsolete,<sp/>should<sp/>be<sp/>replaced<sp/>by<sp/>using<sp/>KLING_GUPTA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36ea89b599e43debedc2cdf4ad2184bede20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36ea89b599e43debedc2cdf4ad2184bede20" kindref="member">KLING_GUPTA</ref>,<sp/></highlight><highlight class="comment">//<sp/>ref.<sp/>Gupta09,<sp/>Journal<sp/>of<sp/>Hydrology<sp/>377(2009)<sp/>80-91</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756" kindref="member">catchment_property_type</ref><sp/>{</highlight></codeline>
<codeline lineno="162" refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756aa948a33766c00e5ed6144fc0451c303d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756aa948a33766c00e5ed6144fc0451c303d" kindref="member">DISCHARGE</ref>,</highlight></codeline>
<codeline lineno="163" refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756a3b51a4a7d6566b611f89b8e6d6e76412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756a3b51a4a7d6566b611f89b8e6d6e76412" kindref="member">SNOW_COVERED_AREA</ref>,</highlight></codeline>
<codeline lineno="164" refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756a48dacfdcfa0a727aa9f9cb4ff028c7ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756a48dacfdcfa0a727aa9f9cb4ff028c7ed" kindref="member">SNOW_WATER_EQUIVALENT</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PS&gt;</highlight></codeline>
<codeline lineno="177" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref><sp/>{</highlight></codeline>
<codeline lineno="178" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1afb928ed3916defc594fd3e67d219a9f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PS<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1afb928ed3916defc594fd3e67d219a9f1" kindref="member">target_time_series_t</ref>;</highlight></codeline>
<codeline lineno="179" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a47e55935dbf7ce58c9f69df1ec9c8f1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a47e55935dbf7ce58c9f69df1ec9c8f1a" kindref="member">target_specification</ref>()</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>scale_factor(1.0),<sp/>calc_mode(<ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36eab41aca78a12a708091116416ba16e6a7" kindref="member">NASH_SUTCLIFFE</ref>),<sp/>catchment_property(<ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756aa948a33766c00e5ed6144fc0451c303d" kindref="member">DISCHARGE</ref>),<sp/>s_r(1.0),<sp/>s_a(1.0),<sp/>s_b(1.0)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a1ed14da4a2275c9ce10e4964b95252ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a1ed14da4a2275c9ce10e4964b95252ba" kindref="member">target_specification</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;<sp/>c)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ts(c.ts),<sp/>catchment_indexes(c.catchment_indexes),<sp/>scale_factor(c.scale_factor),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_mode(c.calc_mode),<sp/>catchment_property(c.catchment_property),<sp/>s_r(c.s_r),<sp/>s_a(c.s_a),<sp/>s_b(c.s_b),<sp/>uid(c.uid)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a2982265cfced4f137d590398fdec61fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a2982265cfced4f137d590398fdec61fa" kindref="member">target_specification</ref>(<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;&amp;c)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ts(<ref refid="namespacestd" kindref="compound">std</ref>::move(c.ts)),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_indexes(<ref refid="namespacestd" kindref="compound">std</ref>::move(c.catchment_indexes)),</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factor(c.scale_factor),<sp/>calc_mode(c.calc_mode),<sp/>catchment_property(c.catchment_property),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_r(c.s_r),<sp/>s_a(c.s_a),<sp/>s_b(c.s_b),<sp/>uid(c.uid)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aaa33d2ed80c96e9cd6d2a1bf4b5a9b76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aaa33d2ed80c96e9cd6d2a1bf4b5a9b76" kindref="member">operator=</ref>(<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts<sp/>=<sp/>std::move(c.ts);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_indexes<sp/>=<sp/>move(c.catchment_indexes);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factor<sp/>=<sp/>c.scale_factor;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_mode<sp/>=<sp/>c.calc_mode;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_property<sp/>=<sp/>c.catchment_property;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_r<sp/>=<sp/>c.s_r;<sp/>s_a<sp/>=<sp/>c.s_a;<sp/>s_b<sp/>=<sp/>c.s_b;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>c.uid;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1af2d958ccc5620a80c02ab916f7e8c418" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1af2d958ccc5620a80c02ab916f7e8c418" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;c)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ae2d177d50d48331c1dd7d8f908fc9e51" kindref="member">ts</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_indexes<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a51a4f8c548bdbd772c80e90afc7a58ca" kindref="member">catchment_indexes</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factor<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ad1d153a874af9473b2496eba9ce21da1" kindref="member">scale_factor</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_mode<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a35c78b4a2dca83b72b4816171bbbaa2d" kindref="member">calc_mode</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_property<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aba3f49d5c686649c131aaa04dd3bd5dc" kindref="member">catchment_property</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_r<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1adc8d69e382b1d49f01166393e8b824ee" kindref="member">s_r</ref>;<sp/>s_a<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a841599719fd6af67e27e2aba95535e1d" kindref="member">s_a</ref>;<sp/>s_b<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a11eb78fb56ee74e532ac6a519193d95b" kindref="member">s_b</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aa299428fa073bb8b57c95ea4ce23e6af" kindref="member">uid</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1af74f56e1868c962cd240706eb6d38baa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1af74f56e1868c962cd240706eb6d38baa" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>catchment_indexes<sp/>==<sp/>x.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a51a4f8c548bdbd772c80e90afc7a58ca" kindref="member">catchment_indexes</ref><sp/>&amp;&amp;<sp/>catchment_property<sp/>==<sp/>x.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aba3f49d5c686649c131aaa04dd3bd5dc" kindref="member">catchment_property</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aff3ae8cd05c348182f470fce7e071675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aff3ae8cd05c348182f470fce7e071675" kindref="member">target_specification</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_time_series_t&amp;<sp/>ts,<sp/>vector&lt;int&gt;<sp/>cids,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_factor,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36e" kindref="member">target_spec_calc_type</ref><sp/>calc_mode<sp/>=<sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36eab41aca78a12a708091116416ba16e6a7" kindref="member">NASH_SUTCLIFFE</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_r<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_a<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_b<sp/>=<sp/>1.0,<sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756" kindref="member">catchment_property_type</ref><sp/>catchment_property_<sp/>=<sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756aa948a33766c00e5ed6144fc0451c303d" kindref="member">DISCHARGE</ref>,<sp/>std::string<sp/>uid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ts(ts),<sp/>catchment_indexes(cids),<sp/>scale_factor(scale_factor),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_mode(calc_mode),<sp/>catchment_property(catchment_property_),<sp/>s_r(s_r),<sp/>s_a(s_a),<sp/>s_b(s_b),<sp/>uid(uid)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ae2d177d50d48331c1dd7d8f908fc9e51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_time_series_t<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ae2d177d50d48331c1dd7d8f908fc9e51" kindref="member">ts</ref>;<sp/></highlight></codeline>
<codeline lineno="236" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a51a4f8c548bdbd772c80e90afc7a58ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a51a4f8c548bdbd772c80e90afc7a58ca" kindref="member">catchment_indexes</ref>;<sp/></highlight></codeline>
<codeline lineno="237" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ad1d153a874af9473b2496eba9ce21da1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ad1d153a874af9473b2496eba9ce21da1" kindref="member">scale_factor</ref>;<sp/></highlight></codeline>
<codeline lineno="238" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a35c78b4a2dca83b72b4816171bbbaa2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36e" kindref="member">target_spec_calc_type</ref><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a35c78b4a2dca83b72b4816171bbbaa2d" kindref="member">calc_mode</ref>;</highlight></codeline>
<codeline lineno="239" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aba3f49d5c686649c131aaa04dd3bd5dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756" kindref="member">catchment_property_type</ref><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aba3f49d5c686649c131aaa04dd3bd5dc" kindref="member">catchment_property</ref>;</highlight></codeline>
<codeline lineno="240" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1adc8d69e382b1d49f01166393e8b824ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1adc8d69e382b1d49f01166393e8b824ee" kindref="member">s_r</ref>;<sp/></highlight></codeline>
<codeline lineno="241" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a841599719fd6af67e27e2aba95535e1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a841599719fd6af67e27e2aba95535e1d" kindref="member">s_a</ref>;<sp/></highlight></codeline>
<codeline lineno="242" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a11eb78fb56ee74e532ac6a519193d95b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a11eb78fb56ee74e532ac6a519193d95b" kindref="member">s_b</ref>;<sp/></highlight></codeline>
<codeline lineno="243" refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aa299428fa073bb8b57c95ea4ce23e6af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aa299428fa073bb8b57c95ea4ce23e6af" kindref="member">uid</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="249" refid="namespaceshyft_1_1core_1_1model__calibration_1adcd89ab052593045e6ce5c0fb061cfee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1adcd89ab052593045e6ce5c0fb061cfee" kindref="member">enable_if_tx</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enable_if&lt;B,<sp/>T&gt;::type;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>want<sp/>compute_sca_sum<sp/>IF<sp/>the<sp/>response-collector<sp/>do<sp/>have<sp/>snow_sca<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__sca" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__sca" kindref="compound">detect_snow_sca</ref><sp/>:false_type<sp/>{};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>detect_snow_sca,<sp/>default<sp/>it<sp/>to<sp/>false,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>specialize<sp/>it<sp/>for<sp/>T<sp/>that<sp/>have<sp/>snow_sca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__sca_3_01_t_00_01decltype_07_t_1_1snow__sca_00_01void_07_08_08_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__sca" kindref="compound">detect_snow_sca</ref>&lt;T,<sp/>decltype(T::snow_sca,<sp/>void())&gt;<sp/>:true_type<sp/>{};<sp/></highlight><highlight class="comment">//<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="comment">//<sp/>ref<sp/>similar<sp/>pattern<sp/>for<sp/>template<sp/>specific<sp/>generation<sp/>of<sp/>snow_sca<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__swe" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__swe" kindref="compound">detect_snow_swe</ref><sp/>:false_type<sp/>{};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="265" refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__swe_3_01_t_00_01decltype_07_t_1_1snow__swe_00_01void_07_08_08_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1detect__snow__swe" kindref="compound">detect_snow_swe</ref>&lt;T,<sp/>decltype(T::snow_swe,<sp/>void())&gt;<sp/>:true_type<sp/>{};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref><sp/>{</highlight></codeline>
<codeline lineno="275" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a8360a0741b02cae6ca56272419d374fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a8360a0741b02cae6ca56272419d374fa" kindref="member">area</ref>;</highlight></codeline>
<codeline lineno="276" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a2123460a412cbf64db098bb8524ab7d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a2123460a412cbf64db098bb8524ab7d0" kindref="member">ts</ref>;<sp/></highlight></codeline>
<codeline lineno="277" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a99d5468dc5f316fab30ba93362b50934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a99d5468dc5f316fab30ba93362b50934" kindref="member">area_ts</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>area_m2,<sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/>ts)<sp/>:area(area_m2),<sp/>ts(move(ts))<sp/>{}</highlight></codeline>
<codeline lineno="278" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a0d14f135c462a9209a6b0a276e72218a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a0d14f135c462a9209a6b0a276e72218a" kindref="member">area_ts</ref>()<sp/>:area(0.0)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>we<sp/>could<sp/>drop<sp/>this<sp/>and<sp/>rely<sp/>on<sp/>defaults<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a110ffac4331f20ac62dc2eb419cde10e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a110ffac4331f20ac62dc2eb419cde10e" kindref="member">area_ts</ref>(<ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref>&amp;&amp;c)<sp/>:area(c.area),<sp/>ts(move(ts))<sp/>{}</highlight></codeline>
<codeline lineno="280" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a6a62364f1e40fd69b79e08835614bf9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a6a62364f1e40fd69b79e08835614bf9b" kindref="member">area_ts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref>&amp;c)<sp/>:area(c.area),<sp/>ts(c.ts)<sp/>{}</highlight></codeline>
<codeline lineno="281" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1ae3caa21ad4cb0540d1136ce6efaaa474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref>&amp;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1ae3caa21ad4cb0540d1136ce6efaaa474" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref>&amp;c)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;c<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a8360a0741b02cae6ca56272419d374fa" kindref="member">area</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts<sp/>=<sp/>c.<ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a2123460a412cbf64db098bb8524ab7d0" kindref="member">ts</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288" refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a3ab6ee2c47be0095c68cfe1a6882c705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref>&amp;<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts_1a3ab6ee2c47be0095c68cfe1a6882c705" kindref="member">operator=</ref>(<ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref><sp/>&amp;&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(&amp;c<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts<sp/>=<sp/>move(c.ts);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>area<sp/>=<sp/>c.area;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PS&gt;</highlight></codeline>
<codeline lineno="320" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer" kindref="compound">optimizer</ref><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="322" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a83d9d8f6778b39a0da125c5c82d534ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>dlib::matrix&lt;double,<sp/>0,<sp/>1&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a83d9d8f6778b39a0da125c5c82d534ef" kindref="member">column_vector</ref>;<sp/></highlight></codeline>
<codeline lineno="323" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a465f447636d0348323d8310a7c89f499" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PS<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a465f447636d0348323d8310a7c89f499" kindref="member">target_time_series_t</ref>;<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a3f0c86b75080905a00d1713d72ab6a97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification" kindref="compound">target_specification&lt;PS&gt;</ref><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a3f0c86b75080905a00d1713d72ab6a97" kindref="member">target_specification_t</ref>;</highlight></codeline>
<codeline lineno="326" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6793d8d0161d269d05c0f9563d7f6dab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>M<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6793d8d0161d269d05c0f9563d7f6dab" kindref="member">region_model_t</ref>;<sp/></highlight></codeline>
<codeline lineno="327" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aa2b80f7e1be5ddf42a284626ff695201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1hbv__stack_1a5961678f808e4e22299024db4a1f024d" kindref="member">M::state_t</ref><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aa2b80f7e1be5ddf42a284626ff695201" kindref="member">state_t</ref>;</highlight></codeline>
<codeline lineno="328" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aeb3992fa4a88c3036683dae1dd9af4fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1hbv__stack_1a391dd5ccaeea9bdf6270ade16a3ee7f5" kindref="member">M::parameter_t</ref><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aeb3992fa4a88c3036683dae1dd9af4fa" kindref="member">parameter_t</ref>;</highlight></codeline>
<codeline lineno="329" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6032a61ce6a869e7de4f5831aaa5356b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M::cell_t<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6032a61ce6a869e7de4f5831aaa5356b" kindref="member">cell_t</ref>;</highlight></codeline>
<codeline lineno="330" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6846cf441df5d1156b73005cb219f52c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell_t::response_collector_t<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6846cf441df5d1156b73005cb219f52c" kindref="member">response_collector_t</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aafdd315906e5219d9e0a8b8ee8dfbc76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aafdd315906e5219d9e0a8b8ee8dfbc76" kindref="member">parameter_lower_bound</ref>;</highlight></codeline>
<codeline lineno="333" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a2dd3434d467e6f079d7b77b78e61b96d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a2dd3434d467e6f079d7b77b78e61b96d" kindref="member">parameter_upper_bound</ref>;</highlight></codeline>
<codeline lineno="334" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aef726f27748c090027974d4a7083b195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA&amp;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aef726f27748c090027974d4a7083b195" kindref="member">parameter_accessor</ref>;<sp/></highlight></codeline>
<codeline lineno="335" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a47be90108bd371cf748a9c53d42970a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_model_t&amp;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a47be90108bd371cf748a9c53d42970a7" kindref="member">model</ref>;<sp/></highlight></codeline>
<codeline lineno="336" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a952151b56ed526fba4448da8b1961c9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;target_specification_t&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a952151b56ed526fba4448da8b1961c9a" kindref="member">targets</ref>;<sp/></highlight></codeline>
<codeline lineno="337" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a384e447fd9df3dcbfb47f9fc6ccbf295" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a384e447fd9df3dcbfb47f9fc6ccbf295" kindref="member">active_parameter</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(parameter_upper_bound.get(i)<sp/>-<sp/>parameter_lower_bound.get(i))<sp/>&gt;<sp/>activate_limit;<sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>internal<sp/>parameter<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p_expanded;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p_min;<sp/></highlight><highlight class="comment">//<sp/>min==max,<sp/>no-<sp/>optimization..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p_max;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>print_progress_level;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_catchments;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>handle<sp/>expanded/reduced<sp/>parameter<sp/>vector<sp/>based<sp/>on<sp/>min..max<sp/>range<sp/>to<sp/>optimize<sp/>speed<sp/>for<sp/>bobyqa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>activate_limit<sp/>=<sp/>0.000001;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_active_parameter(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(p_max[i]<sp/>-<sp/>p_min[i])<sp/>&gt;<sp/>activate_limit;<sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>reduce_p_vector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>r;<sp/>r.reserve(fp.size());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fp.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_active_parameter(i))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.push_back(fp[i]);</highlight><highlight class="comment">//<sp/>only<sp/>pick<sp/>values<sp/>that<sp/>are<sp/>active<sp/>in<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>expand_p_vector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>rp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>r;<sp/>r.reserve(p_expanded.size());</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p_expanded.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_active_parameter(i))</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.push_back(rp[j++]);</highlight><highlight class="comment">//<sp/>pick<sp/>from<sp/>reduced<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.push_back(p_expanded[i]);<sp/></highlight><highlight class="comment">//<sp/>just<sp/>use<sp/>already<sp/>set<sp/>class<sp/>global<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p_vector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA&amp;p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/>vector&lt;double&gt;<sp/>r;r.reserve(p.size());</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>p.size();++i)r.push_back(p.get(i));</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/>vector_p(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>v)</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/>PA<sp/>p;<sp/>p.set(v);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1ab1bfa9505b131d6f465d3a41f6996819" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1ab1bfa9505b131d6f465d3a41f6996819" kindref="member">optimizer</ref>(region_model_t&amp;<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;target_specification_t&gt;&amp;<sp/>targetsA,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>p_max)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parameter_accessor(model.get_region_parameter()),</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model(model),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targets(targetsA),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_progress_level(0)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_parameter_ranges(p_min,<sp/>p_max);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a127beaee84ddbafc8dc4e7d536f141aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a127beaee84ddbafc8dc4e7d536f141aa" kindref="member">optimizer</ref>(region_model_t&amp;<sp/>model)<sp/>:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_accessor(model.get_region_parameter()),</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model(model),print_progress_level(0)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a4fce112251127c578f95a5b5d6513f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a4fce112251127c578f95a5b5d6513f97" kindref="member">set_target_specification</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;target_specification_t&gt;&amp;<sp/>targetsA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA&amp;<sp/>param_lower_bound,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA&amp;<sp/>param_upper_bound)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targets<sp/>=<sp/>targetsA;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_lower_bound<sp/>=<sp/>param_lower_bound;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_upper_bound<sp/>=<sp/>param_upper_bound;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a21c6266ecc38acb0bdaf9087b98506ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a21c6266ecc38acb0bdaf9087b98506ce" kindref="member">establish_initial_state_from_model</ref>()<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>semantically<sp/>its<sp/>taking<sp/>the<sp/>current<sp/>state<sp/>-&gt;<sp/>model.initial_state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>is<sp/>not<sp/>needed<sp/>any<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.get_states(model.initial_state);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a09a6c7fc24fe060f682939392e424c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a09a6c7fc24fe060f682939392e424c1e" kindref="member">prepare_optimize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>ensure<sp/>vectors<sp/>reflects<sp/>current<sp/>state<sp/>of<sp/>lower..upper<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_min<sp/>=<sp/>p_vector(parameter_lower_bound);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_max<sp/>=<sp/>p_vector(parameter_upper_bound);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>figure<sp/>out<sp/>n_catchments,<sp/>asking<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_catchments<sp/>=<sp/>model.number_of_catchments();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>figure<sp/>out<sp/>the<sp/>catchment<sp/>indexes<sp/>to<sp/>evaluate..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>if<sp/>we<sp/>need<sp/>to<sp/>turn<sp/>on<sp/>snow<sp/>collection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>catchment_indexes;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.set_snow_sca_swe_collection(-1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight><highlight class="comment">//turn<sp/>off<sp/>all<sp/>snow<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;t<sp/>:<sp/>targets)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_indexes.insert(catchment_indexes.end(),<sp/>begin(t.catchment_indexes),<sp/>end(t.catchment_indexes));</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.catchment_property<sp/>!=<sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756aa948a33766c00e5ed6144fc0451c303d" kindref="member">DISCHARGE</ref>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>t.catchment_indexes)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.set_snow_sca_swe_collection(cid,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight><highlight class="comment">//turn<sp/>on<sp/>for<sp/>those<sp/>with<sp/>something<sp/>like<sp/>snow<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort(begin(catchment_indexes),<sp/>end(catchment_indexes));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unique_end<sp/>=<sp/>unique(begin(catchment_indexes),<sp/>end(catchment_indexes));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_indexes.resize(distance(begin(catchment_indexes),<sp/>unique_end));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>catchment_indexes)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.has_catchment_parameter(i))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>calibrate<sp/>on<sp/>local<sp/>parameters.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.set_catchment_calculation_filter(catchment_indexes);<sp/></highlight><highlight class="comment">//Only<sp/>calculate<sp/>the<sp/>catchments<sp/>that<sp/>we<sp/>optimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>detects<sp/>if<sp/>initial<sp/>state<sp/>is<sp/>established,<sp/>if<sp/>not<sp/>it<sp/>automatically<sp/>do<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>current<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto_initial_state_check();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1adc562b9ec817dca734b5a01b427bb619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1adc562b9ec817dca734b5a01b427bb619" kindref="member">auto_initial_state_check</ref>()<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.initial_state.size()<sp/>!=<sp/>model.get_cells()-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(print_progress_level<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;auto-establishing<sp/>initial<sp/>state<sp/>from<sp/>current<sp/>model.cell.state&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>establish_initial_state_from_model();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a973f82e36d67ddb753a2c05dff0ddef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_t<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a973f82e36d67ddb753a2c05dff0ddef4" kindref="member">get_initial_state</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto_initial_state_check();</highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>it&apos;s<sp/>not<sp/>done,<sp/>do<sp/>it<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model.initial_state[idx];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1adfe129bd152e378a6123493839fcc19c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1adfe129bd152e378a6123493839fcc19c" kindref="member">optimize</ref>(vector&lt;double&gt;<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations<sp/>=<sp/>1500,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr_start<sp/>=<sp/>0.1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr_stop<sp/>=<sp/>1.0e-5)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepare_optimize();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>using<sp/>min..max<sp/>the<sp/>parameter<sp/>space,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_expanded<sp/>=<sp/>p;</highlight><highlight class="comment">//put<sp/>all<sp/>parameters<sp/>into<sp/>class<sp/>scope<sp/>so<sp/>that<sp/>we<sp/>can<sp/>reduce/expand<sp/>as<sp/>needed<sp/>during<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp<sp/>=<sp/>reduce_p_vector(p);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a29d1dd6f07e3da2747064b5f2de13eed" kindref="member">min_bobyqa</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rp,<sp/>max_n_evaluations,<sp/>tr_start,<sp/>tr_stop);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expand,put<sp/>inplace<sp/>p<sp/>to<sp/>return<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>expand_p_vector(rp);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a683ed17fa2154d1ef87dcbb457c3e0b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a683ed17fa2154d1ef87dcbb457c3e0b3" kindref="member">optimize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA<sp/>&amp;p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations<sp/>=<sp/>1500,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr_start<sp/>=<sp/>0.1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tr_stop<sp/>=<sp/>1.0e-5)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/>r;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.set(optimize(p_vector(p),<sp/>max_n_evaluations,<sp/>tr_start,<sp/>tr_stop));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a3220c4464a7735f03ad4494b9f956db0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a3220c4464a7735f03ad4494b9f956db0" kindref="member">optimize_dream</ref>(vector&lt;double&gt;<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations<sp/>=<sp/>1500)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepare_optimize();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>using<sp/>min..max<sp/>the<sp/>parameter<sp/>space,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_expanded<sp/>=<sp/>p;</highlight><highlight class="comment">//put<sp/>all<sp/>parameters<sp/>into<sp/>class<sp/>scope<sp/>so<sp/>that<sp/>we<sp/>can<sp/>reduce/expand<sp/>as<sp/>needed<sp/>during<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp<sp/>=<sp/>reduce_p_vector(p);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dream&lt;optimizer&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rp,<sp/>max_n_evaluations);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>expand_p_vector(rp);</highlight><highlight class="comment">//<sp/>expand,put<sp/>inplace<sp/>p<sp/>to<sp/>return<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aa176e5163bfc801c93a258cd298691c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aa176e5163bfc801c93a258cd298691c3" kindref="member">optimize_dream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA<sp/>&amp;p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations<sp/>=<sp/>1500)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/>r;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.set(optimize_dream(p_vector(p),<sp/>max_n_evaluations));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aa9ab8e4f1225013de73d7ab2472ef03d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aa9ab8e4f1225013de73d7ab2472ef03d" kindref="member">optimize_sceua</ref>(vector&lt;double&gt;<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations<sp/>=<sp/>1500,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_eps<sp/>=<sp/>0.0001,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_eps<sp/>=<sp/>1.0e-5)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepare_optimize();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>using<sp/>min..max<sp/>the<sp/>parameter<sp/>space,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_expanded<sp/>=<sp/>p;</highlight><highlight class="comment">//put<sp/>all<sp/>parameters<sp/>into<sp/>class<sp/>scope<sp/>so<sp/>that<sp/>we<sp/>can<sp/>reduce/expand<sp/>as<sp/>needed<sp/>during<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp<sp/>=<sp/>reduce_p_vector(p);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a382ab7d062b7bfa5337fd166f81c83e6" kindref="member">min_sceua</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rp,<sp/>max_n_evaluations,<sp/>x_eps,<sp/>y_eps);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>expand_p_vector(rp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expand,put<sp/>inplace<sp/>p<sp/>to<sp/>return<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a5f40ae12b9673f513fbe3ccc3c679caf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a5f40ae12b9673f513fbe3ccc3c679caf" kindref="member">optimize_sceua</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_n_evaluations<sp/>=<sp/>1500,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_eps<sp/>=<sp/>0.0001,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_eps<sp/>=<sp/>1.0e-5)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PA<sp/>r;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.set(optimize_sceua(p_vector(p),<sp/>max_n_evaluations,<sp/>x_eps,<sp/>y_eps));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1abd875cab3afb4f296ab96879964d8449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1abd875cab3afb4f296ab96879964d8449" kindref="member">reset_states</ref>()<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.revert_to_initial_state();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aace152222deb93cf6b6f8bdf818952a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1aace152222deb93cf6b6f8bdf818952a9" kindref="member">set_parameter_ranges</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>p_min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>p_max)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_lower_bound<sp/>=<sp/>vector_p(p_min);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_upper_bound<sp/>=<sp/>vector_p(p_max);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1acbdadaf09aaabcc10ddd5158f73bd2d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1acbdadaf09aaabcc10ddd5158f73bd2d7" kindref="member">set_verbose_level</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{<sp/>print_progress_level<sp/>=<sp/>level;<sp/>}</highlight></codeline>
<codeline lineno="567" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1ae9ab44d07a6f55984e218483456bd757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1ae9ab44d07a6f55984e218483456bd757" kindref="member">calculate_goal_function</ref>(std::vector&lt;double&gt;<sp/>full_vector_of_parameters)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_expanded<sp/>=<sp/>full_vector_of_parameters;</highlight><highlight class="comment">//<sp/>ensure<sp/>all<sp/>parameters<sp/>are<sp/><sp/>according<sp/>to<sp/>full_vector..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1pt__hs__k_1a8f36026f35fc84f58d593fdd19cbab8d" kindref="member">run</ref>(reduce_p_vector(full_vector_of_parameters));</highlight><highlight class="comment">//<sp/>then<sp/>run<sp/>with<sp/>parameters<sp/>as<sp/>if<sp/>from<sp/>optimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a43bb8a6b3dae6b513c68ea78176e599a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a43bb8a6b3dae6b513c68ea78176e599a" kindref="member">calculate_goal_function</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PA&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calculate_goal_function(p_vector(p));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a27b2fc3d4a8b6513eeac7ab68a73ce2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">calibration_test;</highlight><highlight class="comment">//<sp/>to<sp/>enable<sp/>testing<sp/>of<sp/>individual<sp/>methods</highlight></codeline>
<codeline lineno="579" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1af72de88358821a048432b9d099f0b397" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>column_vector&amp;<sp/>p_s)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1pt__hs__k_1a8f36026f35fc84f58d593fdd19cbab8d" kindref="member">run</ref>(from_scaled(p_s));<sp/>}</highlight></codeline>
<codeline lineno="580" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a619914f52ab547f433676cba5cd90135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;p_s)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1pt__hs__k_1a8f36026f35fc84f58d593fdd19cbab8d" kindref="member">run</ref>(from_scaled(p_s));<sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a1e761e88720beecc3215cc19145a819e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a1e761e88720beecc3215cc19145a819e" kindref="member">to_scaled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>rp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_min.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Parameter<sp/>ranges<sp/>are<sp/>not<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p_s;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_min<sp/>=<sp/>reduce_p_vector(p_min);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_max<sp/>=<sp/>reduce_p_vector(p_max);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_params<sp/>=<sp/>rp.size();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_s.reserve(n_params);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_params;<sp/>++i)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_s.emplace_back((rp[i]<sp/>-<sp/>rp_min[i])<sp/>/<sp/>(rp_max[i]<sp/>-<sp/>rp_min[i]));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_s;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6a3e7fa6ba021b21f6a1abbb1a738c96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a6a3e7fa6ba021b21f6a1abbb1a738c96" kindref="member">from_scaled</ref>(column_vector<sp/>p_s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_min.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Parameter<sp/>ranges<sp/>are<sp/>not<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_min<sp/>=<sp/>reduce_p_vector(p_min);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_max<sp/>=<sp/>reduce_p_vector(p_max);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.reserve(p_s.nr());</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p_s.nr();<sp/>++i)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.emplace_back((rp_max[i]<sp/>-<sp/>rp_min[i])*p_s(i)<sp/>+<sp/>rp_min[i]);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606" refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a5452f8182035974ac2a772f57d5d4792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="classshyft_1_1core_1_1model__calibration_1_1optimizer_1a5452f8182035974ac2a772f57d5d4792" kindref="member">from_scaled</ref>(vector&lt;double&gt;<sp/>p_s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_min.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Parameter<sp/>ranges<sp/>are<sp/>not<sp/>set&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>p;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_min<sp/>=<sp/>reduce_p_vector(p_min);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rp_max<sp/>=<sp/>reduce_p_vector(p_max);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.reserve(p_s.size());</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p_s.size();<sp/>++i)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.emplace_back((rp_max[i]<sp/>-<sp/>rp_min[i])*p_s[i]<sp/>+<sp/>rp_min[i]);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/>compute_discharge_sum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_specification_t&amp;<sp/>t,<sp/>vector&lt;pts_t&gt;&amp;<sp/>catchment_d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_d.empty())</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.catchment_discharges(catchment_d);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/>discharge_sum(model.time_axis,<sp/>0.0,<sp/><ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" kindref="member">shyft::timeseries::POINT_AVERAGE_VALUE</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a51a4f8c548bdbd772c80e90afc7a58ca" kindref="member">catchment_indexes</ref>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discharge_sum.<ref refid="structshyft_1_1timeseries_1_1point__ts_1a7ff6a713fa1a9c426404337d938b4aca" kindref="member">add</ref>(catchment_d[model.cix_from_cid(i)]);</highlight><highlight class="comment">//<sp/>important!<sp/>the<sp/>catchment_d(ischarge)<sp/>is<sp/>in<sp/>internal<sp/>index<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>discharge_sum;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>property_ts_function&gt;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;area_ts&gt;<sp/>extract_area_ts_property(property_ts_function<sp/>&amp;&amp;<sp/>tsf)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;area_ts&gt;<sp/>r(n_catchments,<sp/><ref refid="structshyft_1_1core_1_1model__calibration_1_1area__ts" kindref="compound">area_ts</ref>(0.0,<sp/><ref refid="namespaceshyft_1_1core_1a78d0ca8964be5db44a5022740019e7fc" kindref="member">pts_t</ref>(model.time_axis,<sp/>0.0,<sp/><ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" kindref="member">shyft::timeseries::POINT_AVERAGE_VALUE</ref>)));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>c<sp/>:<sp/>*model.get_cells())<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.is_calculated_by_catchment_ix(c.geo.catchment_ix))<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[c.geo.catchment_ix].ts.add_scale(tsf(c),<sp/>c.geo.area());</highlight><highlight class="comment">//the<sp/>only<sp/>ref.<sp/>to<sp/>snow_sca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[c.geo.catchment_ix].area<sp/>+=<sp/>c.geo.area();<sp/></highlight><highlight class="comment">//using<sp/>entire<sp/>cell<sp/>geo<sp/>area<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i<sp/>&lt;<sp/>n_catchments;++i)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.is_calculated_by_catchment_ix(i))</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[i].ts.scale_by(1<sp/>/<sp/>r[i].area);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/>compute_weighted_area_ts_average(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_specification_t&amp;<sp/>t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;area_ts&gt;&amp;<sp/>ats)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/>ts_sum(model.time_axis,<sp/>0.0,<sp/><ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa7a710c91f7e701c216acf4a4610f1815" kindref="member">shyft::timeseries::POINT_AVERAGE_VALUE</ref>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a51a4f8c548bdbd772c80e90afc7a58ca" kindref="member">catchment_indexes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>model.cix_from_cid(cid);<sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>get<sp/>the<sp/>catchment<sp/>zero-based<sp/>index<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts_sum.<ref refid="structshyft_1_1timeseries_1_1point__ts_1a274ca3cf435c1bd52f094220344abdbb" kindref="member">add_scale</ref>(ats[i].ts,<sp/>ats[i].area);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_sum<sp/>+=<sp/>ats[i].area;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts_sum.<ref refid="structshyft_1_1timeseries_1_1point__ts_1a3c389ed08d8722888c232d063294562f" kindref="member">scale_by</ref>(1<sp/>/<sp/>a_sum);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts_sum;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rc_t<sp/>=<sp/>response_collector_t&gt;<sp/></highlight><highlight class="comment">//<sp/>finally,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1adcd89ab052593045e6ce5c0fb061cfee" kindref="member">enable_if_tx&lt;detect_snow_sca&lt;rc_t&gt;::value</ref>,<sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref>&gt;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>enable_if_t<sp/><sp/>detect_snow_sca<sp/>to<sp/>enable<sp/>this<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_sca_sum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_specification_t&amp;<sp/>t,<sp/>vector&lt;area_ts&gt;&amp;<sp/>catchment_sca)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_sca.empty())</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_sca<sp/>=<sp/>extract_area_ts_property([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell_t&amp;c)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.rc.snow_sca;});</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute_weighted_area_ts_average(t,<sp/>catchment_sca);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rc_t<sp/>=<sp/>response_collector_t&gt;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1adcd89ab052593045e6ce5c0fb061cfee" kindref="member">enable_if_tx&lt;!detect_snow_sca&lt;rc_t&gt;::value</ref>,<sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref>&gt;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_sca_sum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_specification_t&amp;<sp/>t,<sp/>vector&lt;area_ts&gt;&amp;<sp/>catchment_d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>support<sp/>dynamic<sp/>typing<sp/>and<sp/>python:<sp/>If<sp/>a<sp/>cell.rc<sp/>do<sp/>not<sp/>have<sp/>snow_sca,<sp/>but<sp/>we<sp/>pass<sp/>in<sp/>a<sp/>criteria/target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>that<sp/>do<sp/>specify<sp/>snow_sca,<sp/>we<sp/>throw<sp/>a<sp/>runtime<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>verify<sp/>this<sp/>in<sp/>the<sp/>constructor<sp/>and<sp/>throw<sp/>as<sp/>early<sp/>as<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;resource<sp/>collector<sp/>doesn&apos;t<sp/>have<sp/>snow_sca&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rc_t<sp/>=<sp/>response_collector_t&gt;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1adcd89ab052593045e6ce5c0fb061cfee" kindref="member">enable_if_tx&lt;detect_snow_swe&lt;rc_t&gt;::value</ref>,<sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref>&gt;<sp/>compute_swe_sum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_specification_t&amp;<sp/>t,<sp/>vector&lt;area_ts&gt;&amp;<sp/>catchment_swe)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_swe.empty())</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catchment_swe<sp/>=<sp/>extract_area_ts_property([](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell_t&amp;c)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.rc.snow_swe;});</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compute_weighted_area_ts_average(t,<sp/>catchment_swe);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>rc_t<sp/>=<sp/>response_collector_t&gt;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1adcd89ab052593045e6ce5c0fb061cfee" kindref="member">enable_if_tx&lt;!detect_snow_swe&lt;rc_t&gt;::value</ref>,<sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref>&gt;<sp/>compute_swe_sum(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>target_specification_t&amp;<sp/>t,<sp/>vector&lt;area_ts&gt;&amp;<sp/>catchment_d)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;resource<sp/>collector<sp/>doesn&apos;t<sp/>have<sp/>snow_swe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1pt__hs__k_1a8f36026f35fc84f58d593fdd19cbab8d" kindref="member">run</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>rp)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>expand_p_vector(rp);</highlight><highlight class="comment">//<sp/>expand<sp/>to<sp/>full<sp/>vector,<sp/>then:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameter_accessor.set(p);<sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>global<sp/>parameters,<sp/>all<sp/>cells<sp/>share<sp/>a<sp/>common<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_states();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.run_cells();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>goal_function_value<sp/>=<sp/>0.0;</highlight><highlight class="comment">//<sp/>overall<sp/>goal-function,<sp/>intially<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_factor_sum<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>each<sp/>target-spec<sp/>have<sp/>a<sp/>weight,<sp/>-use<sp/>this<sp/>to<sp/>sum<sp/>up<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;pts_t&gt;<sp/>catchment_d;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;area_ts&gt;<sp/>catchment_sca,<sp/>catchment_swe;</highlight><highlight class="comment">//<sp/>&quot;catchment&quot;<sp/>level<sp/>simulated<sp/>discharge,sca,swe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>t<sp/>:<sp/>targets)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1direct__accessor" kindref="compound">shyft::timeseries::direct_accessor&lt;pts_t, timeaxis_t&gt;</ref><sp/>target_accessor(t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ae2d177d50d48331c1dd7d8f908fc9e51" kindref="member">ts</ref>,<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ae2d177d50d48331c1dd7d8f908fc9e51" kindref="member">ts</ref>.ta);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">pts_t</ref><sp/>property_sum;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aba3f49d5c686649c131aaa04dd3bd5dc" kindref="member">catchment_property</ref>)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756aa948a33766c00e5ed6144fc0451c303d" kindref="member">DISCHARGE</ref>:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property_sum<sp/>=<sp/>compute_discharge_sum(t,<sp/>catchment_d);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756a3b51a4a7d6566b611f89b8e6d6e76412" kindref="member">SNOW_COVERED_AREA</ref>:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property_sum<sp/>=<sp/>compute_sca_sum(t,<sp/>catchment_sca);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a5668311af81a0424b26f96379c9ea756a48dacfdcfa0a727aa9f9cb4ff028c7ed" kindref="member">SNOW_WATER_EQUIVALENT</ref>:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property_sum<sp/>=<sp/>compute_swe_sum(t,<sp/>catchment_swe);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1timeseries_1_1average__accessor" kindref="compound">shyft::timeseries::average_accessor&lt;pts_t, timeaxis_t&gt;</ref><sp/>property_sum_accessor(property_sum,<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ae2d177d50d48331c1dd7d8f908fc9e51" kindref="member">ts</ref>.ta);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>partial_goal_function_value;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a35c78b4a2dca83b72b4816171bbbaa2d" kindref="member">calc_mode</ref><sp/>==<sp/><ref refid="namespaceshyft_1_1core_1_1model__calibration_1a1d095e2da6d4d8f6e04f7d731a7ba36eab41aca78a12a708091116416ba16e6a7" kindref="member">target_spec_calc_type::NASH_SUTCLIFFE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial_goal_function_value<sp/>=<sp/><ref refid="namespaceshyft_1_1timeseries_1ac3ecf5b3080c2f416bb7737978cfdbcc" kindref="member">nash_sutcliffe_goal_function</ref>(target_accessor,<sp/>property_sum_accessor);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ref.<sp/>KLING-GUPTA<sp/>Journal<sp/>of<sp/>Hydrology<sp/>377<sp/>(2009)<sp/>80–91,<sp/>page<sp/>83,<sp/>formula<sp/>(10):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a=alpha,<sp/>b=betha,<sp/>q<sp/>=sigma,<sp/>u=my,<sp/>s=simulated,<sp/>o=observed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial_goal_function_value<sp/></highlight><highlight class="comment">/*<sp/>EDs<sp/>*/</highlight><highlight class="normal"><sp/>=<sp/>kling_gupta_goal_function&lt;dlib::running_scalar_covariance&lt;double&gt;&gt;(target_accessor,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property_sum_accessor,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1adc8d69e382b1d49f01166393e8b824ee" kindref="member">s_r</ref>,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a841599719fd6af67e27e2aba95535e1d" kindref="member">s_a</ref>,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1a11eb78fb56ee74e532ac6a519193d95b" kindref="member">s_b</ref>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isfinite(partial_goal_function_value))<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factor_sum<sp/>+=<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ad1d153a874af9473b2496eba9ce21da1" kindref="member">scale_factor</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_function_value<sp/>+=<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1ad1d153a874af9473b2496eba9ce21da1" kindref="member">scale_factor</ref>*partial_goal_function_value;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(print_progress_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;warning:<sp/>goal-function<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>t.<ref refid="structshyft_1_1core_1_1model__calibration_1_1target__specification_1aba3f49d5c686649c131aaa04dd3bd5dc" kindref="member">catchment_property</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>evaluated<sp/>as<sp/>nan&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goal_function_value<sp/>/=<sp/>scale_factor_sum;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(print_progress_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ParameterVector(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parameter_accessor.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>parameter_accessor.get(i);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>parameter_accessor.size()<sp/>-<sp/>1)cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>goal_function_value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(NS<sp/>or<sp/>KG)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>goal_function_value;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>model_calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>shyft</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sih/projects/shyft/core/model_calibration.h"/>
  </compounddef>
</doxygen>
