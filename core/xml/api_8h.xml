<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="api_8h" kind="file">
    <compoundname>api.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">math.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">thread</includes>
    <includes local="no">future</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">random</includes>
    <includes refid="utctime__utilities_8h" local="yes">core/utctime_utilities.h</includes>
    <includes refid="time__axis_8h" local="yes">core/time_axis.h</includes>
    <includes refid="geo__point_8h" local="yes">core/geo_point.h</includes>
    <includes refid="geo__cell__data_8h" local="yes">core/geo_cell_data.h</includes>
    <includes refid="core_2timeseries_8h" local="yes">core/timeseries.h</includes>
    <includes refid="region__model_8h" local="yes">core/region_model.h</includes>
    <includes refid="model__calibration_8h" local="yes">core/model_calibration.h</includes>
    <includes refid="bayesian__kriging_8h" local="yes">core/bayesian_kriging.h</includes>
    <includes refid="inverse__distance_8h" local="yes">core/inverse_distance.h</includes>
    <includes refid="pt__gs__k__cell__model_8h" local="yes">core/pt_gs_k_cell_model.h</includes>
    <includes refid="pt__hs__k__cell__model_8h" local="yes">core/pt_hs_k_cell_model.h</includes>
    <includes refid="pt__ss__k__cell__model_8h" local="yes">core/pt_ss_k_cell_model.h</includes>
    <includes refid="hbv__stack__cell__model_8h" local="yes">core/hbv_stack_cell_model.h</includes>
    <includes refid="api_2timeseries_8h" local="yes">timeseries.h</includes>
    <includedby refid="api_8cpp" local="yes">/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.cpp</includedby>
    <incdepgraph>
      <node id="1467">
        <label>core/geo_point.h</label>
        <link refid="geo__point_8h"/>
      </node>
      <node id="1464">
        <label>core/time_axis.h</label>
        <link refid="time__axis_8h"/>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1503">
        <label>iomanip</label>
      </node>
      <node id="1478">
        <label>functional</label>
      </node>
      <node id="1471">
        <label>limits</label>
      </node>
      <node id="1505">
        <label>boost/math/tools/roots.hpp</label>
      </node>
      <node id="1494">
        <label>cell_model.h</label>
        <link refid="cell__model_8h"/>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1487">
        <label>precipitation_correction.h</label>
        <link refid="precipitation__correction_8h"/>
      </node>
      <node id="1504">
        <label>boost/math/distributions/gamma.hpp</label>
      </node>
      <node id="1475">
        <label>bayesian_kriging.h</label>
        <link refid="bayesian__kriging_8h"/>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
      </node>
      <node id="1462">
        <label>core/utctime_utilities.h</label>
        <link refid="utctime__utilities_8h"/>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
      </node>
      <node id="1501">
        <label>pt_ss_k.h</label>
        <link refid="core_2pt__ss__k_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1457">
        <label>cmath</label>
      </node>
      <node id="1460">
        <label>stdexcept</label>
      </node>
      <node id="1510">
        <label>hbv_soil.h</label>
        <link refid="hbv__soil_8h"/>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1498">
        <label>core/pt_gs_k_cell_model.h</label>
        <link refid="pt__gs__k__cell__model_8h"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
      </node>
      <node id="1492">
        <label>dlib/optimization.h</label>
      </node>
      <node id="1452">
        <label>string</label>
      </node>
      <node id="1470">
        <label>compiler_compatiblity.h</label>
        <link refid="compiler__compatiblity_8h"/>
      </node>
      <node id="1454">
        <label>map</label>
      </node>
      <node id="1476">
        <label>armadillo</label>
      </node>
      <node id="1465">
        <label>exception</label>
      </node>
      <node id="1506">
        <label>boost/math/tools/minima.hpp</label>
      </node>
      <node id="1516">
        <label>ostream</label>
      </node>
      <node id="1468">
        <label>core/geo_cell_data.h</label>
        <link refid="geo__cell__data_8h"/>
        <childnode refid="1467" relation="include">
        </childnode>
      </node>
      <node id="1496">
        <label>optimizer_utils.h</label>
        <link refid="optimizer__utils_8h"/>
      </node>
      <node id="1495">
        <label>dream_optimizer.h</label>
        <link refid="dream__optimizer_8h"/>
        <childnode refid="1496" relation="include">
        </childnode>
      </node>
      <node id="1469">
        <label>core/timeseries.h</label>
        <link refid="core_2timeseries_8h"/>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
      </node>
      <node id="1491">
        <label>core/model_calibration.h</label>
        <link refid="model__calibration_8h"/>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
      </node>
      <node id="1461">
        <label>random</label>
      </node>
      <node id="1484">
        <label>priestley_taylor.h</label>
        <link refid="priestley__taylor_8h"/>
      </node>
      <node id="1493">
        <label>dlib/statistics.h</label>
      </node>
      <node id="1518">
        <label>boost/range.hpp</label>
      </node>
      <node id="1485">
        <label>pt_gs_k.h</label>
        <link refid="core_2pt__gs__k_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1459">
        <label>future</label>
      </node>
      <node id="1480">
        <label>boost/math_fwd.hpp</label>
      </node>
      <node id="1453">
        <label>vector</label>
      </node>
      <node id="1490">
        <label>sstream</label>
      </node>
      <node id="1479">
        <label>kirchner.h</label>
        <link refid="kirchner_8h"/>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
      </node>
      <node id="1451">
        <label>/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.h</label>
        <link refid="api.h"/>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
      </node>
      <node id="1507">
        <label>core/hbv_stack_cell_model.h</label>
        <link refid="hbv__stack__cell__model_8h"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
      </node>
      <node id="1482">
        <label>gamma_snow.h</label>
        <link refid="gamma__snow_8h"/>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1481">
        <label>boost/numeric/odeint.hpp</label>
      </node>
      <node id="1477">
        <label>inverse_distance.h</label>
        <link refid="inverse__distance_8h"/>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
      </node>
      <node id="1499">
        <label>core/pt_hs_k_cell_model.h</label>
        <link refid="pt__hs__k__cell__model_8h"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
      </node>
      <node id="1463">
        <label>time.h</label>
      </node>
      <node id="1456">
        <label>math.h</label>
      </node>
      <node id="1512">
        <label>timeseries.h</label>
        <link refid="api_2timeseries_8h"/>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
      </node>
      <node id="1517">
        <label>cerrno</label>
      </node>
      <node id="1511">
        <label>hbv_tank.h</label>
        <link refid="hbv__tank_8h"/>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1472">
        <label>iostream</label>
      </node>
      <node id="1474">
        <label>core/region_model.h</label>
        <link refid="region__model_8h"/>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
      </node>
      <node id="1488">
        <label>pt_hs_k.h</label>
        <link refid="core_2pt__hs__k_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1514">
        <label>cstddef</label>
      </node>
      <node id="1508">
        <label>hbv_stack.h</label>
        <link refid="core_2hbv__stack_8h"/>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
      </node>
      <node id="1509">
        <label>hbv_actual_evapotranspiration.h</label>
        <link refid="hbv__actual__evapotranspiration_8h"/>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1489">
        <label>hbv_snow.h</label>
        <link refid="hbv__snow_8h"/>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1483">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="1458">
        <label>thread</label>
      </node>
      <node id="1500">
        <label>core/pt_ss_k_cell_model.h</label>
        <link refid="pt__ss__k__cell__model_8h"/>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
      </node>
      <node id="1473">
        <label>type_traits</label>
      </node>
      <node id="1513">
        <label>core/core_pch.h</label>
        <link refid="core__pch_8h"/>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
      </node>
      <node id="1466">
        <label>algorithm</label>
      </node>
      <node id="1497">
        <label>sceua_optimizer.h</label>
        <link refid="sceua__optimizer_8h"/>
        <childnode refid="1496" relation="include">
        </childnode>
      </node>
      <node id="1515">
        <label>cstring</label>
      </node>
      <node id="1486">
        <label>actual_evapotranspiration.h</label>
        <link refid="actual__evapotranspiration_8h"/>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
      <node id="1502">
        <label>skaugen.h</label>
        <link refid="skaugen_8h"/>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
      </node>
      <node id="1455">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1519">
        <label>/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.h</label>
        <link refid="api.h"/>
        <childnode refid="1520" relation="include">
        </childnode>
      </node>
      <node id="1520">
        <label>/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.cpp</label>
        <link refid="api_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structshyft_1_1api_1_1_ts_factory" prot="public">shyft::api::TsFactory</innerclass>
    <innerclass refid="classshyft_1_1api_1_1_geo_point_source" prot="public">shyft::api::GeoPointSource</innerclass>
    <innerclass refid="structshyft_1_1api_1_1_temperature_source" prot="public">shyft::api::TemperatureSource</innerclass>
    <innerclass refid="structshyft_1_1api_1_1_precipitation_source" prot="public">shyft::api::PrecipitationSource</innerclass>
    <innerclass refid="structshyft_1_1api_1_1_wind_speed_source" prot="public">shyft::api::WindSpeedSource</innerclass>
    <innerclass refid="structshyft_1_1api_1_1_rel_hum_source" prot="public">shyft::api::RelHumSource</innerclass>
    <innerclass refid="structshyft_1_1api_1_1_radiation_source" prot="public">shyft::api::RadiationSource</innerclass>
    <innerclass refid="structshyft_1_1api_1_1a__region__environment" prot="public">shyft::api::a_region_environment</innerclass>
    <innerclass refid="structshyft_1_1api_1_1basic__cell__statistics" prot="public">shyft::api::basic_cell_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1kirchner__cell__state__statistics" prot="public">shyft::api::kirchner_cell_state_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics" prot="public">shyft::api::hbv_soil_cell_state_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics" prot="public">shyft::api::hbv_tank_cell_state_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics" prot="public">shyft::api::gamma_snow_cell_state_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics" prot="public">shyft::api::gamma_snow_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1skaugen__cell__state__statistics" prot="public">shyft::api::skaugen_cell_state_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1skaugen__cell__response__statistics" prot="public">shyft::api::skaugen_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics" prot="public">shyft::api::hbv_snow_cell_state_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics" prot="public">shyft::api::hbv_snow_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics" prot="public">shyft::api::priestley_taylor_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics" prot="public">shyft::api::hbv_soil_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics" prot="public">shyft::api::actual_evapotranspiration_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics" prot="public">shyft::api::hbv_actual_evapotranspiration_cell_response_statistics</innerclass>
    <innerclass refid="structshyft_1_1api_1_1geo__cell__data__io" prot="public">shyft::api::geo_cell_data_io</innerclass>
    <innernamespace refid="namespaceshyft">shyft</innernamespace>
    <innernamespace refid="namespaceshyft_1_1api">shyft::api</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="api_8h_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.h" line="6" column="14" bodyfile="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>contains mostly typedefs and some few helper classes to provide a python/swig friendly header file to the api.python project.</para><para><simplesect kind="note"><para>Since we try to follow PEP-8 on the python side, which have some minor conflicts with modern C++ standards. We solve this in this file or in the swig/api.i file using rename, typedefs, or other clever tricks where needed. </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="api_8h_1a525335710b53cb064ca56b936120431e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;future&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utctime__utilities_8h" kindref="compound">core/utctime_utilities.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="time__axis_8h" kindref="compound">core/time_axis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="geo__point_8h" kindref="compound">core/geo_point.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="geo__cell__data_8h" kindref="compound">core/geo_cell_data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2timeseries_8h" kindref="compound">core/timeseries.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="region__model_8h" kindref="compound">core/region_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model__calibration_8h" kindref="compound">core/model_calibration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bayesian__kriging_8h" kindref="compound">core/bayesian_kriging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inverse__distance_8h" kindref="compound">core/inverse_distance.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pt__gs__k__cell__model_8h" kindref="compound">core/pt_gs_k_cell_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pt__hs__k__cell__model_8h" kindref="compound">core/pt_hs_k_cell_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pt__ss__k__cell__model_8h" kindref="compound">core/pt_ss_k_cell_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hbv__stack__cell__model_8h" kindref="compound">core/hbv_stack_cell_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2timeseries_8h" kindref="compound">timeseries.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">shyft<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">shyft::core;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="46" refid="namespaceshyft_1_1api" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">api<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structshyft_1_1api_1_1_ts_factory" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1_ts_factory" kindref="compound">TsFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></highlight></codeline>
<codeline lineno="54" refid="structshyft_1_1api_1_1_ts_factory_1a8b42d38297a860a3900b7680a175c49e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_ts_factory_1a8b42d38297a860a3900b7680a175c49e" kindref="member">create_point_ts</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="namespaceshyft_1_1core_1abbf72b8ba32c19e92f5263070c1e9d13" kindref="member">utctime</ref><sp/>tStart,<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref><sp/>dt,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>values,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>interpretation=<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa2ba877b0fea2668327cdcdb24c59a34b" kindref="member">POINT_INSTANT_VALUE</ref>){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(<sp/><ref refid="structshyft_1_1time__axis_1_1fixed__dt" kindref="compound">time_axis::fixed_dt</ref>(tStart,dt,<sp/>n),<sp/>values,<sp/>interpretation);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref></highlight></codeline>
<codeline lineno="62" refid="structshyft_1_1api_1_1_ts_factory_1a21a4f1415fa61eab40a2c466ce091e51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_ts_factory_1a21a4f1415fa61eab40a2c466ce091e51" kindref="member">create_time_point_ts</ref>(<ref refid="structshyft_1_1core_1_1utcperiod" kindref="compound">utcperiod</ref><sp/>period,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;utctime&gt;&amp;<sp/>times,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>values,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0ea" kindref="member">point_interpretation_policy</ref><sp/>interpretation=<ref refid="namespaceshyft_1_1timeseries_1a7e2ee9dcee400bdc9fa6a9c6c828d0eaa2ba877b0fea2668327cdcdb24c59a34b" kindref="member">POINT_INSTANT_VALUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(times.size()<sp/>==<sp/>values.size()<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(<sp/><ref refid="structshyft_1_1time__axis_1_1point__dt" kindref="compound">time_axis::point_dt</ref>(times),<sp/>values,<sp/>interpretation);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(times.size()<sp/>==<sp/>values.size())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tx(times);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx.push_back(period.<ref refid="structshyft_1_1core_1_1utcperiod_1a6633ffd83e46f9ef26098ffd4a2d61b7" kindref="member">end</ref><sp/>&gt;<sp/>times.back()?period.<ref refid="structshyft_1_1core_1_1utcperiod_1a6633ffd83e46f9ef26098ffd4a2d61b7" kindref="member">end</ref>:times.back()<sp/>+<sp/><ref refid="namespaceshyft_1_1core_1a560b7b3b8bf6190f749284f5fadd7271" kindref="member">utctimespan</ref>(1));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(<sp/><ref refid="structshyft_1_1time__axis_1_1point__dt" kindref="compound">time_axis::point_dt</ref>(tx),<sp/>values,<sp/>interpretation);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;create_time_point_ts<sp/>times<sp/>and<sp/>values<sp/>arrays<sp/>must<sp/>have<sp/>corresponding<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classshyft_1_1api_1_1_geo_point_source" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84" refid="classshyft_1_1api_1_1_geo_point_source_1a7b99424e6cd1257452fe97b67974de18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a7b99424e6cd1257452fe97b67974de18" kindref="member">GeoPointSource</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/>midpoint=<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(),<sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>ts=<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>())</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mid_point_(midpoint),<sp/>ts(ts)<sp/>{}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classshyft_1_1api_1_1_geo_point_source_1a8fdd86da565fa7f9a77518be97062920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a8fdd86da565fa7f9a77518be97062920" kindref="member">ts_t</ref>;</highlight></codeline>
<codeline lineno="88" refid="classshyft_1_1api_1_1_geo_point_source_1a57566f194259ecf85bdd7534b23c5ddf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a57566f194259ecf85bdd7534b23c5ddf" kindref="member">geo_point_t</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classshyft_1_1api_1_1_geo_point_source_1a2d0f3e31ea4f1bb8290b04db3c54887d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a2d0f3e31ea4f1bb8290b04db3c54887d" kindref="member">mid_point_</ref>;</highlight></codeline>
<codeline lineno="91" refid="classshyft_1_1api_1_1_geo_point_source_1a2acb6776ea986113e2a44b6f80f80248" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a2acb6776ea986113e2a44b6f80f80248" kindref="member">ts</ref>;</highlight></codeline>
<codeline lineno="92" refid="classshyft_1_1api_1_1_geo_point_source_1a32dd677daa3a6e8f3fad7857bb0e12fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a32dd677daa3a6e8f3fad7857bb0e12fc" kindref="member">uid</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boost<sp/>python<sp/>fixes<sp/>for<sp/>attributes<sp/>and<sp/>shared_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classshyft_1_1api_1_1_geo_point_source_1ad570a067361e065219c30b38b011701f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1ad570a067361e065219c30b38b011701f" kindref="member">get_ts</ref>()<sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts;}</highlight></codeline>
<codeline lineno="95" refid="classshyft_1_1api_1_1_geo_point_source_1a785d8fbaef811ec7b3acb03c339b985e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a785d8fbaef811ec7b3acb03c339b985e" kindref="member">set_ts</ref>(<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>x)<sp/>{ts=x;}</highlight></codeline>
<codeline lineno="96" refid="classshyft_1_1api_1_1_geo_point_source_1a1745f400d8758304adaf73570f5a1d68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a1745f400d8758304adaf73570f5a1d68" kindref="member">is_equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid_point_==x.<ref refid="classshyft_1_1api_1_1_geo_point_source_1a2d0f3e31ea4f1bb8290b04db3c54887d" kindref="member">mid_point_</ref><sp/>&amp;&amp;<sp/>ts<sp/>==<sp/>x.<ref refid="classshyft_1_1api_1_1_geo_point_source_1a2acb6776ea986113e2a44b6f80f80248" kindref="member">ts</ref>;}</highlight></codeline>
<codeline lineno="97" refid="classshyft_1_1api_1_1_geo_point_source_1a2fdf33a7ebc8d21d7d8817e940b3eb64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/><ref refid="classshyft_1_1api_1_1_geo_point_source_1a2fdf33a7ebc8d21d7d8817e940b3eb64" kindref="member">mid_point</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid_point_;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structshyft_1_1api_1_1_temperature_source" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1_temperature_source" kindref="compound">TemperatureSource</ref><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref><sp/>{</highlight></codeline>
<codeline lineno="101" refid="structshyft_1_1api_1_1_temperature_source_1aed51355638b99c08f3abd6761fa21eff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_temperature_source_1aed51355638b99c08f3abd6761fa21eff" kindref="member">TemperatureSource</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/>p=<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(),<sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>ts=<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref>(p,<sp/>ts)<sp/>{}</highlight></codeline>
<codeline lineno="103" refid="structshyft_1_1api_1_1_temperature_source_1ac665fa3d39b19b94383aa700f35f910b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/><ref refid="structshyft_1_1api_1_1_temperature_source_1ac665fa3d39b19b94383aa700f35f910b" kindref="member">temperatures</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts;<sp/>}</highlight></codeline>
<codeline lineno="104" refid="structshyft_1_1api_1_1_temperature_source_1a0e88661a550a89d8f8957e09b5b46cd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_temperature_source_1a0e88661a550a89d8f8957e09b5b46cd0" kindref="member">set_temperature</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/>ts.set(ix,<sp/>v);<sp/>}<sp/></highlight><highlight class="comment">//btk<sp/>dst<sp/>compliant<sp/>signature,<sp/>used<sp/>during<sp/>btk-interpolation<sp/>in<sp/>gridpp<sp/>exposure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structshyft_1_1api_1_1_temperature_source_1af453fa7ccab31c7ec3cfc2eb8f6637e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_temperature_source_1af453fa7ccab31c7ec3cfc2eb8f6637e6" kindref="member">set_value</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/>ts.set(ix,<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="106" refid="structshyft_1_1api_1_1_temperature_source_1a7b1ec4610e6363f6afb61457a5568a93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_temperature_source_1a7b1ec4610e6363f6afb61457a5568a93" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_temperature_source" kindref="compound">TemperatureSource</ref>&amp;<sp/>x)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_equal(x);}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structshyft_1_1api_1_1_precipitation_source" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1_precipitation_source" kindref="compound">PrecipitationSource</ref><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref><sp/>{</highlight></codeline>
<codeline lineno="110" refid="structshyft_1_1api_1_1_precipitation_source_1aaead74a8fa7ed6e68d233adbdd8a9edd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_precipitation_source_1aaead74a8fa7ed6e68d233adbdd8a9edd" kindref="member">PrecipitationSource</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/>p=<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(),<sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>ts=<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>())</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref>(p,<sp/>ts)<sp/>{}</highlight></codeline>
<codeline lineno="112" refid="structshyft_1_1api_1_1_precipitation_source_1a3c3ceba2c063eaaa6b86d1297ced65f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>&amp;<sp/><ref refid="structshyft_1_1api_1_1_precipitation_source_1a3c3ceba2c063eaaa6b86d1297ced65f0" kindref="member">precipitations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts;<sp/>}</highlight></codeline>
<codeline lineno="113" refid="structshyft_1_1api_1_1_precipitation_source_1a91196983a5d025d619984b7762f34e06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_precipitation_source_1a91196983a5d025d619984b7762f34e06" kindref="member">set_value</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ix,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/>ts.set(ix,<sp/>v);<sp/>}</highlight></codeline>
<codeline lineno="114" refid="structshyft_1_1api_1_1_precipitation_source_1a997839d68308d250cdf869a2d09a0bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_precipitation_source_1a997839d68308d250cdf869a2d09a0bca" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_precipitation_source" kindref="compound">PrecipitationSource</ref>&amp;<sp/>x)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_equal(x);}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structshyft_1_1api_1_1_wind_speed_source" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1_wind_speed_source" kindref="compound">WindSpeedSource</ref><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref><sp/>{</highlight></codeline>
<codeline lineno="118" refid="structshyft_1_1api_1_1_wind_speed_source_1adb457801a7c59269e49ae9ad33939450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_wind_speed_source_1adb457801a7c59269e49ae9ad33939450" kindref="member">WindSpeedSource</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/>p=<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(),<sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>ts=<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref>(p,<sp/>ts)<sp/>{}</highlight></codeline>
<codeline lineno="120" refid="structshyft_1_1api_1_1_wind_speed_source_1a127d7600a152fb9503fd01848d536a2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_wind_speed_source_1a127d7600a152fb9503fd01848d536a2b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_wind_speed_source" kindref="compound">WindSpeedSource</ref>&amp;<sp/>x)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_equal(x);}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structshyft_1_1api_1_1_rel_hum_source" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1_rel_hum_source" kindref="compound">RelHumSource</ref><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref><sp/>{</highlight></codeline>
<codeline lineno="124" refid="structshyft_1_1api_1_1_rel_hum_source_1a199a8ee901a4d39ea698187481b87fef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_rel_hum_source_1a199a8ee901a4d39ea698187481b87fef" kindref="member">RelHumSource</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/>p=<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(),<sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>ts=<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>())</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref>(p,<sp/>ts)<sp/>{}</highlight></codeline>
<codeline lineno="126" refid="structshyft_1_1api_1_1_rel_hum_source_1abcdfed82ca29690cb658de96125700f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_rel_hum_source_1abcdfed82ca29690cb658de96125700f8" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_rel_hum_source" kindref="compound">RelHumSource</ref>&amp;<sp/>x)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_equal(x);}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structshyft_1_1api_1_1_radiation_source" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1_radiation_source" kindref="compound">RadiationSource</ref><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref><sp/>{</highlight></codeline>
<codeline lineno="130" refid="structshyft_1_1api_1_1_radiation_source_1ab39951012b0695eb6b8e6f122dc10887" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1_radiation_source_1ab39951012b0695eb6b8e6f122dc10887" kindref="member">RadiationSource</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref><sp/>p=<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(),<sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/>ts=<ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>())</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classshyft_1_1api_1_1_geo_point_source" kindref="compound">GeoPointSource</ref>(p,<sp/>ts)<sp/>{}</highlight></codeline>
<codeline lineno="132" refid="structshyft_1_1api_1_1_radiation_source_1ae52a1f104b024c0843622fee9928a6a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_radiation_source_1ae52a1f104b024c0843622fee9928a6a5" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_radiation_source" kindref="compound">RadiationSource</ref>&amp;<sp/>x)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_equal(x);}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structshyft_1_1api_1_1a__region__environment" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1a__region__environment" kindref="compound">a_region_environment</ref><sp/>{</highlight></codeline>
<codeline lineno="136" refid="structshyft_1_1api_1_1a__region__environment_1a3723c75ab523fc6a7e8596b380ca6c9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_precipitation_source" kindref="compound">PrecipitationSource</ref><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a3723c75ab523fc6a7e8596b380ca6c9e" kindref="member">precipitation_t</ref>;</highlight></codeline>
<codeline lineno="137" refid="structshyft_1_1api_1_1a__region__environment_1a03b5329385f47e5d266ce76f01f537b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_temperature_source" kindref="compound">TemperatureSource</ref><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a03b5329385f47e5d266ce76f01f537b7" kindref="member">temperature_t</ref>;</highlight></codeline>
<codeline lineno="138" refid="structshyft_1_1api_1_1a__region__environment_1accfce50eb9b8e5cc9a9b2d26674906b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_radiation_source" kindref="compound">RadiationSource</ref><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1accfce50eb9b8e5cc9a9b2d26674906b5" kindref="member">radiation_t</ref>;</highlight></codeline>
<codeline lineno="139" refid="structshyft_1_1api_1_1a__region__environment_1ab2abfe9440d352a628715aebf80a1207" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_rel_hum_source" kindref="compound">RelHumSource</ref><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1ab2abfe9440d352a628715aebf80a1207" kindref="member">rel_hum_t</ref>;</highlight></codeline>
<codeline lineno="140" refid="structshyft_1_1api_1_1a__region__environment_1aec4e6d9a37123c2e0b70f9dcc057ad95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1_wind_speed_source" kindref="compound">WindSpeedSource</ref><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1aec4e6d9a37123c2e0b70f9dcc057ad95" kindref="member">wind_speed_t</ref>;</highlight></codeline>
<codeline lineno="142" refid="structshyft_1_1api_1_1a__region__environment_1aa8a46b2849286e5b11d95fa692112e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1aa8a46b2849286e5b11d95fa692112e2c" kindref="member">a_region_environment</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temperature=make_shared&lt;vector&lt;TemperatureSource&gt;&gt;();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precipitation=make_shared&lt;vector&lt;PrecipitationSource&gt;&gt;();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radiation=make_shared&lt;vector&lt;RadiationSource&gt;&gt;();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rel_hum=make_shared&lt;vector&lt;RelHumSource&gt;&gt;();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wind_speed=make_shared&lt;vector&lt;WindSpeedSource&gt;&gt;();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149" refid="structshyft_1_1api_1_1a__region__environment_1a320dce4879a4059104b599be26f8c4d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;TemperatureSource&gt;&gt;<sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a320dce4879a4059104b599be26f8c4d4" kindref="member">temperature</ref>;</highlight></codeline>
<codeline lineno="150" refid="structshyft_1_1api_1_1a__region__environment_1ad51d61a7be313046a0dcaa948c787778" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;PrecipitationSource&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1ad51d61a7be313046a0dcaa948c787778" kindref="member">precipitation</ref>;</highlight></codeline>
<codeline lineno="151" refid="structshyft_1_1api_1_1a__region__environment_1afc1e385a59c507e68dbd7142460db1f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;RadiationSource&gt;&gt;<sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1afc1e385a59c507e68dbd7142460db1f7" kindref="member">radiation</ref>;</highlight></codeline>
<codeline lineno="152" refid="structshyft_1_1api_1_1a__region__environment_1a00225f647176c170dda93593cddbf26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;WindSpeedSource&gt;&gt;<sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a00225f647176c170dda93593cddbf26b" kindref="member">wind_speed</ref>;</highlight></codeline>
<codeline lineno="153" refid="structshyft_1_1api_1_1a__region__environment_1a7fa6be8f30dc3de36a7877a7c6662037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;RelHumSource&gt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a7fa6be8f30dc3de36a7877a7c6662037" kindref="member">rel_hum</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>boost<sp/>python<sp/>needs<sp/>these<sp/>methods<sp/>to<sp/>get<sp/>properties<sp/>straight<sp/>(most<sp/>likely<sp/>it<sp/>can<sp/>be<sp/>fixed<sp/>by<sp/>other<sp/>means<sp/>but..)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structshyft_1_1api_1_1a__region__environment_1a8361e9a426c0399af3c6ac2b54a8d649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;TemperatureSource&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a8361e9a426c0399af3c6ac2b54a8d649" kindref="member">get_temperature</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temperature;}</highlight></codeline>
<codeline lineno="157" refid="structshyft_1_1api_1_1a__region__environment_1abb455bf24554c29287cce60a49ab3816" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1abb455bf24554c29287cce60a49ab3816" kindref="member">set_temperature</ref>(shared_ptr&lt;vector&lt;TemperatureSource&gt;&gt;<sp/>x)<sp/>{temperature=x;}</highlight></codeline>
<codeline lineno="158" refid="structshyft_1_1api_1_1a__region__environment_1a8c138a98a268c3a58a5a387a5a7d059e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;PrecipitationSource&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a8c138a98a268c3a58a5a387a5a7d059e" kindref="member">get_precipitation</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>precipitation;}</highlight></codeline>
<codeline lineno="159" refid="structshyft_1_1api_1_1a__region__environment_1a8d700d3c0120487881fe820b211d80f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a8d700d3c0120487881fe820b211d80f2" kindref="member">set_precipitation</ref>(shared_ptr&lt;vector&lt;PrecipitationSource&gt;&gt;<sp/>x)<sp/>{precipitation=x;}</highlight></codeline>
<codeline lineno="160" refid="structshyft_1_1api_1_1a__region__environment_1a99865128f36a5d98cb02b1515b2a626b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;RadiationSource&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a99865128f36a5d98cb02b1515b2a626b" kindref="member">get_radiation</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radiation;}</highlight></codeline>
<codeline lineno="161" refid="structshyft_1_1api_1_1a__region__environment_1acf67be48315c5944d11692db7b2c7e38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1acf67be48315c5944d11692db7b2c7e38" kindref="member">set_radiation</ref>(shared_ptr&lt;vector&lt;RadiationSource&gt;&gt;<sp/>x)<sp/>{radiation=x;}</highlight></codeline>
<codeline lineno="162" refid="structshyft_1_1api_1_1a__region__environment_1a312e4d032430dd001f4453d374c8ec4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;WindSpeedSource&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a312e4d032430dd001f4453d374c8ec4e" kindref="member">get_wind_speed</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wind_speed;}</highlight></codeline>
<codeline lineno="163" refid="structshyft_1_1api_1_1a__region__environment_1a3a65ffe152384d258b2b1d278b9ccdcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a3a65ffe152384d258b2b1d278b9ccdcf" kindref="member">set_wind_speed</ref>(shared_ptr&lt;vector&lt;WindSpeedSource&gt;&gt;<sp/>x)<sp/>{wind_speed=x;}</highlight></codeline>
<codeline lineno="164" refid="structshyft_1_1api_1_1a__region__environment_1ad1b6b6cfd4d531bf3d045ab4feeb6a66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;RelHumSource&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1ad1b6b6cfd4d531bf3d045ab4feeb6a66" kindref="member">get_rel_hum</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rel_hum;}</highlight></codeline>
<codeline lineno="165" refid="structshyft_1_1api_1_1a__region__environment_1a6af79091372e5aa29df0897e93fc1fd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1a__region__environment_1a6af79091372e5aa29df0897e93fc1fd7" kindref="member">set_rel_hum</ref>(shared_ptr&lt;vector&lt;RelHumSource&gt;&gt;<sp/>x)<sp/>{rel_hum=x;}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespaceshyft_1_1api_1a7000ddfe7ea6018f016e9e350fcd9ea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1timeseries_1_1point__ts" kindref="compound">shyft::timeseries::point_ts&lt;time_axis::fixed_dt&gt;</ref><sp/><ref refid="namespaceshyft_1_1api_1a7000ddfe7ea6018f016e9e350fcd9ea1" kindref="member">result_ts_t</ref>;</highlight></codeline>
<codeline lineno="169" refid="namespaceshyft_1_1api_1afcfaa9026650adacd25625447f417b99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;result_ts_t&gt;<sp/><ref refid="namespaceshyft_1_1api_1afcfaa9026650adacd25625447f417b99" kindref="member">result_ts_t_</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="176" refid="structshyft_1_1api_1_1basic__cell__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1basic__cell__statistics" kindref="compound">basic_cell_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="177" refid="structshyft_1_1api_1_1basic__cell__statistics_1a0a2291fd3d2eb93037f2df606a56e386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a0a2291fd3d2eb93037f2df606a56e386" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="178" refid="structshyft_1_1api_1_1basic__cell__statistics_1a52a6b3517697539850063c262f2a03ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a52a6b3517697539850063c262f2a03ef" kindref="member">basic_cell_statistics</ref>(<sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells):cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="structshyft_1_1api_1_1basic__cell__statistics_1aa21809df329b7b40458a84600fa5ec2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1aa21809df329b7b40458a84600fa5ec2d" kindref="member">total_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>*cells)<sp/>sum<sp/>+=<sp/>c.geo.area();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>catchment_indexes)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;c<sp/>:<sp/>*cells)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c.geo.catchment_id()<sp/>==<sp/>cid)<sp/>sum<sp/>+=<sp/>c.geo.area();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191" refid="structshyft_1_1api_1_1basic__cell__statistics_1ad3448105a3061d99a910ab90753fa0e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1ad3448105a3061d99a910ab90753fa0e0" kindref="member">forest_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>*cells)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().forest();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>catchment_indexes)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;c<sp/>:<sp/>*cells)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c.geo.catchment_id()<sp/>==<sp/>cid)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().forest();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202" refid="structshyft_1_1api_1_1basic__cell__statistics_1ac16ed0ba3da55739ad6912503b0e1421" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1ac16ed0ba3da55739ad6912503b0e1421" kindref="member">glacier_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>*cells)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().glacier();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>catchment_indexes)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;c<sp/>:<sp/>*cells)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c.geo.catchment_id()<sp/>==<sp/>cid)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().glacier();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213" refid="structshyft_1_1api_1_1basic__cell__statistics_1a22d8afe4f3d9a7c6801ea0d2539a8ee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a22d8afe4f3d9a7c6801ea0d2539a8ee9" kindref="member">lake_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>*cells)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().lake();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>catchment_indexes)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;c<sp/>:<sp/>*cells)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c.geo.catchment_id()<sp/>==<sp/>cid)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().lake();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224" refid="structshyft_1_1api_1_1basic__cell__statistics_1adf295cd2b51f340b9e329702901e162e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1adf295cd2b51f340b9e329702901e162e" kindref="member">reservoir_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>*cells)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().reservoir();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>catchment_indexes)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;c<sp/>:<sp/>*cells)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c.geo.catchment_id()<sp/>==<sp/>cid)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().reservoir();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235" refid="structshyft_1_1api_1_1basic__cell__statistics_1abcf8dc8228f0a9a87323bb9777e92f83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1abcf8dc8228f0a9a87323bb9777e92f83" kindref="member">unspecified_area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(catchment_indexes.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>*cells)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().unspecified();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cid<sp/>:<sp/>catchment_indexes)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;c<sp/>:<sp/>*cells)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)c.geo.catchment_id()<sp/>==<sp/>cid)<sp/>sum<sp/>+=<sp/>c.geo.area()*c.geo.land_type_fractions_info().unspecified();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246" refid="structshyft_1_1api_1_1basic__cell__statistics_1aa270c846f04f6dfe6c533378a7dbe82d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1aa270c846f04f6dfe6c533378a7dbe82d" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.avg_discharge;<sp/>}));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251" refid="structshyft_1_1api_1_1basic__cell__statistics_1a5e0e9569d39bfab3f30a49724aebb8eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a5e0e9569d39bfab3f30a49724aebb8eb" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.avg_discharge;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256" refid="structshyft_1_1api_1_1basic__cell__statistics_1a2c30f4f64ab83c1dbf54cfb4e3e5d95c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a2c30f4f64ab83c1dbf54cfb4e3e5d95c" kindref="member">discharge_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.avg_discharge;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="structshyft_1_1api_1_1basic__cell__statistics_1ad60b9959e543c9501625dfd371e8a2cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1ad60b9959e543c9501625dfd371e8a2cb" kindref="member">temperature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.temperature;<sp/>}));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267" refid="structshyft_1_1api_1_1basic__cell__statistics_1a496183d1ba8f941836cbc3f55615a3ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a496183d1ba8f941836cbc3f55615a3ae" kindref="member">temperature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.temperature;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272" refid="structshyft_1_1api_1_1basic__cell__statistics_1a9e3047724dececac4e956325c3cfeee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a9e3047724dececac4e956325c3cfeee9" kindref="member">temperature_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.temperature;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="structshyft_1_1api_1_1basic__cell__statistics_1ad7619c70e15ecb4dc658206ffe7d8f21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1ad7619c70e15ecb4dc658206ffe7d8f21" kindref="member">precipitation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.precipitation;<sp/>}));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283" refid="structshyft_1_1api_1_1basic__cell__statistics_1a81ec0ad70f0cf8848f66280dd590b16e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a81ec0ad70f0cf8848f66280dd590b16e" kindref="member">precipitation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.precipitation;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288" refid="structshyft_1_1api_1_1basic__cell__statistics_1a424bb721b9ef876612590bebd5366b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a424bb721b9ef876612590bebd5366b8c" kindref="member">precipitation_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.precipitation;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="structshyft_1_1api_1_1basic__cell__statistics_1a0db27901f64d4fe3e226f968f5b2701f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a0db27901f64d4fe3e226f968f5b2701f" kindref="member">radiation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.radiation;<sp/>}));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299" refid="structshyft_1_1api_1_1basic__cell__statistics_1a2574122508560c3d92549ca5db47eaf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a2574122508560c3d92549ca5db47eaf1" kindref="member">radiation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.radiation;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304" refid="structshyft_1_1api_1_1basic__cell__statistics_1a0b02241c605ebb9b9249d121d243b6db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a0b02241c605ebb9b9249d121d243b6db" kindref="member">radiation_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.radiation;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="structshyft_1_1api_1_1basic__cell__statistics_1ac95f7cc3ec0c24c81bff62d621013e2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1ac95f7cc3ec0c24c81bff62d621013e2e" kindref="member">wind_speed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.wind_speed;<sp/>}));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315" refid="structshyft_1_1api_1_1basic__cell__statistics_1ab8c1fb686a5ffb2d375d91944f19aa1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1ab8c1fb686a5ffb2d375d91944f19aa1c" kindref="member">wind_speed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.wind_speed;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320" refid="structshyft_1_1api_1_1basic__cell__statistics_1a673d891433c4912534f5bcea55bb3b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a673d891433c4912534f5bcea55bb3b47" kindref="member">wind_speed_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.wind_speed;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="structshyft_1_1api_1_1basic__cell__statistics_1a6303d385c73c9830578b6cc2227ab173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a6303d385c73c9830578b6cc2227ab173" kindref="member">rel_hum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.rel_hum;<sp/>}));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331" refid="structshyft_1_1api_1_1basic__cell__statistics_1a331bca518160156259598b26effa5700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a331bca518160156259598b26effa5700" kindref="member">rel_hum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.rel_hum;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336" refid="structshyft_1_1api_1_1basic__cell__statistics_1a18965410a3560741c796c00d03f940f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1basic__cell__statistics_1a18965410a3560741c796c00d03f940f7" kindref="member">rel_hum_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a8f54166d30c6eddf077fd3970890d177" kindref="member">env_ts</ref>.rel_hum;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="344" refid="structshyft_1_1api_1_1kirchner__cell__state__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1kirchner__cell__state__statistics" kindref="compound">kirchner_cell_state_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="345" refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a962d75be33b4916a0986adbe8546d549" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a962d75be33b4916a0986adbe8546d549" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="346" refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a9b8a60287722ebc8317ee315abbb154d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a9b8a60287722ebc8317ee315abbb154d" kindref="member">kirchner_cell_state_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1ae38849d20c3b873849a3be00beb66498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1ae38849d20c3b873849a3be00beb66498" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.kirchner_discharge;<sp/>}));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353" refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a37c329a8cf69eddc349685ac44865e46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a37c329a8cf69eddc349685ac44865e46" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.kirchner_discharge;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358" refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a89e28f217b4c28c38333a0bcd91eff33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1kirchner__cell__state__statistics_1a89e28f217b4c28c38333a0bcd91eff33" kindref="member">discharge_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.kirchner_discharge;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="366" refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics" kindref="compound">hbv_soil_cell_state_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="367" refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a551759f383bf630f5271aac8a844e55c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a551759f383bf630f5271aac8a844e55c" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="368" refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a11ac5f3525e434e3e98a179b2143bca3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a11ac5f3525e434e3e98a179b2143bca3" kindref="member">hbv_soil_cell_state_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a8e8a0645cd82ffc0e95d02b6168ed473" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a8e8a0645cd82ffc0e95d02b6168ed473" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.soil_moisture;<sp/>}));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375" refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a077f10dd7993de49bd64124841cdc014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a077f10dd7993de49bd64124841cdc014" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.soil_moisture;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380" refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a894246a957821db0fc7beb0ea0e43637" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__state__statistics_1a894246a957821db0fc7beb0ea0e43637" kindref="member">discharge_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.soil_moisture;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//To<sp/>be<sp/>checked<sp/>&amp;<sp/>controlled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics" kindref="compound">hbv_tank_cell_state_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="389" refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1ac309a04aea1d4a45f78ee4dd4356e3fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1ac309a04aea1d4a45f78ee4dd4356e3fa" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="390" refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a5f78ac1279dec6c13bb9135fb725055c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a5f78ac1279dec6c13bb9135fb725055c" kindref="member">hbv_tank_cell_state_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a53857131859e46a6167a25061058d477" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a53857131859e46a6167a25061058d477" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.tank_uz;<sp/>}));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397" refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a6016cc8ec3fbea3b6d26d0de70e0a53d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a6016cc8ec3fbea3b6d26d0de70e0a53d" kindref="member">discharge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.tank_uz;<sp/>},<sp/>ith_timestep);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402" refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a3655010640664107911b4a9134d8e242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__tank__cell__state__statistics_1a3655010640664107911b4a9134d8e242" kindref="member">discharge_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.tank_uz;<sp/>},<sp/>ith_timestep);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>be<sp/>modified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="412" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics" kindref="compound">gamma_snow_cell_state_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="413" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af2fcdb17c58f30d2c46a670ad743ea86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af2fcdb17c58f30d2c46a670ad743ea86" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="414" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a5619074f69691fa3750b1f7a35d5d17e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a5619074f69691fa3750b1f7a35d5d17e" kindref="member">gamma_snow_cell_state_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a93525f2efa7f62499c98beeb2d87b1c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a93525f2efa7f62499c98beeb2d87b1c4" kindref="member">albedo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_albedo;<sp/>}));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a4bf5cb453a7a38e4bb509617193c26ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a4bf5cb453a7a38e4bb509617193c26ab" kindref="member">albedo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_albedo;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a96000682a02483e9af6aae1f351a54db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a96000682a02483e9af6aae1f351a54db" kindref="member">albedo_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_albedo;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a822dc1d156adcbcfca8708218c176d1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a822dc1d156adcbcfca8708218c176d1a" kindref="member">lwc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_lwc;<sp/>}));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a427e40b9036e9c82fff4142241941763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a427e40b9036e9c82fff4142241941763" kindref="member">lwc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_lwc;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ad8530bd44bd98efc81d205147f4748c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ad8530bd44bd98efc81d205147f4748c7" kindref="member">lwc_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_lwc;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ab6bb20b39554012d4d23c07c1288cdae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ab6bb20b39554012d4d23c07c1288cdae" kindref="member">surface_heat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_surface_heat;<sp/>}));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a9cd841d6fc305e36ae51aa2e44700811" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a9cd841d6fc305e36ae51aa2e44700811" kindref="member">surface_heat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_surface_heat;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a002ab61642fde78c1cd7263330852794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a002ab61642fde78c1cd7263330852794" kindref="member">surface_heat_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_surface_heat;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a6583068c7ee2a895c8475f5ed269b0bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a6583068c7ee2a895c8475f5ed269b0bc" kindref="member">alpha</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_alpha;<sp/>}));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aca45909651b69d2fd70fd223c3b6626e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aca45909651b69d2fd70fd223c3b6626e" kindref="member">alpha</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_alpha;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a01109ea6ecc4fa5b487ec29744e90bde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a01109ea6ecc4fa5b487ec29744e90bde" kindref="member">alpha_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_alpha;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af86876a32b79609132de38ffb7d105e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af86876a32b79609132de38ffb7d105e5" kindref="member">sdc_melt_mean</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_sdc_melt_mean;<sp/>}));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1abc37a838b7ab2f1369b7820899981ae2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1abc37a838b7ab2f1369b7820899981ae2" kindref="member">sdc_melt_mean</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_sdc_melt_mean;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aa4b6e5cb7fc1ba99602296e58fb69579" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aa4b6e5cb7fc1ba99602296e58fb69579" kindref="member">sdc_melt_mean_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_sdc_melt_mean;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a2c1c05dd36b4ab78097c8ae9c4e8ebb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a2c1c05dd36b4ab78097c8ae9c4e8ebb9" kindref="member">acc_melt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_acc_melt;<sp/>}));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ac2421057edf88d6dab28b530c632920a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ac2421057edf88d6dab28b530c632920a" kindref="member">acc_melt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_acc_melt;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ab91d16ff9a8425c62626553f0fd80862" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ab91d16ff9a8425c62626553f0fd80862" kindref="member">acc_melt_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_acc_melt;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ae4de495a9e3c94c83b8bddcfbc59a463" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1ae4de495a9e3c94c83b8bddcfbc59a463" kindref="member">iso_pot_energy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_iso_pot_energy;<sp/>}));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a7b30c2c5e6eb90b59b938e216a25e3b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1a7b30c2c5e6eb90b59b938e216a25e3b1" kindref="member">iso_pot_energy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_iso_pot_energy;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aeec7a9034f89b951df2c8f317c81d8d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aeec7a9034f89b951df2c8f317c81d8d7" kindref="member">iso_pot_energy_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_iso_pot_energy;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aa633dd7958b8532e3e06de12f2325389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aa633dd7958b8532e3e06de12f2325389" kindref="member">temp_swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_temp_swe;<sp/>}));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aad6dae741b41fc4113f30d71c2ffdcca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1aad6dae741b41fc4113f30d71c2ffdcca" kindref="member">temp_swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_temp_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538" refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af4ebdeb3a03d944d0c77bea91d2d7d44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__state__statistics_1af4ebdeb3a03d944d0c77bea91d2d7d44" kindref="member">temp_swe_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.gs_temp_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="547" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics" kindref="compound">gamma_snow_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="548" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a67459f3e641230fc5fd569465fcced2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a67459f3e641230fc5fd569465fcced2e" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="549" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1ab6c2bf76521465c87d19bb979c0005e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1ab6c2bf76521465c87d19bb979c0005e3" kindref="member">gamma_snow_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a23139fda2197205c0327816bbe522b01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a23139fda2197205c0327816bbe522b01" kindref="member">sca</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_sca;<sp/>}));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1ac8fc9c902042e0c29bf76afbca89786d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1ac8fc9c902042e0c29bf76afbca89786d" kindref="member">sca</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_sca;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a7ffff03b1b7ae7abd2ba407601b624ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a7ffff03b1b7ae7abd2ba407601b624ee" kindref="member">sca_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_sca;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a9a80a71ded688836131712a7ebe31bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a9a80a71ded688836131712a7ebe31bc3" kindref="member">swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_swe;<sp/>}));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a0721c006f25e8d30e3bc6d04eaf4d9f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a0721c006f25e8d30e3bc6d04eaf4d9f4" kindref="member">swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a47a7562460ca4c4e0c17861a365eb3cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a47a7562460ca4c4e0c17861a365eb3cc" kindref="member">swe_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1aac6dda1aec258468b46429e875e248db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1aac6dda1aec258468b46429e875e248db" kindref="member">outflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>}));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a0c210042ae790c60e7ecf082d937106a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1a0c210042ae790c60e7ecf082d937106a" kindref="member">outflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593" refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1ab53c55775de425628af1b59e7b4da802" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1gamma__snow__cell__response__statistics_1ab53c55775de425628af1b59e7b4da802" kindref="member">outflow_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="602" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics" kindref="compound">skaugen_cell_state_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="603" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a21f387b0165056ca3d916ecf494850dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a21f387b0165056ca3d916ecf494850dc" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="604" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aa8884306e5e722f02ea6bd51f45d5d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aa8884306e5e722f02ea6bd51f45d5d89" kindref="member">skaugen_cell_state_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a4258ef3d10f49a14b1da57df1516f808" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a4258ef3d10f49a14b1da57df1516f808" kindref="member">alpha</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_alpha;<sp/>}));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aa81c83ff614ffb1e3591059b91bc7d05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aa81c83ff614ffb1e3591059b91bc7d05" kindref="member">alpha</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_alpha;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a15aa5544181f9e80e80f9484d036af24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a15aa5544181f9e80e80f9484d036af24" kindref="member">alpha_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_alpha;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a3db71b943246fb7f32e4d12f08905cb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a3db71b943246fb7f32e4d12f08905cb4" kindref="member">nu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_nu;<sp/>}));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a9574702b019cfca465bd82878546c08e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a9574702b019cfca465bd82878546c08e" kindref="member">nu</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_nu;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a13605cfcb7d7f83bea8763502208c9d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a13605cfcb7d7f83bea8763502208c9d3" kindref="member">nu_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_nu;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a6a64c29c57054e677576891fd15a2ba4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a6a64c29c57054e677576891fd15a2ba4" kindref="member">lwc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_lwc;<sp/>}));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ada963ec24773243c02e428be61e45934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ada963ec24773243c02e428be61e45934" kindref="member">lwc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_lwc;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ae70ad5cb359001ba32ba4aeed5e166cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ae70ad5cb359001ba32ba4aeed5e166cd" kindref="member">lwc_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_lwc;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ae1ebe088a6cc6c4ab6ee43caf60bb129" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ae1ebe088a6cc6c4ab6ee43caf60bb129" kindref="member">residual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_residual;<sp/>}));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a815270222b68b9180b3242801b4a7692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a815270222b68b9180b3242801b4a7692" kindref="member">residual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_residual;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aea9ee433b79dffcdbf2b1349517544b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1aea9ee433b79dffcdbf2b1349517544b5" kindref="member">residual_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_residual;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a7b49f81004be9915659a949c216ea9f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a7b49f81004be9915659a949c216ea9f2" kindref="member">swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_swe;<sp/>}));</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a1a650d3228000ba0c86803e3370c13c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a1a650d3228000ba0c86803e3370c13c7" kindref="member">swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ac8067446a00440351a4b6818fa3cc80a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1ac8067446a00440351a4b6818fa3cc80a" kindref="member">swe_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a9c4dc71959a899f74c135aee1392d72e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a9c4dc71959a899f74c135aee1392d72e" kindref="member">sca</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_sca;<sp/>}));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1af884e68749f3168ee8fce01ec2edcdc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1af884e68749f3168ee8fce01ec2edcdc0" kindref="member">sca</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_sca;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696" refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a4b140aadb5425f0c06e989d853f58c03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__state__statistics_1a4b140aadb5425f0c06e989d853f58c03" kindref="member">sca_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_sca;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="705" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics" kindref="compound">skaugen_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="706" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ae01baae43fa53d47aea857c67a7e10e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ae01baae43fa53d47aea857c67a7e10e3" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="707" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a4ab9331f606a1905407dd7525031733f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a4ab9331f606a1905407dd7525031733f" kindref="member">skaugen_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:<sp/>cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a8269a6b8e52249e42795f64757d06da8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a8269a6b8e52249e42795f64757d06da8" kindref="member">outflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>}));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a6f02ef236387d1a437012d45a3f4231b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a6f02ef236387d1a437012d45a3f4231b" kindref="member">outflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ae7b13227f1d6df30defdfe170997607c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ae7b13227f1d6df30defdfe170997607c" kindref="member">outflow_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1aef106cbcb86eae61385db0bfa6ecb027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1aef106cbcb86eae61385db0bfa6ecb027" kindref="member">total_stored_water</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_total_stored_water;<sp/>}));</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a8691e776f43b0d526189af2e68bc30be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1a8691e776f43b0d526189af2e68bc30be" kindref="member">total_stored_water</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_total_stored_water;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735" refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ac942199cfd1f5dbfd0fb50a421dec214" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1skaugen__cell__response__statistics_1ac942199cfd1f5dbfd0fb50a421dec214" kindref="member">total_stored_water_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_total_stored_water;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="744" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics" kindref="compound">hbv_snow_cell_state_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="745" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a5fe9cf2477c730bf7744cd5f6b8de138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a5fe9cf2477c730bf7744cd5f6b8de138" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="746" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a4c69a311907d35ec2b1fba95f12a38b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a4c69a311907d35ec2b1fba95f12a38b2" kindref="member">hbv_snow_cell_state_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:<sp/>cells(move(cells))<sp/>{}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a12668d9406aa0bad4cb59e317c83c71f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a12668d9406aa0bad4cb59e317c83c71f" kindref="member">swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_swe;<sp/>}));</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1aac9ca46d7b4c8f4d2244fd433d2a1f4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1aac9ca46d7b4c8f4d2244fd433d2a1f4a" kindref="member">swe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a7e06dc55848f16f046c453bf0f5d0e74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a7e06dc55848f16f046c453bf0f5d0e74" kindref="member">swe_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_swe;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a4afd5731a81b27ccb69b858eb2563bfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a4afd5731a81b27ccb69b858eb2563bfd" kindref="member">sca</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_sca;<sp/>}));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a0e2993ed3189a06418a95863bd41aed1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a0e2993ed3189a06418a95863bd41aed1" kindref="member">sca</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_sca;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774" refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a81ad42c988b17cc9ed7c07ffd2170fa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__state__statistics_1a81ad42c988b17cc9ed7c07ffd2170fa1" kindref="member">sca_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1a5b3b23f61f1aef55b5ec0345dc78ce38" kindref="member">sc</ref>.snow_sca;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="783" refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics" kindref="compound">hbv_snow_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="784" refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a02d9762039bb2fdac8df90f2814144f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a02d9762039bb2fdac8df90f2814144f1" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="785" refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a1c0addd9d441acdb913847e3e0465cfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a1c0addd9d441acdb913847e3e0465cfd" kindref="member">hbv_snow_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:<sp/>cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1ac0e66b308f6bf3cd64372cb613421e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1ac0e66b308f6bf3cd64372cb613421e50" kindref="member">outflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>}));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792" refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1abb6b4bd23d981fe31f9e0edce3746488" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1abb6b4bd23d981fe31f9e0edce3746488" kindref="member">outflow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797" refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a51379c701b4008b511a3473b8026e319" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__snow__cell__response__statistics_1a51379c701b4008b511a3473b8026e319" kindref="member">outflow_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a0b26d1059ab1c1921a192ad8874670ee" kindref="member">				sum_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.snow_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="805" refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics" kindref="compound">priestley_taylor_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="806" refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a33d248c62a7bd4ea4a1164617ed9e529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a33d248c62a7bd4ea4a1164617ed9e529" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="807" refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a624953a9ab5b640f1f7527575629ba1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a624953a9ab5b640f1f7527575629ba1d" kindref="member">priestley_taylor_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a93d3500687a427ae78dbeb40ad9a9d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a93d3500687a427ae78dbeb40ad9a9d75" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.pe_output;<sp/>}));</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814" refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1aec5e652648861bd0e4de7e431a1aedb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1aec5e652648861bd0e4de7e431a1aedb8" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.pe_output;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819" refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a2608a17873b9d0f27d60e77d1c8ab625" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1priestley__taylor__cell__response__statistics_1a2608a17873b9d0f27d60e77d1c8ab625" kindref="member">output_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.pe_output;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="827" refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics" kindref="compound">hbv_soil_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="828" refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1aafb5059f65de13430c98782a47a4f92f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1aafb5059f65de13430c98782a47a4f92f" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="829" refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1ac326006c8c58afb397aebe41e57f7bd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1ac326006c8c58afb397aebe41e57f7bd0" kindref="member">hbv_soil_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1afff07f103d004487efe8301a30586d78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1afff07f103d004487efe8301a30586d78" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.soil_outflow;<sp/>}));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836" refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1a5f6c39f99968370be19ebce9788777a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1a5f6c39f99968370be19ebce9788777a8" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.soil_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841" refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1a479173ef2e2e58496a7272ecaf4b3773" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__soil__cell__response__statistics_1a479173ef2e2e58496a7272ecaf4b3773" kindref="member">output_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.soil_outflow;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="848" refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics" kindref="compound">actual_evapotranspiration_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="849" refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a6b77b1c842b93888541a0b28435233b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a6b77b1c842b93888541a0b28435233b0" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="850" refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1ab584060007a3d0c8479d03bda23f08b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1ab584060007a3d0c8479d03bda23f08b9" kindref="member">actual_evapotranspiration_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a47a15123dc77ac5b2a40261f46c4427d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a47a15123dc77ac5b2a40261f46c4427d" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.ae_output;<sp/>}));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857" refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1af6862aef40f88bd4caad375c83fdd212" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1af6862aef40f88bd4caad375c83fdd212" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.ae_output;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862" refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a2428b33293fc194b532b20570263b893" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1actual__evapotranspiration__cell__response__statistics_1a2428b33293fc194b532b20570263b893" kindref="member">output_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.ae_output;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cell&gt;</highlight></codeline>
<codeline lineno="870" refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics" kindref="compound">hbv_actual_evapotranspiration_cell_response_statistics</ref><sp/>{</highlight></codeline>
<codeline lineno="871" refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a58835ce8c543006be4c3c8ee14ed329e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a58835ce8c543006be4c3c8ee14ed329e" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="872" refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1ac6cd41e6032638197f889b405c87a7b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1ac6cd41e6032638197f889b405c87a7b7" kindref="member">hbv_actual_evapotranspiration_cell_response_statistics</ref>(shared_ptr&lt;vector&lt;cell&gt;&gt;<sp/>cells)<sp/>:cells(cells)<sp/>{}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874" refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a7b321be1456eb5c18a32e693725dda95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref><sp/><ref refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a7b321be1456eb5c18a32e693725dda95" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classshyft_1_1api_1_1apoint__ts" kindref="compound">apoint_ts</ref>(*<ref refid="structshyft_1_1core_1_1cell__statistics" kindref="compound">shyft::core::cell_statistics</ref>::</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average_catchment_feature(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.ae_output;<sp/>}));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879" refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a1f5b9d058756c3c1b6ea7a71d978342d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a1f5b9d058756c3c1b6ea7a71d978342d" kindref="member">output</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1aaf3bdcacc09e2f20b2e81c96fd827d30" kindref="member">				catchment_feature</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.ae_output;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884" refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a35b41f7d037fdf42ee3f0c06431729d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1hbv__actual__evapotranspiration__cell__response__statistics_1a35b41f7d037fdf42ee3f0c06431729d3" kindref="member">output_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;int&gt;&amp;<sp/>catchment_indexes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ith_timestep)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">shyft::core::cell_statistics::</ref></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><ref refid="structshyft_1_1core_1_1cell__statistics_1a73c5bb9ef98437b609c73e772a163d7f" kindref="member">				average_catchment_feature_value</ref>(*cells,<sp/>catchment_indexes,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1cell" kindref="compound">cell</ref>&amp;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c.<ref refid="structshyft_1_1core_1_1cell_1acc33fa1d731a758b8b28398415d1169d" kindref="member">rc</ref>.ae_output;<sp/>},<sp/>ith_timestep);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="structshyft_1_1api_1_1geo__cell__data__io" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshyft_1_1api_1_1geo__cell__data__io" kindref="compound">geo_cell_data_io</ref><sp/>{</highlight></codeline>
<codeline lineno="900" refid="structshyft_1_1api_1_1geo__cell__data__io_1a6a5c9ea039fc302a6139288ea3b98f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1geo__cell__data__io_1a6a5c9ea039fc302a6139288ea3b98f7a" kindref="member">size</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>11;}</highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>doubles<sp/>to<sp/>store<sp/>a<sp/>gcd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="structshyft_1_1api_1_1geo__cell__data__io_1a90e83b8b1a6cc47fc84a1a42f7dda87e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1api_1_1geo__cell__data__io_1a90e83b8b1a6cc47fc84a1a42f7dda87e" kindref="member">push_to_vector</ref>(vector&lt;double&gt;&amp;v,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref>&amp;<sp/>gcd<sp/>){</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a6374ae1fa960c6491b17437035f9ece6" kindref="member">mid_point</ref>().<ref refid="structshyft_1_1core_1_1geo__point_1ab0c0f470ab80deeea81acc8b2c323cf1" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a6374ae1fa960c6491b17437035f9ece6" kindref="member">mid_point</ref>().<ref refid="structshyft_1_1core_1_1geo__point_1ab30bb0f8d3d2d7f88da1fa91ded797dc" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a6374ae1fa960c6491b17437035f9ece6" kindref="member">mid_point</ref>().<ref refid="structshyft_1_1core_1_1geo__point_1ae294c27bb353a6db2bc0f032cbdc1ab2" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1abab46d63544872edb389f7d5633351d8" kindref="member">area</ref>());</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a1f6cff6eeb1d00c61d1db153ccbb220b" kindref="member">catchment_id</ref>()));</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a20a565f1106c0cd8cace6cbcf91ab08b" kindref="member">radiation_slope_factor</ref>());</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a21060eeb575415ee3dddb95e74beda3b" kindref="member">land_type_fractions_info</ref>().<ref refid="structshyft_1_1core_1_1land__type__fractions_1a9d5b010ca1cebf05baff5102c6c0fceb" kindref="member">glacier</ref>());</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a21060eeb575415ee3dddb95e74beda3b" kindref="member">land_type_fractions_info</ref>().<ref refid="structshyft_1_1core_1_1land__type__fractions_1aa5f1752ba76c0966e62a0d4416a5b660" kindref="member">lake</ref>());</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a21060eeb575415ee3dddb95e74beda3b" kindref="member">land_type_fractions_info</ref>().<ref refid="structshyft_1_1core_1_1land__type__fractions_1a89c56252f00908383ff7e6e3ed77341a" kindref="member">reservoir</ref>());</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a21060eeb575415ee3dddb95e74beda3b" kindref="member">land_type_fractions_info</ref>().<ref refid="structshyft_1_1core_1_1land__type__fractions_1adab362bfa448ceee811c5df55d58a098" kindref="member">forest</ref>());</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(gcd.<ref refid="structshyft_1_1core_1_1geo__cell__data_1a21060eeb575415ee3dddb95e74beda3b" kindref="member">land_type_fractions_info</ref>().<ref refid="structshyft_1_1core_1_1land__type__fractions_1a48fa53265bbfcb81e20c9c3ffffcc4eb" kindref="member">unspecified</ref>());</highlight><highlight class="comment">//<sp/>not<sp/>really<sp/>needed,<sp/>since<sp/>it<sp/>can<sp/>be<sp/>computed<sp/>from<sp/>1-<sp/>theothers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914" refid="structshyft_1_1api_1_1geo__cell__data__io_1adc8452693dde9c3ea0fcb0a81762897d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>vector&lt;double&gt;<sp/><ref refid="structshyft_1_1api_1_1geo__cell__data__io_1adc8452693dde9c3ea0fcb0a81762897d" kindref="member">to_vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref>&amp;<sp/>gcd)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>v;v.reserve(11);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_to_vector(v,gcd);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(v);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919" refid="structshyft_1_1api_1_1geo__cell__data__io_1a2e3bf97a0d851d7e1817fd62c760594b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref><sp/><ref refid="structshyft_1_1api_1_1geo__cell__data__io_1a2e3bf97a0d851d7e1817fd62c760594b" kindref="member">from_raw_vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structshyft_1_1core_1_1land__type__fractions" kindref="compound">land_type_fractions</ref><sp/>ltf;<sp/>ltf.<ref refid="structshyft_1_1core_1_1land__type__fractions_1aad0dd216382547d0b3dde33599480a8a" kindref="member">set_fractions</ref>(v[6],v[7],v[8],v[9]);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/><sp/>y<sp/><sp/><sp/><sp/>z<sp/><sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>cid<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref>(<ref refid="structshyft_1_1core_1_1geo__point" kindref="compound">geo_point</ref>(v[0],v[1],v[2]),v[3],</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(v[4]),v[5],ltf);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924" refid="structshyft_1_1api_1_1geo__cell__data__io_1a9f18198796905a5526d7943e83eb3020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structshyft_1_1core_1_1geo__cell__data" kindref="compound">geo_cell_data</ref><sp/><ref refid="structshyft_1_1api_1_1geo__cell__data__io_1a9f18198796905a5526d7943e83eb3020" kindref="member">from_vector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.size()!=<sp/>size())</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_argument(</highlight><highlight class="stringliteral">&quot;geo_cell_data_io::from_vector:<sp/>size<sp/>of<sp/>vector<sp/>must<sp/>be<sp/>equal<sp/>to<sp/>geo_cell_data_io::size()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>from_raw_vector(v.data());</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Namespace<sp/>api</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>Namespace<sp/>shyft</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Data/johnbur/Dropbox/home/Programming/workspace/shyft_cmake/shyft/api/api.h"/>
  </compounddef>
</doxygen>
